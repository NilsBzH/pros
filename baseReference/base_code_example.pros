DEFINE sig_frappe()
TRACE DEL_OLD "/" + confML.getSetting("CPE.Settings.User.Identifier") + "/sig_frappe-" + aSIG + ".txt"

LOCAL resArray
LET resArray["NR"] 0
LET resArray["NC"] 3
LET resArray[0,0] "aNiveau"
LET resArray[0,1] "aBalise"
LET resArray[0,2] "aValeur"

LOCAL l_largeur_bloc 0
LOCAL l_hauteur_bloc 0
LOCAL Tab_form
LOCAL Tab_date
LOCAL l_date ""

IF aSIG = "GESTION"
    brcSIGLigne(1,"Caracteristiques","")
ELSE_IF aSIG = "TECHNIQUE"
    brcSIGLigne(1,"VariablesEnvironnement","")
END_IF

IF APDevis <> "TARIF"
    LOCAL l_vg_serie ""
    LOCAL l_val_3vtx ""
    LOCAL l_collection ""
    LOCAL l_chassis ""
    LOCAL l_ptr_ouvr_klf_val ""
    LOCAL l_petite_porte "N"
    LOCAL l_chassis_fam ""
    LOCAL l_code_pc ""
    LOCAL l_compteur_ens 0
    LOCAL l_compteur 1
    LOCAL l_famille ""
    LOCAL l_req ""
    LOCAL l_nb_zone 0
    LOCAL l_nom_zone ""
    LOCAL l_type_zone ""
    LOCAL l_code_remplissage ""
    LOCAL l_boucle_vit 1
    LOCAL Tab_vitrage
    LOCAL Tab
    LOCAL tab_pt_bois
    LOCAL l_code_vitrage
    LOCAL l_code_vitrage_ext
    LOCAL l_code_vitrage_isolant
    LOCAL Tab_perf
    LOCAL Tab_monobloc
    LOCAL Tab_req
    LOCAL l_code_montant
    LOCAL l_categ_dim
    LOCAL l_pose
    LOCAL l_iar
    LOCAL l_itr
    LOCAL l_le_no_ligne ""
    LOCAL l_hauteur_poignee_180 1
    LOCAL l_contexte_vitrage 1
    LOCAL l_ptrmodele ""
    LOCAL l_forme ""
    LOCAL l_nom_serie ""
    LOCAL l_Ptr_serie ""
    LOCAL l_Ptr_coul_access ""
    LOCAL l_Ptr_prise_de_mesure ""
    LOCAL l_ptr_code_trav_1 ""
    LOCAL l_ptr_code_trav_2 ""
    LOCAL l_ptr_code_mont_1 ""
    LOCAL l_ptr_code_mont_2 ""
    LOCAL l_position_x_t1 0
    LOCAL l_position_y_t1 0
    LOCAL l_position_x_t2 0
    LOCAL l_position_y_t2 0
    LOCAL l_position_x_m1 0
    LOCAL l_position_y_m1 0
    LOCAL l_position_x_m2 0
    LOCAL l_position_y_m2 0
    LOCAL l_ouverture
    LOCAL l_sens ""
    LOCAL l_vitrage_sf
    LOCAL l_hauteur_monobloc 0
    LOCAL l_largeur_monobloc 0
    LOCAL l_sens_monobloc ""
    LOCAL l_numero_ouvrant "1"
    LOCAL l_numero_zone 1
    LOCAL l_taille ""
    LOCAL l_semi_fixe ""
    LOCAL l_modele_porte_sf
    LOCAL l_numero_fixe "1"
    LOCAL l_ptr_type_traverse ""
    LOCAL l_vitrage_ouvrant ""
    LOCAL l_argon
    LOCAL l_famille_remplissage ""
    LOCAL l_type ""
    LOCAL l_presence_ptbois 0
    LOCAL l_presence_ptbois_ouvr 0
    LOCAL l_presence_ptbois_fixe 0
    LOCAL l_petit_bois_txt
    LOCAL l_nom_fichier_ptbois
    LOCAL l_montage_ptbois ""
    LOCAL l_nb_hor_ptbois ""
    LOCAL l_nb_ver_ptbois ""
    LOCAL l_res
    LOCAL l_ouvrant_perso ""
    LOCAL l_numero_ptbois 0
    LOCAL l_type_pb ""
    LOCAL l_type_pb_fixe ""
    LOCAL l_type_traverse ""
    LOCAL l_vitrage ""
    LOCAL l_grp_vit
    LOCAL l_epaisseur
    LOCAL l_type_trav ""
    LOCAL l_nbre_traverse 0
    LOCAL l_modele_porte ""
    LOCAL l_nbre_vt
    LOCAL l_plinthe ""
    LOCAL l_cas_panneau_deco "N"
    LOCAL vg_serie_chassis ""
    LOCAL l_type_chassis
    LOCAL l_code_famille ""
    LOCAL tab_etiquette
    LOCAL l_cadence ""
    LOCAL l_commentaire_acotherm
    LOCAL l_acotherm
    LOCAL l_serie
    LOCAL l_performance_bloc_baie ""
    LOCAL l_val_acotherm ""
    LOCAL l_kl ""
    LOCAL l_surface_rb 0
    LOCAL l_surface_dl 0
    LOCAL l_fermeture ""
	LOCAL l_c_categ_dim ""
	LOCAL l_largeur_ouvrant 0
	LOCAL l_pose_trav_ouvrant
	LOCAL l_posit_traverse 0
	LOCAL l_hauteur_traverse 0
	LOCAL l_deduc_appui
	LOCAL l_H1 0
	LOCAL l_H2 0
	LOCAL l_L1 0
	LOCAL l_L2 0
	LOCAL l_deduc_allege_o
	LOCAL l_dist_ouvr
	LOCAL l_pose_trav_c
	LOCAL l_code_trav1 ""
	LOCAL l_code_trav2 ""
	LOCAL l_code_mont1 ""
	LOCAL l_code_mont2 ""
	LOCAL l_trav_dorm 0
	LOCAL l_mont_dorm 0
	LOCAL l_hauteur_poignee
	LOCAL l_nbre_zones_adj 0
	LOCAL l_cas_trav_fixe_cadg 0
	LOCAL l_ensemble "N"
	LOCAL l_serie_chassis
	LOCAL l_code_sous_famille
	LOCAL l_hauteur_allege
	LOCAL l_code_montant_int
	LOCAL l_ptr_code_montant_int
	LOCAL l_code_accessoire
	LOCAL l_decor
	LOCAL l_reference_ouvrant ""
	LOCAL l_milieu_ouvrant
	LOCAL l_hauteur_c
	LOCAL l_ventil
	LOCAL l_bloc_fenetre "0"
	LOCAL l_pos_trav_kloc 0
	LOCAL l_pos_trav_kloc_bis 0
	LOCAL l_code_mont_1 ""
	LOCAL l_code_mont_2 ""
	LOCAL l_code_trav_1 ""
	LOCAL l_code_trav_2 ""
	LOCAL l_enroulement ""
	LOCAL l_tablier ""
	LOCAL l_recherche_etiquette
	LOCAL tab_etiquette
	LOCAL tab_vit
	LOCAL l_surface
	LOCAL l_position_battement 0
	LOCAL l_numero_trou ""
	LOCAL l_numero_trou2 1
	LOCAL l_numero_vs ""
	LOCAL l_numero_sf ""
	LOCAL l_methode_chacal_vitrage "OUVRANT"
	LOCAL l_nb_vtx 1
	LOCAL l_deduction_battement 0
	LOCAL l_code_trav_3 ""
	LOCAL l_position_x_t3 0
	LOCAL l_position_y_t3 0
	LOCAL l_ptr_code_trav_3 ""
	LOCAL l_code_trav_4 ""
	LOCAL l_fixe_t4 ""
	LOCAL l_position_x_t4 0
	LOCAL l_position_y_t4 0
	LOCAL l_ptr_code_trav_4 ""
	LOCAL l_code_trav_5 ""
	LOCAL l_fixe_t5 ""
	LOCAL l_position_x_t5 0
	LOCAL l_position_y_t5 0
	LOCAL l_ptr_code_trav_5 ""
	LOCAL l_code_trav_6 ""
	LOCAL l_fixe_t6 ""
	LOCAL l_position_x_t6 0
	LOCAL l_position_y_t6 0
	LOCAL l_ptr_code_trav_6 ""
	LOCAL l_critere_lancement ""
	LOCAL l_degondage 0
	LOCAL l_op_nbr_ouvrant
	LOCAL l_poids_volet_roulant 0
	LOCAL l_poids_remplissage 0
	LOCAL l_position_mtouvrant 0
	LOCAL l_vitrages_egaux_horiz ""
	LOCAL l_num_vitrage_vertical 1
	LOCAL l_PO 1 /* A mettre a 0 si on ne veut pas de PO */
	LOCAL l_TypeFrappe ""
	LOCAL l_HorsGabarit ""
	LOCAL l_DormantComplexe ""
	LOCAL l_nbre_vitrage 0 /* Remplace vg_nbre_vitrage */
	LOCAL l_compteur_vitrage 0
	LOCAL l_casgbnn ""
	LOCAL l_reference_battement ""
	LOCAL l_alim_mont ""
	LOCAL l_description
	LOCAL tab_description
	LOCAL l_bloc_fenetre "0" /* Pas de présence de BLOC CLASSIC ou BLOC ID */
	LOCAL l_kl "" /* remplace vg_kl"KLAIR_" */
	LOCAL l_famille_ensemble ""
	LOCAL l_hauteur_ouvrant 0
	LOCAL l_boucle_vit 1 /* Remplace vg_boucle_vit */
	LOCAL l_poids_remplissage 0 /* Remplace vg_poids_remplissage */
	LOCAL l_op_posit_montant /* Remplace vs_op_posit_montant */
	LOCAL l_pb_haut_x 0
	LOCAL l_pb_haut_x1 0
	LOCAL l_pb_haut_x2 0
	LOCAL l_pb_haut_x3 0
	LOCAL l_sens_ens ""
	LOCAL l_design ""
	LOCAL l_vitrage_sf ""
	LOCAL l_klpe_tierce_deco "N"
	LOCAL l_aev_air ""
	LOCAL l_aev_eau ""
	LOCAL l_aev_vent ""
	LOCAL l_larg_vant 0
	LOCAL tab_impression
	LOCAL l_op_nbr_ouvrant 0
	LOCAL l_code_modele ""
	LOCAL l_table_coef ""
	LOCAL l_k1 0
	LOCAL Tab_coef_tr
	LOCAL Tab_coef_coul
	LOCAL Tab_sql
	LOCAL l_groupe_couleur ""
	LOCAL l_prix_promo 0 /* Remplace vg_prix_promo A RECALCULER AVANT LE TARIF */
	LOCAL l_prix_ouvrant 0
	LOCAL l_prix_panneau_vs 0
	LOCAL l_prix_panneau_sf 0
	LOCAL l_coef_public 0
	LOCAL l_critere ""
	LOCAL l_motif_ext ""
	LOCAL l_motif_int ""
	LOCAL l_decor_ext ""
	LOCAL l_decor_int ""
	LOCAL l_aspect_ext ""
	LOCAL l_aspect_int ""
	LOCAL l_sav_zone_vit 1
	LOCAL l_vitrage_tradition ""
	LOCAL l_nom_modele ""
	LOCAL l_poignee_ext ""
	LOCAL l_poignee_int ""
	LOCAL l_couleur_cache ""
	LOCAL l_serrure ""
	LOCAL l_cylindre ""
	LOCAL l_poignee_sf ""
	LOCAL l_sens_ouverture ""
	LOCAL l_ventilation ""
	LOCAL l_deduction_klpv 0
	LOCAL l_largeur_sf 0
	LOCAL l_val_croisillon_filant 1
	LOCAL l_longueur_profil 0
	LOCAL l_posit_montant 0
	LOCAL l_nbre_montant 0
	LOCAL l_code_mont_3 ""
	LOCAL l_ptr_code_mont_3 ""
	LOCAL l_position_x_m3 0
	LOCAL l_position_y_m3 0
	LOCAL l_code_mont_4 ""
	LOCAL l_ptr_code_mont_4 ""
	LOCAL l_position_x_m4 0
	LOCAL l_position_y_m4 0
	LOCAL l_code_mont_5 ""
	LOCAL l_ptr_code_mont_5 ""
	LOCAL l_position_x_m5 0
	LOCAL l_position_y_m5 0
	LOCAL l_code_mont_6 ""
	LOCAL l_ptr_code_mont_6 ""
	LOCAL l_position_x_m6 0
	LOCAL l_position_y_m6 0
	LOCAL l_couleur_ext_panneau ""
    LOCAL l_couleur_int_panneau ""
	LOCAL l_klsh 0 /* présence option KLSH */
    LOCAL l_ceramique ""
    LOCAL l_decor_int_klpl ""
    LOCAL l_cache_cylindre ""
    LOCAL l_entrebailleur ""
    LOCAL l_commande_LED ""
	LOCAL l_nb_ouvrants 0
	LOCAL l_nb_vitrages_fixes 0
	LOCAL l_pilotage "0"
    LOCAL l_detecteur ""
    LOCAL l_FixedType ""
    LOCAL l_ProductLine ""
	
	IF vg_type_devis = "S"
		IF IsDefined(s_decor_exterieur) = TRUE
			LET l_decor_ext s_decor_exterieur
		ELSE_IF IsDefined(s_couleur) = TRUE
			LET l_decor_ext (SUBSTR s_couleur 1 2)
		ELSE /* cas de colori autre choisi par le client  */
			LET l_decor_ext "BR"
		END_IF
		IF IsDefined(s_decor_interieur) = TRUE
			LET l_decor_int s_decor_interieur
		ELSE_IF IsDefined(s_couleur) = TRUE
			LET l_decor_int (SUBSTR s_couleur 4 2)
		ELSE /* cas de colori autre choisi par le client  */
			LET l_decor_int "BR"
		END_IF
	END_IF
	
	LET l_vg_serie s_gamme /* "KLFP" , "KLP" , "KLPR", "KLAIR" */
	IF s_gamme = "KLFP_FPI" /* ajout FPI TBR le 17/06/2020 */
        LET l_vg_serie "KLFP"
    ELSE_IF s_gamme = "KLAIR_FPI"
        LET l_vg_serie "KLAIR"
    END_IF
    
    IF ((c_cas_ensemble = "1") OU (IsDefined(s_type_nn) = TRUE))
		IF ((c_chassis = "P2E") OU (c_chassis = "P2I"))
			LET l_degondage 1
		END_IF
		LET l_largeur_ouvrant s_largeur
		LET l_hauteur_ouvrant c_hauteur
		LET l_chassis c_chassis
		LET l_c_categ_dim c_categ_dim
		LET l_poids_remplissage c_poids_remplissage
		IF IsDefined(s_type_nn) = TRUE
			SI ((s_type_nn = "CCNN") OU (s_type_nn = "NNC2R") OU (s_type_nn = "NNC3R"))
				SOIT l_famille "0431"
				SI s_zone = 1
					SI s_type_nn = "NNC3R"
						SOIT l_vg_serie "KLC3"
					SINON
						SOIT l_vg_serie "KLC"
					FIN_SI
				FIN_SI
			SINON_SI ((s_type_nn = "CRTNN") OU (s_type_nn = "NNC2N") OU (s_type_nn = "NNC3N"))
				SOIT l_famille "0430"
				SI s_zone = 1
					SOIT l_serie_chassis "KL-C2R"
					SI s_type_nn = "NNC3N"
						SOIT l_vg_serie "KLC3"
					SINON
						SOIT l_vg_serie "KLC"
					FIN_SI
				FIN_SI
			SINON_SI ((s_type_nn = "NN") OU (s_type_nn = "NNPRF") OU (s_type_nn = "NN001") OU (s_type_nn = "TNN"))
				SOIT l_famille "0110"
				SI ((s_type_nn = "NN") OU (s_type_nn = "NNPRF"))
					SOIT l_vg_serie "KLE"
				SINON
					SOIT l_vg_serie "KLF"
				FIN_SI
			SINON_SI ((s_type_nn = "NN010") OU (s_type_nn = "NN012") OU (s_type_nn = "GRTNN") OU (s_type_nn = "NNGEN") OU (s_type_nn = "NNGIN") OU (s_type_nn = "NN017") OU (s_type_nn = "NN019"))
				SOIT l_famille "0430"
				SI ((s_type_nn = "GRTNN") OU (s_type_nn = "NNGEN") OU (s_type_nn = "NNGIN"))
    				SOIT l_vg_serie "KLG"
                SINON_SI ((s_type_nn = "NN017") OU (s_type_nn = "NN019"))
					SOIT l_vg_serie "KLBG"
				SINON_SI s_type_nn = "NN010"
					SOIT l_vg_serie "KLBC"
				SINON_SI s_type_nn = "NN012"
					SOIT l_vg_serie "KLBC3"
				FIN_SI
			SINON_SI ((s_type_nn = "NN007") OU (s_type_nn = "NN018"))
				SOIT l_famille "0749"
				SOIT l_vg_serie "KLF"
			SINON_SI s_type_nn = "NN008"
				SOIT l_famille "0753"
				SOIT l_vg_serie "KLOC"
			SINON_SI s_type_nn = "NN009"
				SI s_nb_vtx = "1VTL"
					SOIT l_famille "0753"
				SINON
					SOIT l_famille "0754"
				FIN_SI
				SOIT l_vg_serie "KLPM"
            SINON_SI s_type_nn = "NN023"
    			SI s_nb_vtx = "1VTL"
					SOIT l_famille "0755"
				SINON
					SOIT l_famille "0756"
				FIN_SI
				SOIT l_vg_serie "KLPL"
        	SINON_SI ((s_type_nn = "NN011") OU (s_type_nn = "NN016") OU (s_type_nn = "NN024"))
				SOIT l_famille "0769"
				SOIT l_vg_serie "KLFP"
			SINON_SI s_type_nn = "NN006"
				SOIT l_famille "0803"
				SOIT l_vg_serie "KLFP"
			SINON_SI s_type_nn = "NN005"
				SOIT l_famille "0804"
				SOIT l_vg_serie "KLFP"
			SINON_SI s_type_nn = "NN014"
				SOIT l_famille "0803"
				SOIT l_vg_serie "KLF"
			SINON_SI s_type_nn = "NN015"
				SOIT l_famille "0804"
				SOIT l_vg_serie "KLF"
            SINON_SI s_type_nn = "NN020"
                SOIT l_famille "0305"
                SOIT l_vg_serie "KLGT"
            SINON_SI s_type_nn = "NN021"
                SOIT l_famille "0247"
                SOIT l_vg_serie "KLT"
            SINON_SI s_type_nn = "NN022"
                SOIT l_famille "0306"
                SOIT l_vg_serie "KLPS"
            SINON_SI s_type_nn = "NN004"
                SI s_collection = "G9"
        		    SI s_nb_vtx = "1VTL"
                        SOIT l_famille "0789"
                    SINON
                        SOIT l_famille "0790"
                    FIN_SI
                    SOIT l_vg_serie "KLPV"
                SINON
            	    SI s_nb_vtx = "1VTL"
        			    SOIT l_famille "0731"
                    SINON
            		    SOIT l_famille "0732"
                    FIN_SI
                    SOIT l_vg_serie "KLP"
                FIN_SI
            SINON_SI s_type_nn = "NN013"
                SI s_collection = "G9"
            	    SI s_nb_vtx = "1VTL"
                        SOIT l_famille "0789"
                    SINON
                        SOIT l_famille "0790"
                    FIN_SI
                    SOIT l_vg_serie "KLPV"
                SINON_SI ((s_collection = "G5") OU (s_collection = "G6") OU (s_collection = "G7"))
                    SI s_nb_vtx = "1VTL"
                        SOIT l_famille "0731"
                    SINON
                        SOIT l_famille "0732"
                    FIN_SI
                    SOIT l_vg_serie "KLP"
                SINON
                    SI s_nb_vtx = "1VTL"
                        SOIT l_famille "0753"
                    SINON
                        SOIT l_famille "0754"
                    FIN_SI
                    SOIT l_vg_serie "KLPM"
                FIN_SI
			SINON
				SOIT l_famille "0709"
				SOIT l_vg_serie "KLF"
			FIN_SI
		ELSE
			LET l_req "SELECT DISTINCT FAMILLE,NB_VANTAUX FROM " + confML.getBdtTableName("TD_CHASSIS") + " WHERE CODE='" + c_code_chassis_calcul + "'"
			+ " AND LANGUE = '"+ UPPER APLangue +"'"
			SQL_QUERY l_req IN "Tab"
			IF Tab["NR"] = 1
				LET l_famille STR Tab[1,0]
				LET l_nbre_vt NUMBER Tab[1,1]
			ELSE
				LET l_req "SELECT FAMILLE,NB_VANTAUX FROM " + confML.getBdtTableName("TD_CHASSIS")
				   + " WHERE PRODUIT_CONF='" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) + "-P' AND TYPE_DORMANT='" + c_type_dormant + "'"
				   + "   AND CATEG_DIM='" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_categ_dim.value")) + "'"
				   + " AND LANGUE = '"+ UPPER APLangue +"'"
				SQL_QUERY l_req IN "Tab"
				LET l_famille STR Tab[1,0]
				LET l_nbre_vt NUMBER Tab[1,1]
			END_IF
		END_IF
		IF IsDefined(l_nbre_vt) = FALSE
			LET l_nbre_vt 1
		END_IF
		IF IsDefined(s_collection) = TRUE
			LET l_collection s_collection
			IF ((l_collection = "G1") OU (l_collection = "G2") OU (l_collection = "G3") OU (l_collection = "G4") OU (l_collection = "G8") OU (l_collection = "G10"))
				LET l_vg_serie "KLPM"
			ELSE_IF l_collection = "G9"
				LET l_vg_serie "KLPV"
			ELSE_IF l_collection = "G11"
				LET l_vg_serie "KLPL" /* TB le 14/05/18 : ajout KLPL */
			END_IF
		END_IF
		IF IsDefined(s_semi_fixe) = TRUE
			LET l_semi_fixe s_semi_fixe
		END_IF
		IF ((IsDefined(s_sens) = TRUE) ET (IsDefined(l_nbre_vt) = TRUE))
			IF l_nbre_vt = 2
				IF s_sens = "TG"
					LET l_sens "D"
				ELSE_IF s_sens = "TD"
					LET l_sens "G"
				ELSE
					LET l_sens s_sens
				END_IF
			ELSE
				IF s_sens = "TG"
					LET l_sens "G"
				ELSE_IF s_sens = "TD"
					LET l_sens "D"
				ELSE
					LET l_sens s_sens
				END_IF
			END_IF
		END_IF
		IF IsDefined(s_collection) = TRUE
			IF s_collection <> "G7"
				LET l_cas_panneau_deco "O"
				LET l_modele_porte s_modele_porte
				LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
				IF IsDefined(s_motif_ext) = TRUE
					LET l_motif_ext s_motif_ext
				END_IF
				IF IsDefined(s_motif_int) = TRUE
					LET l_motif_int s_motif_int
				END_IF
				IF IsDefined(s_plinthe) = TRUE
					LET l_plinthe s_plinthe
				END_IF
				IF IsDefined(s_vitrage_tradition) = TRUE
					LET l_vitrage_tradition (s_vitrage_tradition + "-" + s_motif_vitrage)
				ELSE_IF IsDefined(s_porte_acoustique) = TRUE
					IF s_porte_acoustique = "O"
						LET l_vitrage_tradition "acoustique"
					END_IF
				END_IF
				IF IsDefined(vs_poignee_ext) = TRUE
					LET l_poignee_ext vs_poignee_ext
				END_IF
				IF IsDefined(vs_poignee_int) = TRUE
					LET l_poignee_int vs_poignee_int
				END_IF
				IF IsDefined(vs_couleur_cache) = TRUE
					LET l_couleur_cache vs_couleur_cache
				END_IF
				IF IsDefined(vs_serrure) = TRUE
					LET l_serrure vs_serrure
				END_IF
				IF IsDefined(vs_poignee_sf) = TRUE
					LET l_poignee_sf vs_poignee_sf
				END_IF
            /* AJO - 27/10/2021 - gestion des portes duo et trio en KLPE */
            ELSE_IF IsDefined(s_modele_porte) = TRUE
                IF s_modele_porte <> "G7-M4"
                   	LET l_modele_porte s_modele_porte
    				LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
                FIN_SI
			END_IF
			IF IsDefined(s_plinthe) = TRUE
				LET l_plinthe s_plinthe
			END_IF
		ELSE_IF IsDefined(s_modele_porte) = TRUE
			LET l_modele_porte s_modele_porte
			LET l_cas_panneau_deco "O"
		END_IF
        IF IsDefined(s_ceramique) = TRUE
    		IF s_ceramique <> "ONDE"
                LET l_ceramique s_ceramique
            END_IF
		END_IF
        IF l_vg_serie = "KLPL"
            IF IsDefined(s_modele_porte) = TRUE
                IF ((s_modele_porte = "G11-M1") OU (s_modele_porte = "G11-M2") OU (s_modele_porte = "G11-M10") OU (s_modele_porte = "G11-M12") OU (s_modele_porte = "G11-M14") OU (s_modele_porte = "G11-M16")) 
                    IF ((l_ceramique = "C1") OU (l_ceramique = "C2") OU (l_ceramique = "C3"))
                        LET l_decor_int_klpl "USINEES"
                    ELSE
                        LET l_decor_int_klpl "3D"
                    END_IF
                ELSE
                    LET l_decor_int_klpl "USINEES"
                END_IF
            END_IF
            IF IsDefined(s_decor_int) = TRUE
                IF s_decor_int = "MIROIR"
            	    LET l_decor_int_klpl s_decor_int
                END_IF
            END_IF        
		END_IF
		IF IsDefined(vs_cylindre) = TRUE
			LET l_cylindre vs_cylindre
		END_IF
        IF IsDefined(vs_cache_cylindre) = TRUE
    		LET l_cache_cylindre vs_cache_cylindre
		END_IF
        IF IsDefined(vs_entrebailleur) = TRUE
        	IF vs_entrebailleur <> "N"
                LET l_entrebailleur "VERROU"
            ELSE
                LET l_entrebailleur vs_entrebailleur
            END_IF
		END_IF
        IF IsDefined(vs_commande_LED) = TRUE
            IF vs_commande_LED = "LED_DETECTEUR"
                LET l_commande_LED "CAPTEUR"
            END_IF
        END_IF
		IF l_cas_panneau_deco = "N"
			IF IsDefined(c_type_vitrage) = TRUE
				LET l_vitrage_ouvrant c_type_vitrage
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage_ouvrant + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(s_vitrage_argon) = TRUE
					IF s_vitrage_argon = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage) = TRUE
					IF s_filmage_vitrage = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage_h) = TRUE
					IF s_filmage_vitrage_h = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				IF IsDefined(s_couleur_ext_panneau) = TRUE
					LET l_couleur_ext_panneau s_couleur_ext_panneau
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(s_couleur_int_panneau) = TRUE
    				LET l_couleur_int_panneau s_couleur_int_panneau
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			ELSE_IF IsDefined(c_type_vitrage_h) = TRUE
				LET l_vitrage_ouvrant c_type_vitrage_h
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage_ouvrant + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(s_vitrage_argon_h) = TRUE
					IF s_vitrage_argon_h = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "A")
					END_IF
				END_IF
    			/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage) = TRUE
					IF s_filmage_vitrage = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage_h) = TRUE
					IF s_filmage_vitrage_h = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */                
				IF IsDefined(s_couleur_ext_panneau_h) = TRUE
					LET l_couleur_ext_panneau s_couleur_ext_panneau_h
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(s_couleur_int_panneau_h) = TRUE
    				LET l_couleur_int_panneau s_couleur_int_panneau_h
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			END_IF
		END_IF
		IF IsDefined(c_hauteur_monobloc) = TRUE
			LET l_hauteur_monobloc c_hauteur_monobloc
		END_IF
		IF IsDefined(c_largeur_monobloc) = TRUE
			LET l_largeur_monobloc c_largeur_monobloc
		END_IF
		IF ((IsDefined(s_larg_vant) = TRUE) ET (IsDefined(s_largeur_o) = TRUE))
			LET l_largeur_sf (s_largeur_o - s_larg_vant)
		END_IF
		IF IsDefined(c_petite_porte) = TRUE
			LET l_petite_porte c_petite_porte
		END_IF
        /* CT335 */
		IF ((l_vg_serie = "KLFP") ET (IsDefined(c_largeur_vs) = TRUE))
			IF ((c_largeur_vs > 1036) OU ((IsDefined(c_largeur_sf) = TRUE) ET (c_largeur_sf > 1036)) OU ((c_poids_remplissage/l_nbre_vt) > 65)) /* (on compte 5 kg de profil) */
				LET l_hauteur_poignee_180 0
			END_IF	
		END_IF
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
			LET l_hauteur_poignee_180 0
		END_IF
        /* CT335 */
        /* AJO - 20210915 - DDS2113 : EDGE ENSEMBLE AUTRES TRAVERSES DE 98 MM */    
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
			LET l_nbre_vitrage (2 * l_nbre_vt)
		ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE))
			LET l_nbre_vitrage ((s_nbre_traverse + 1) * l_nbre_vt)
		ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
			LET l_nbre_vitrage ((s_nbre_montant + 1) * l_nbre_vt)
        /* AJO - 27/11/2021 - cas des porte duo et trio en klpe */
        ELSE_IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G7-M3") ET IsDefined(s_nbre_traverse) = TRUE)
            LET l_nbre_vitrage ((s_nbre_traverse + 1) * l_nbre_vt)             
        ELSE_IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G7-M2"))
            LET l_nbre_vitrage (2 * l_nbre_vt)
		ELSE_IF IsDefined(s_type_nn) = TRUE
			LET l_nbre_vitrage 0
		ELSE
			LET l_nbre_vitrage l_nbre_vt
		END_IF
        IF IsDefined(s_detecteur) = TRUE
            IF s_detecteur = "DVI"
                LET l_detecteur s_detecteur
            ELSE_IF s_detecteur = "DOA"
                LET l_detecteur "DO"
            END_IF
        END_IF
	ELSE
		LET l_largeur_ouvrant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")
		LET l_hauteur_ouvrant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_hauteur_o.value")
		LET l_chassis confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")
		LET l_c_categ_dim confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_categ_dim.value")
		IF l_chassis = "FIXE"
			LET l_req "SELECT DISTINCT FAMILLE,NB_VANTAUX FROM " + confML.getBdtTableName("TD_CHASSIS") + " WHERE CODE='" + c_code_chassis_calcul + "'"
			+ " AND LANGUE = '"+ UPPER APLangue +"'"
		ELSE
			LET l_req "SELECT DISTINCT FAMILLE,QTY_VANTAUX FROM " + confML.getBdtTableName("TD_ENSEMBLE") + " WHERE ID_ENSEMBLE='" + c_code_chassis_calcul + "'" + " AND LANGUE = '"+ UPPER APLangue +"'"
		END_IF
		SQL_QUERY l_req IN "Tab"
		IF Tab["NR"] = 1
			LET l_famille STR Tab[1,0]
			LET l_nbre_vt NUMBER Tab[1,1]
		ELSE
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) = FALSE
				LET l_chassis_fam "FIXE"
				IF ((c_type_dormant <> "KL50") ET (c_type_dormant <> "KL60") ET (c_type_dormant <> "KL40"))
					LET l_chassis_fam (l_chassis_fam + "-P")
                ELSE_IF ((c_type_dormant = "KL60") OR (c_type_dormant = "KL40"))
                    LET l_chassis_fam (l_chassis_fam + "-T")
				END_IF
			ELSE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P1"
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7"))
						LET l_chassis_fam "PE1"
					ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G11")
                        LET l_chassis_fam "PL1" /* TB le 17/05/18 : ajout KLPL */
    					LET l_nbre_vt 1
                    ELSE
						LET l_chassis_fam "PM"
						LET l_nbre_vt 1
					END_IF
				ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2I"))
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7"))
						LET l_chassis_fam "PE2"
					ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G11")
                        LET l_chassis_fam "PL2" /* TB le 17/05/18 : ajout KLPL */
        				LET l_nbre_vt 2
                    ELSE
						LET l_chassis_fam "PM"
						LET l_nbre_vt 2
					END_IF
				ELSE_IF SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 1 2 = "PR"
					LET l_chassis_fam "P" + (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 3 1) + "R" + (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 4 1)
				ELSE_IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) "_AIR" > 0
					LET l_chassis_fam ("KLAIR_" + (REPLACE_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) "_AIR" "") + "-P")
				ELSE_IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 1 2) = "GT"
					LET l_chassis_fam SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 1 4
				ELSE
                    IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FA2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "OB2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FS2I"))
                        LET l_chassis_fam SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) 1 3
                    ELSE
    					LET l_chassis_fam confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")
                    END_IF
					IF ((c_type_dormant <> "KL50") ET (c_type_dormant <> "KL60") ET (c_type_dormant <> "KL40"))
						LET l_chassis_fam (l_chassis_fam + "-P")
                    ELSE_IF ((c_type_dormant = "KL60") OR (c_type_dormant = "KL40"))
                        LET l_chassis_fam (l_chassis_fam + "-T")
					END_IF
				END_IF
			END_IF
			LET l_req "SELECT FAMILLE,NB_VANTAUX FROM " + confML.getBdtTableName("TD_CHASSIS")
			   + " WHERE PRODUIT_CONF='" + l_chassis_fam + "' AND TYPE_DORMANT='" + c_type_dormant + "'"
			   + " AND CATEG_DIM='" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_categ_dim.value")) + "'"
			IF IsDefined(l_nbre_vt) = TRUE
				LET l_req l_req + " AND NB_VANTAUX=" + STR l_nbre_vt
			END_IF
			LET l_req l_req + " AND LANGUE = '"+ UPPER APLangue +"'"
			SQL_QUERY l_req IN "Tab"
			LET l_famille STR Tab[1,0]
			LET l_nbre_vt NUMBER Tab[1,1]
		END_IF
		LET l_compteur 1
		WHILE l_compteur <= c_nb_zone
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) = TRUE
				IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2I"))
					LET l_degondage (l_degondage + 1)
				ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P1") ET (vg_societe = "CAIB"))
					IF ((s_ensemble = "IMP") ET (c_hauteur < 2410))
						LET l_degondage (l_degondage + 0)
					ELSE
						LET l_degondage (l_degondage + 0.5)
					END_IF
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_poids_remplissage.value")) = TRUE
				LET l_poids_remplissage (l_poids_remplissage + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_poids_remplissage.value")))
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
				LET l_collection confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name")
				IF ((l_collection = "G1") OU (l_collection = "G2") OU (l_collection = "G3") OU (l_collection = "G4") OU (l_collection = "G8") OU (l_collection = "G10"))
					LET l_vg_serie "KLPM"
				ELSE_IF l_collection = "G9"
					LET l_vg_serie "KLPV"
				ELSE_IF l_collection = "G11"
					LET l_vg_serie "KLPL" /* TB le 14/05/18 : ajout KLPL */
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_semi_fixe.value.name")) = TRUE
				LET l_semi_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_semi_fixe.value.name")
			END_IF
            /* AJO - 20210915 - DDS2113 : EDGE ENSEMBLE AUTRES TRAVERSES DE 98 MM */    
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
				LET l_nbre_vitrage (l_nbre_vitrage + (2 * l_nbre_vt))
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE))
				LET l_nbre_vitrage (l_nbre_vitrage + ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value") + 1) * l_nbre_vt))
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
				LET l_nbre_vitrage (l_nbre_vitrage + ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_montant.value") + 1) * l_nbre_vt))
			/* AJO - 27/11/2021 - cas des porte duo et trio en klpe */
            ELSE_IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G7-M3"))
                LET l_nbre_vitrage (l_nbre_vitrage + ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value") + 1) * l_nbre_vt))
            ELSE_IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G7-M2"))
                LET l_nbre_vitrage (l_nbre_vitrage + (2 * l_nbre_vt))
            ELSE
				LET l_nbre_vitrage (l_nbre_vitrage + l_nbre_vt)
			END_IF
			IF (((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name")<>"N")) OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_ACCESSOIRES_F_PM.FP/vs_serrure.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_ACCESSOIRES_F_PM.FP/vs_serrure.value.name")="SMOTO")) OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_VOLET_ROULANT.FP/vs_manoeuvre.value.name")) = TRUE) ET (FIND_STR confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_VOLET_ROULANT.FP/vs_manoeuvre.value.name") "X3D">0)))
				LET l_klsh 1
			END_IF
			IF s_ensemble = "AUTRE"
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P1"
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7"))
						LET l_chassis_fam "PE1"
					ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G11")
                        LET l_chassis_fam "PL1" /* TB le 17/05/18 : ajout KLPL */
        				LET l_nbre_vt 1
                    ELSE
						LET l_chassis_fam "PM"
						LET l_nbre_vt 1
					END_IF
				ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2I"))
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7"))
						LET l_chassis_fam "PE2"
					ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G11")
                        LET l_chassis_fam "PL2" /* TB le 17/05/18 : ajout KLPL */
    					LET l_nbre_vt 2
                    ELSE
						LET l_chassis_fam "PM"
						LET l_nbre_vt 2
					END_IF
				ELSE_IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) 1 2) = "GT"
					LET l_chassis_fam SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) 1 4
				END_IF
				IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2I") OU ((SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) 1 2) = "GT"))
					LET l_req "SELECT FAMILLE,NB_VANTAUX FROM " + confML.getBdtTableName("TD_CHASSIS")
					   + " WHERE PRODUIT_CONF='" + l_chassis_fam + "' AND TYPE_DORMANT='" + c_type_dormant + "'"
					   + "   AND CATEG_DIM='" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_categ_dim.value")) + "'"
					   + " AND LANGUE = '"+ UPPER APLangue +"'"
					SQL_QUERY l_req IN "Tab"
					LET l_famille STR Tab[1,0]
					LET l_nbre_vt NUMBER Tab[1,1]
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_collection.value.name") <> "G7"
							LET l_cas_panneau_deco "O"
							LET l_modele_porte confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")
							LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_motif_ext.value.name")) = TRUE
								LET l_motif_ext confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_motif_ext.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_motif_int.value.name")) = TRUE
								LET l_motif_int confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_motif_int.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_plinthe.value.name")) = TRUE
								LET l_plinthe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_plinthe.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_vitrage_tradition.value.name")) = TRUE
								LET l_vitrage_tradition ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_vitrage_tradition.value.name")) + "-" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name")))
							ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_porte_acoustique.value.name")) = TRUE
								IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_porte_acoustique.value.name") = "O"
									LET l_vitrage_tradition "acoustique"
								END_IF
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
								LET l_poignee_ext confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_int.value.name")) = TRUE
								LET l_poignee_int confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_int.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_couleur_cache.value.name")) = TRUE
								LET l_couleur_cache confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_couleur_cache.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")) = TRUE
								LET l_serrure confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_sf.value.name")) = TRUE
								LET l_poignee_sf confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_sf.value.name")
							END_IF
							IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
								LET l_sens_ouverture confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name")
							END_IF
                        /* AJO - 27/10/2021 - gestion des portes duo et trio en KLPE */
                        ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE
    						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") <> "G7-M4"
                               	LET l_modele_porte confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")
    							LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
                            END_IF
						END_IF
					END_IF
	
					IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE) ET (IsDefined(l_nbre_vt) = TRUE))
						IF l_nbre_vt = 2
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG"
								LET l_sens "D"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
								LET l_sens "G"
							ELSE
								LET l_sens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name")
							END_IF
						ELSE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG"
								LET l_sens "G"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
								LET l_sens "D"
							ELSE
								LET l_sens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_sens.value.name")
							END_IF
						END_IF
					END_IF
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = TRUE
                    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name") <> "ONDE"	    
                        LET l_ceramique confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name")
                    END_IF
        		END_IF
                IF l_vg_serie = "KLPL"
                    IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE
                        IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M12") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M14") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M16")) 
                            IF ((l_ceramique = "C1") OU (l_ceramique = "C2") OU (l_ceramique = "C3"))
                                LET l_decor_int_klpl "USINEES"
                            ELSE
                                LET l_decor_int_klpl "3D"
                            END_IF
                        ELSE
                            LET l_decor_int_klpl "USINEES"
                        END_IF
                    END_IF
                    IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_decor_int.value.name")) = TRUE
                        IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_decor_int.value.name") = "MIROIR"
                            LET l_decor_int_klpl confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_decor_int.value.name")
                        END_IF
                    END_IF        
        		END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_cylindre.value.name")) = TRUE
					LET l_cylindre confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_cylindre.value.name")
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_cache_cylindre.value.name")) = TRUE
    				LET l_cache_cylindre confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_cache_cylindre.value.name")
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name")) = TRUE
                    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name") <> "N"
                        LET l_entrebailleur "VERROU"
                    ELSE
                        LET l_entrebailleur confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name")
                    END_IF
    	        END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_commande_LED.value.name")) = TRUE
                    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_commande_LED.value.name") = "LED_DETECTEUR"
                        LET l_commande_LED "CAPTEUR"
                    END_IF
                END_IF
			END_IF
            
            IF IsDefined(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name")) = TRUE
                IF confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name") = "DVI"
                    LET l_detecteur confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name")
                ELSE_IF ((confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_detecteur.value.name") = "DOA") ET (l_detecteur <> "DVI"))
                    LET l_detecteur "DO"
                END_IF
            END_IF
            
			LET l_compteur l_compteur + 1
		END_WHILE
    	
		IF ((s_gamme = "KLT") ET (s_zone > 1))
			LET l_famille "0247"
		END_IF
	
		IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE) ET (IsDefined(l_nbre_vt) = TRUE))
			IF l_nbre_vt = 2
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG"
					LET l_sens "D"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
					LET l_sens "G"
				ELSE
					LET l_sens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")
				END_IF
			ELSE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG"
					LET l_sens "G"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
					LET l_sens "D"
				ELSE
					LET l_sens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")
				END_IF
			END_IF
		END_IF
	
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
			IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") <> "G7"
				LET l_cas_panneau_deco "O"
				LET l_modele_porte confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")
				LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_motif_ext.value.name")) = TRUE
					LET l_motif_ext confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_motif_ext.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_motif_int.value.name")) = TRUE
					LET l_motif_int confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_motif_int.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_plinthe.value.name")) = TRUE
					LET l_plinthe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_plinthe.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_vitrage_tradition.value.name")) = TRUE
					LET l_vitrage_tradition ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_vitrage_tradition.value.name")) + "-" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name")))
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_porte_acoustique.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_porte_acoustique.value.name") = "O"
						LET l_vitrage_tradition "acoustique"
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
					LET l_poignee_ext confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_int.value.name")) = TRUE
					LET l_poignee_int confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_int.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_couleur_cache.value.name")) = TRUE
					LET l_couleur_cache confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_couleur_cache.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")) = TRUE
					LET l_serrure confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_sf.value.name")) = TRUE
					LET l_poignee_sf confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_sf.value.name")
				END_IF
                /* AJO - 27/10/2021 - gestion des portes duo et trio en KLPE */
            ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE
        		IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") <> "G7-M4"
                    LET l_modele_porte confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")
			    	LET l_nom_modele confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.descr")
                END_IF
			END_IF
		END_IF
        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = TRUE
    	    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name") <> "ONDE"	    
                LET l_ceramique confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name")
            END_IF
		END_IF
        IF l_vg_serie = "KLPL"
            IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE
                IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M12") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M14") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G11-M16")) 
                    IF ((l_ceramique = "C1") OU (l_ceramique = "C2") OU (l_ceramique = "C3"))
                        LET l_decor_int_klpl "USINEES"
                    ELSE
                        LET l_decor_int_klpl "3D"
                    END_IF
                ELSE
                    LET l_decor_int_klpl "USINEES"
                END_IF
            END_IF
            IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_decor_int.value.name")) = TRUE
                IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_decor_int.value.name") = "MIROIR"
                    LET l_decor_int_klpl confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_decor_int.value.name")
                END_IF
            END_IF        
    	END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_cylindre.value.name")) = TRUE
			LET l_cylindre confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_cylindre.value.name")
		END_IF
        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_cache_cylindre.value.name")) = TRUE
    		LET l_cache_cylindre confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_cache_cylindre.value.name")
		END_IF
        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name")) = TRUE
            IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name") <> "N"
                LET l_entrebailleur "VERROU"
            ELSE
                LET l_entrebailleur confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_entrebailleur.value.name")
            END_IF
		END_IF
        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_commande_LED.value.name")) = TRUE
            IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_commande_LED.value.name") = "LED_DETECTEUR"
                LET l_commande_LED "CAPTEUR"
            END_IF
        END_IF
		IF l_cas_panneau_deco = "N"
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
				LET l_vitrage_ouvrant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage_ouvrant + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name") = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name") = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF				
				/* ----------- Fin de modification ----------- */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")) = TRUE
					LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")) = TRUE
    				LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			ELSE
				LET l_vitrage_ouvrant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage_ouvrant + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name") = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name") = "O"
						LET l_vitrage_ouvrant (l_vitrage_ouvrant + "F")
					END_IF
				END_IF				
				/* ----------- Fin de modification ----------- */				
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")) = TRUE
					LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")) = TRUE
    				LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			END_IF
		END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_hauteur_monobloc.value")) = TRUE
			LET l_hauteur_monobloc confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_hauteur_monobloc.value")
		END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_monobloc.value")) = TRUE
			LET l_largeur_monobloc confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_monobloc.value")
		END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE AND IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) = TRUE
			LET l_largeur_sf (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value") - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value"))
		END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/c_petite_porte.value")) = TRUE
			LET l_petite_porte confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/c_petite_porte.value")
		END_IF
        /* CT335 */
		IF ((l_vg_serie = "KLFP") ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_vs.value")) = TRUE) ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_poids_remplissage.value")) = TRUE))
            IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") <> "FIXE"
    			IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_vs.value") > 1036)
                OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_sf.value")) = TRUE)
                    ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_largeur_sf.value") > 1036))
                OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_poids_remplissage.value")/l_nbre_vt) > 65)) /* (on compte 5 kg de profil) */
    				LET l_hauteur_poignee_180 0
    			END_IF
            END_IF
            IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE") ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "CS"))
        		IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/c_largeur_vs.value") > 1036)
                OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/c_largeur_sf.value")) = TRUE)
                    ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/c_largeur_sf.value") > 1036))
                OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_poids_remplissage.value")/l_nbre_vt) > 65)) /* (on compte 5 kg de profil) */
    				LET l_hauteur_poignee_180 0
    			END_IF
            END_IF
            IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "FIXE") ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "CS"))
            	IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/c_largeur_vs.value") > 1036)
                OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/c_largeur_sf.value")) = TRUE)
                    ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/c_largeur_sf.value") > 1036))
                OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_poids_remplissage.value")/l_nbre_vt) > 65)) /* (on compte 5 kg de profil) */
    				LET l_hauteur_poignee_180 0
    			END_IF
            END_IF
		END_IF
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
			LET l_hauteur_poignee_180 0
		END_IF
        /* CT335 */
	END_IF
	
	IF IsDefined(s_spe_forme) = TRUE
		LET l_famille "0804"
	END_IF
	
	IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    		OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE))  /* AJO - 20210915 - DDS2113 : EDGE ENSEMBLE AUTRES TRAVERSES DE 98 MM */    
		LET l_boucle_vit 2
	ELSE
		LET l_boucle_vit 1
	END_IF
	
	IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
			OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
		IF ((s_ensemble = "CAD") OU (s_ensemble = "CAG"))
			IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"
				LET l_cas_trav_fixe_cadg 1
			END_IF
		ELSE_IF s_ensemble = "CADG"
			IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "FIXE"))
				LET l_cas_trav_fixe_cadg 1
			END_IF
		END_IF
	END_IF
	
	LET l_description "SELECT DESCRIPTION FROM " + confML.getBdtTableName("TD_LANGUE_DESCR")
					 + " WHERE ORIGINE='mvadesign' AND LANGUE='" + UPPER APLangue + "' AND (ID_DESCRIPTION='00001' OR ID_DESCRIPTION='1') order by ID_LIGNE"
	SQL_QUERY l_description IN "tab_description"
	LET vg_version_chacal "2"
	LET vg_temps_fabrication 0
	LET vg_temps_vitrage_coul 0
	LET vg_temps_vitrage_frappe 0
	LET vg_temps_total 0
	LET l_commentaire_acotherm ""
	LET l_TypeFrappe "0"
	LET l_HorsGabarit "N"
	LET l_DormantComplexe "N"
	LET l_val_3vtx "0"
	
	IF ((IsDefined(s_ensemble) = TRUE) ET (IsDefined(c_code_chassis_calcul) = TRUE) ET (c_code_chassis_calcul <> "NN011"))
		SI ((s_ensemble = "CAD") OU (s_ensemble = "CAG"))
			SI (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE") 
				LET l_val_3vtx "1"
			FIN_SI
		SINON_SI ((s_ensemble = "CADG") /*ET ((l_chassis = "FA2") OU (l_chassis = "FS2") OU (l_chassis = "OB2"))*/)
			SI ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE")
			 ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "FIXE"))
				LET l_val_3vtx "1"
			FIN_SI
		FIN_SI
	END_IF
	
	IF ((IsDefined(s_clair_vit_egaux) = TRUE) ET (s_clair_vit_egaux = "O"))
		LET l_vitrages_egaux_horiz "1"
	END_IF
	
	IF ((l_vitrages_egaux_horiz = "") ET (l_val_3vtx = "1") ET (IsDefined(l_largeur_ouvrant) = TRUE))
		IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE) ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) = TRUE))
		
			IF ((FIND_STR l_chassis "2I" = 0) ET (FIND_STR l_chassis "2" > 0))
			/* Chassis en zone 1 avec 2 vantaux */
				IF ((FIND_STR l_chassis "2" > 0) ET ((ABS ((l_largeur_ouvrant / 2) - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value"))) < 3) ET (ABS ((l_largeur_ouvrant / 2) - (s_largeur - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")))) < 3)))
					LET l_vitrages_egaux_horiz "1"
				ELSE_IF (ABS (l_largeur_ouvrant - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value"))) < 3) ET (ABS ((l_largeur_ouvrant / 2) - (s_largeur - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")))) < 3)
					LET l_vitrages_egaux_horiz "1"
				END_IF 
			END_IF
		ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE 
			IF (FIND_STR l_chassis "2I" = 0)
				IF ((FIND_STR l_chassis "2" > 0) ET (ABS ((l_largeur_ouvrant / 2) - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value"))) < 3))
					LET l_vitrages_egaux_horiz "1"	
				ELSE_IF ((FIND_STR l_chassis "2" = 0) ET (ABS (l_largeur_ouvrant - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value"))) < 3) ET (IsDefined(s_ensemble) = TRUE) ET (s_ensemble <> "CAD") ET (s_ensemble <> "CAG"))
					LET l_vitrages_egaux_horiz "1"	
				END_IF
			END_IF
		END_IF
	END_IF

	IF ((vg_type_devis <> "S") ET (IsDefined(s_sens) = FALSE))
		LET s_sens "TG"
	END_IF
	
	LET l_aev_air ""
	LET l_aev_eau ""
	LET l_aev_vent ""
	
	IF IsDefined(s_nbre_traverse) = TRUE
		LET l_nbre_traverse s_nbre_traverse
	ELSE_IF IsDefined(s_posit_traverse) = TRUE
		LET l_nbre_traverse 1
	END_IF
	IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value")) = TRUE
		LET l_nbre_traverse confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value")
	ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE
		LET l_nbre_traverse 1
	END_IF
	IF IsDefined(s_nbre_montant) = TRUE
		LET l_nbre_montant s_nbre_montant
	ELSE_IF IsDefined(s_posit_montant) = TRUE
		LET l_nbre_montant 1
	END_IF
	IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_montant.value")) = TRUE
		LET l_nbre_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_montant.value")
	ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_montant.value")) = TRUE
		LET l_nbre_montant 1
	END_IF
	
	/* Cas des ensembles K.Line */
	IF ((aSIG = "GESTION") OU (aSIG = "TECHNIQUE"))
		/* Cas de traverses intermediaires */
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) 
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) 
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE) 
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) 
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) 
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE))
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
				LET l_hauteur_traverse 40
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE))
				LET l_hauteur_traverse 26
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE))
				LET l_hauteur_traverse 49
            END_IF
			LET l_posit_traverse ((c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
		END_IF
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
			LET l_posit_montant (s_largeur / (l_nbre_montant + 1))
		END_IF
		IF IsDefined(s_posit_traverse) = TRUE
			LET l_posit_traverse s_posit_traverse
		ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE
			LET l_posit_traverse confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")
		END_IF
		IF IsDefined(s_posit_montant) = TRUE
			LET l_posit_montant s_posit_montant
		ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_montant.value")) = TRUE
			LET l_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_montant.value")
		ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
			LET l_posit_montant s_largeur / 2
		ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
			LET l_posit_montant ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) / 2)
		END_IF

		/* Cas du montant intermediaire */
		IF IsDefined(s_ensemble) = TRUE
			IF ((s_ensemble = "IMM") OU (s_ensemble = "ALM") OU (s_ensemble = "ALM-IMM"))
			/* Cas du montant dans les parties adjacentes au chassis de base */
				IF ((l_nbre_vt = 2) ET (l_chassis <> "P2I") ET (l_chassis <> "PRF2I") ET (l_chassis <> "PRA2I") ET (l_chassis <> "FA2I") ET (l_chassis <> "OB2I") ET (l_chassis <> "FS2I"))
					LET l_code_montant "P6786"
					LET l_alim_mont "O"
					LET l_op_posit_montant (s_largeur /2)
				END_IF
			END_IF
		END_IF
		
		IF aSIG = "GESTION"
			/* DETERMINATION DU CLASSEMENT ACOTHERM DU CHASSIS */
			/*-------------------------------------------------*/
			LET l_fermeture "sans"
			IF IsDefined(s_type_fermeture) = TRUE
				IF s_type_fermeture = "RB"
					IF IsDefined(vs_ventilation) = TRUE
						IF vs_ventilation <> "V0"
							LET l_val_acotherm "VU"
						END_IF
					END_IF
					LET l_fermeture "CLASSIC"
					LET l_surface_rb ((vg_ha_rb/1000) * (vg_la_rb/1000))
				ELSE_IF s_type_fermeture = "DL"
					LET l_fermeture "DL"
				ELSE_IF s_type_fermeture = "RO"
					LET l_fermeture "RO"
					LET l_surface_rb ((vg_ha_rb/1000) * (vg_la_rb/1000))
				ELSE_IF ((s_type_fermeture = "PT") OU (s_type_fermeture = "GT") OU (s_type_fermeture = "OP") OU (s_type_fermeture = "OP40") OU (s_type_fermeture = "OP40"))
					LET l_fermeture s_type_fermeture
					LET l_surface_rb ((vg_ha_rb/1000) * (vg_la_rb/1000))
				ELSE
					LET l_fermeture s_type_fermeture
				END_IF
			END_IF
	
			IF IsDefined(s_ventilation) = TRUE
				LET l_ventilation s_ventilation
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ventilation.value.name")) = TRUE
				LET l_ventilation confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ventilation.value.name")
			END_IF
			IF l_ventilation <> ""
				IF (FIND_STR l_ventilation "ACOUST") = 0
					LET l_val_acotherm "VU"
				ELSE
					IF ((l_ventilation <> "1ACOUST22-38") ET (l_ventilation <> "1ACOUST30-39") ET (l_ventilation <> "1ACOUST22-42") ET (l_ventilation <> "1ACOUST30-41") ET (l_ventilation <> "1D30ACOUST") ET (l_ventilation <> "1D45ACOUST"))
						LET l_val_acotherm "VU"
					END_IF
				END_IF
			END_IF
	
			IF l_vg_serie = "KLFP"
				IF ((l_chassis = "FS1") OU (l_chassis = "FS2") OU (l_chassis = "FS2I") /*OU (s_trav_basse = "PMR")*/ OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE)) /* AJO - 20210915 - DDS2113 : EDGE ENSEMBLE AUTRES TRAVERSES DE 98 MM */    
					LET l_val_acotherm "VU"
				END_IF
			END_IF
			/* Le certificat du CSTB est attribué à une usine */
			/* KLAIR2
			IF ((l_kl = "KLAIR_") OU ((vg_centre <> "B1") ET (vg_centre <> "PR") ET (vg_centre <> "D1") ET (vg_centre <> "PO")))
				LET l_val_acotherm "N"
			END_IF
			*/
			IF IsDefined(c_cas_ensemble) = TRUE
				IF ((c_cas_ensemble <> "1") ET (c_cas_ensemble <> "3") ET (c_cas_ensemble <> "4") ET (c_cas_ensemble <> "5") ET (c_cas_ensemble <> "11") ET (c_cas_ensemble <> "2") ET (IsDefined(s_type_nn) = FALSE))
					LET l_val_acotherm "N"
				END_IF
				SI IsDefined(s_marquage_nf) = TRUE
					SI s_marquage_nf = "O"
						LET l_val_acotherm "VU"
					FIN_SI
				FIN_SI
			END_IF
			IF l_vg_serie = "KLPR"
				LET l_val_acotherm "N"
			END_IF
	
			IF ((l_fermeture = "CLASSIC") OU (l_fermeture = "DL") OU (l_fermeture = "RO") OU (l_fermeture = "PT") OU (l_fermeture = "GT") OU (l_fermeture = "OP") OU (l_fermeture = "OP40") OU (l_fermeture = "OP60"))
				IF l_val_acotherm <> "N"
					IF l_fermeture = "CLASSIC"
						IF vs_manoeuvre = "TR" /* Manoeuvre : treuil */
							IF s_dormant = "KLRENO"
								IF vs_tablier = "PVC"
									IF l_surface_rb <= 4.5
										LET l_performance_bloc_baie "***"
									END_IF
								ELSE_IF vs_tablier = "ALU"
									IF l_surface_rb <= 4.5
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 6.5
										LET l_performance_bloc_baie "**"
									END_IF
								END_IF
							ELSE /* Configuration neuf avec sortie sous coffre */
								IF vs_tablier = "PVC"
									IF l_surface_rb <= 4.5
										LET l_performance_bloc_baie "***"
									END_IF
								ELSE_IF vs_tablier = "ALU"
									IF l_surface_rb <= 4.5
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 6.5
										LET l_performance_bloc_baie "**"
									END_IF
								END_IF
							END_IF
						ELSE /* Manoeuvre : motorisée */
							IF vs_tablier = "PVC"
								LET l_performance_bloc_baie "***"
							ELSE
								LET l_performance_bloc_baie "****"
							END_IF
						END_IF                       
    					IF vg_ha_rb > 2500
							LET l_performance_bloc_baie ""
						END_IF					
						IF vs_tablier = "PVC"
							IF vg_la_rb > 1800
								LET l_performance_bloc_baie ""
							END_IF
						ELSE_IF vs_tablier = "ALU"
							IF vg_la_rb > 3000
								LET l_performance_bloc_baie ""
							END_IF
						END_IF
					ELSE_IF l_fermeture = "DL"
						LET l_performance_bloc_baie "****"                       
        				IF vg_ha_rb > 2500
							LET l_performance_bloc_baie ""
						END_IF				
						IF vs_tablier = "PVC"
							IF vg_la_rb > 1600 /* 1800 --> TB le 26/01/21 : DDS 1816 evol info classement au vent bloc demi-linteau Bubendorff */
								LET l_performance_bloc_baie ""
							END_IF
						ELSE_IF vs_tablier = "ALU"
							IF vg_la_rb > 3000
								LET l_performance_bloc_baie ""
							END_IF
						END_IF
					ELSE_IF l_fermeture = "RO"
						IF vs_manoeuvre = "TR" /* Manoeuvre : treuil */
							IF ((s_dormant = "KLRENO") OU (s_dormant = "KLMS"))
								IF vs_tablier = "PVC8"
									IF l_surface_rb <= 4
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF vs_tablier = "PVC11"
									IF l_surface_rb <= 2.7
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF ((vs_tablier = "ALU8") OU (vs_tablier = "ALU8CIDD"))
									IF l_surface_rb <= 4.9
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF vs_tablier = "ALU11"
									IF l_surface_rb <= 3.6
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								END_IF
							ELSE /* Configuration neuf avec sortie sous coffre */
								IF vs_tablier = "PVC8"
									IF l_surface_rb <= 2.2
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF vs_tablier = "PVC11"
									IF l_surface_rb <= 1.9
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF ((vs_tablier = "ALU8") OU (vs_tablier = "ALU8CIDD"))
									IF l_surface_rb <= 2.7
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								ELSE_IF vs_tablier = "ALU11"
									IF l_surface_rb <= 2.6
										LET l_performance_bloc_baie "****"
									ELSE_IF l_surface_rb <= 5.5
										LET l_performance_bloc_baie "**"
									END_IF
								END_IF
							END_IF
						ELSE
							LET l_performance_bloc_baie "****"
						END_IF
					ELSE_IF ((l_fermeture = "PT") OU (l_fermeture = "GT") OU (l_fermeture = "OP") OU (l_fermeture = "OP40") OU (l_fermeture = "OP60"))
						IF vs_manoeuvre = "TR" /* Manoeuvre : treuil */
							IF vs_tablier = "PVC8"
								IF l_surface_rb <= 2.2
									LET l_performance_bloc_baie "****"
								ELSE_IF l_surface_rb <= 2.5
									LET l_performance_bloc_baie "**"
								END_IF
							ELSE_IF vs_tablier = "PVC11"
								IF l_surface_rb <= 1.9
									LET l_performance_bloc_baie "****"
								ELSE_IF l_surface_rb <= 3.2
									LET l_performance_bloc_baie "**"
								END_IF
							ELSE_IF ((vs_tablier = "ALU8") OU (vs_tablier = "ALU8CIDD"))
								IF l_surface_rb <= 2.7
									LET l_performance_bloc_baie "****"
								ELSE_IF l_surface_rb <= 4.8
									LET l_performance_bloc_baie "**"
								END_IF
							ELSE_IF vs_tablier = "ALU11"
								IF l_surface_rb <= 2.6
									LET l_performance_bloc_baie "****"
								ELSE_IF l_surface_rb <= 5.7
									LET l_performance_bloc_baie "**"
								END_IF
							END_IF
						ELSE
							LET l_performance_bloc_baie "****"
						END_IF                       
						IF vg_ha_rb > 2300
							LET l_performance_bloc_baie ""
						END_IF
						IF vs_tablier = "PVC8"
							IF vg_la_rb > 1200
								LET l_performance_bloc_baie ""
							ELSE_IF ((vg_la_rb > 1100) AND (vg_ha_rb > 1400))
								LET l_performance_bloc_baie ""
							END_IF
						ELSE_IF vs_tablier = "PVC11"
							IF vg_la_rb > 1500
								LET l_performance_bloc_baie ""
							ELSE_IF ((vg_la_rb > 1400) AND (vg_ha_rb > 1400))
								LET l_performance_bloc_baie ""
							END_IF
						ELSE_IF ((vs_tablier = "ALU8") OU (vs_tablier = "ALU8CIDD"))
							IF vg_la_rb > 2100
								LET l_performance_bloc_baie ""
							END_IF
						ELSE_IF vs_tablier = "ALU11"
							IF vg_la_rb > 3000
								LET l_performance_bloc_baie ""
							END_IF
						END_IF					
						IF l_performance_bloc_baie <> ""
							LET l_performance_bloc_baie "ok"
						END_IF
					END_IF			
					    		/*IF (((l_famille = "0765") OU ((l_famille = "0783") ET (c_hauteur <= 1600))) ET (l_largeur_ouvrant <= 1500))*/ /*Anciennes normes, DDS 2560 modification AAL 15/02/22*/
    				IF (((l_famille = "0765") OU ((l_famille = "0783") ET (c_hauteur <= 1800))) ET (l_largeur_ouvrant <= 1500))
						/* FENETRE OSCILLO-BATTANT 1 VT */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF ((l_famille = "0745") ET (l_largeur_ouvrant <= 1500) ET (c_hauteur <= 1650))
						/* FENETRE OSCILLO-BATTANT 1 VT KLAIR */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
						/*ELSE_IF (((l_famille = "0762") OU (l_famille = "0763") OU (l_famille = "0770") OU (l_famille = "0774") OU (l_famille = "0780") OU (l_famille = "0781") OU (l_famille = "0787") OU (l_famille = "0783")) ET (l_largeur_ouvrant <= 1000) ET (c_hauteur <= 2250))*/  /*Anciennes normes, modification AAL 15/02/22*/
					ELSE_IF (((l_famille = "0762") OU (l_famille = "0763") OU (l_famille = "0770") OU (l_famille = "0774") OU (l_famille = "0780") OU (l_famille = "0781") OU (l_famille = "0787") OU (l_famille = "0783")) ET (l_largeur_ouvrant <= 1400) ET (c_hauteur <= 2500))
						/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 1 VT */		
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF (((l_famille = "0742") OU (l_famille = "0743")) ET (l_largeur_ouvrant <= 1000) ET (c_hauteur <= 2230))
						/* FENETRE ET PORTE-FENETRE FRANCAISE 1 VT KLAIR */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF (((l_famille = "0766") OU (l_famille = "0767") OU (l_famille = "0771") OU (l_famille = "0768") OU (l_famille = "0775") OU (l_famille = "0784") OU (l_famille = "0785") OU (l_famille = "0788") OU (l_famille = "0786")) ET (l_largeur_ouvrant <= 1600) ET (c_hauteur <= 2250))
						/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT  2 VTX */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF (((l_famille = "0746") OU (l_famille = "0747") OU (l_famille = "0748")) ET (l_largeur_ouvrant <= 1850) ET (c_hauteur <= 2230))
						/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 2 VTX KLAIR */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF (((l_famille = "0764") OU (l_famille = "0782")) ET (l_largeur_ouvrant <= 1800) ET (c_hauteur <= 950))
						/* FENETRE A SOUFFLET */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					ELSE_IF ((l_famille = "0744") ET (l_largeur_ouvrant <= 1800) ET (c_hauteur <= 1000))
						/* FENETRE A SOUFFLET KLAIR */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
						/*ELSE_IF ((l_famille = "0761") ET (l_largeur_ouvrant <= 3200) ET (c_hauteur <= 2250))*/ /*Modification AAL 15/02/22, DDS2560*/
					ELSE_IF ((l_famille = "0761") ET (l_largeur_ouvrant <= 4200) ET (c_hauteur <= 2500))
						/* FENETRE ET PORTE-FENETRE FIXE */
						LET l_aev_air "A*3"
						LET l_aev_eau "E*7A"
						LET l_aev_vent "V*A2"
					END_IF
					IF (IsDefined(s_clair_vit_egaux) = TRUE)
							/*IF ((s_clair_vit_egaux = "O") ET (s_ensemble <> "CADG") ET (s_largeur <= 2400) ET (c_hauteur <= 2250))/*Anciennes normes, DDS 2560 modification AAL 15/02/22*/
						IF ((s_clair_vit_egaux = "O") ET (s_ensemble <> "CADG") ET (s_largeur <= 4200) ET (c_hauteur <= 2500))
							/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 3 VTX */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7A"
							LET l_aev_vent "V*A2"
						END_IF
					END_IF
					SI (IsDefined(s_marquage_nf) = TRUE)
						SI (s_marquage_nf = "O")
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7A"
							LET l_aev_vent "V*A2"
						FIN_SI
					FIN_SI
                    IF l_fermeture = "OP" OU l_fermeture = "OP40" OU l_fermeture = "OP60"
                        LET l_aev_eau "E*7B"
                    END_IF
				END_IF
			ELSE_IF l_fermeture = "sans"
				IF l_val_acotherm <> "N"
					SI vg_societe = "CAIB"	
						SI (((l_famille = "0765") OU ((l_famille = "0783") ET (c_hauteur <= 1600))) ET (l_largeur_ouvrant <= 1500))
							/* FENETRE OSCILLO-BATTANT 1 VT */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A2"
						SINON_SI (((l_famille = "0762") OU (l_famille = "0763") OU (l_famille = "0770") OU (l_famille = "0774") OU (l_famille = "0780") OU (l_famille = "0781") OU (l_famille = "0787") OU (l_famille = "0783")) ET (l_largeur_ouvrant <= 1000) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 1 VT */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A2"
						SINON_SI (((l_famille = "0766") OU (l_famille = "0767") OU (l_famille = "0771") OU (l_famille = "0768") OU (l_famille = "0775") OU (l_famille = "0784") OU (l_famille = "0785") OU (l_famille = "0788") OU (l_famille = "0786")) ET (l_largeur_ouvrant <= 1600) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 2 VTX */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A2"
						SINON_SI (((l_famille = "0764") OU (l_famille = "0782")) ET (l_largeur_ouvrant <= 1800) ET (c_hauteur <= 950))
							/* FENETRE A SOUFFLET */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A2"
						SINON_SI ((l_famille = "0761") ET (l_largeur_ouvrant <= 3200) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FIXE */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A2"
						FIN_SI
						SI (IsDefined(s_clair_vit_egaux) = TRUE)
							SI ((s_clair_vit_egaux = "O") ET (s_ensemble <> "CADG") ET (s_largeur <= 2400) ET (c_hauteur <= 2250))
								/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 3 VTX */
								LET l_aev_air "A*4"
								LET l_aev_eau "E*7B"
								LET l_aev_vent "V*A2"
							FIN_SI
						FIN_SI
						SI (IsDefined(s_marquage_nf) = TRUE)
							SI (s_marquage_nf = "O")
								LET l_aev_air "A*4"
								LET l_aev_eau "E*7B"
								LET l_aev_vent "V*A2"
							FIN_SI
						FIN_SI
					SINON
							/*SI (((l_famille = "0765") OU ((l_famille = "0783") ET (c_hauteur <= 1600))) ET (l_largeur_ouvrant <= 1500))/*Anciennes normes, DDS 2560 modification AAL 15/02/22*/
						SI (((l_famille = "0765") OU ((l_famille = "0783") ET (c_hauteur <= 1800))) ET (l_largeur_ouvrant <= 1500))
						    /* FENETRE OSCILLO-BATTANT 1 VT */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI ((l_famille = "0745") ET (l_largeur_ouvrant <= 1500) ET (c_hauteur <= 1650))
							/* FENETRE OSCILLO-BATTANT 1 VT KLAIR */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
							/*SINON_SI (((l_famille = "0762") OU (l_famille = "0763") OU (l_famille = "0770") OU (l_famille = "0774") OU (l_famille = "0780") OU (l_famille = "0781") OU (l_famille = "0787") OU (l_famille = "0783")) ET (l_largeur_ouvrant <= 1000) ET (c_hauteur <= 2250))/*Anciennes normes, DDS 2560 modification AAL 15/02/22*/
						SINON_SI (((l_famille = "0762") OU (l_famille = "0763") OU (l_famille = "0770") OU (l_famille = "0774") OU (l_famille = "0780") OU (l_famille = "0781") OU (l_famille = "0787") OU (l_famille = "0783")) ET (l_largeur_ouvrant <= 1400) ET (c_hauteur <= 2500))
							/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 1 VT */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI (((l_famille = "0742") OU (l_famille = "0743")) ET (l_largeur_ouvrant <= 1000) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FRANCAISE 1 VT KLAIR */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI (((l_famille = "0766") OU (l_famille = "0767") OU (l_famille = "0771") OU (l_famille = "0768") OU (l_famille = "0775") OU (l_famille = "0784") OU (l_famille = "0785") OU (l_famille = "0788") OU (l_famille = "0786")) ET (l_largeur_ouvrant <= 1600) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 2 VTX */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI (((l_famille = "0746") OU (l_famille = "0747")) ET (l_largeur_ouvrant <= 1850) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE FRANCAISE 2 VTX KLAIR */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI ((l_famille = "0748") ET (l_largeur_ouvrant <= 1850) ET (c_hauteur <= 2250))
							/* FENETRE ET PORTE-FENETRE OSCILLO-BATTANT 2 VTX KLAIR */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI (((l_famille = "0764") OU (l_famille = "0782")) ET (l_largeur_ouvrant <= 1800) ET (c_hauteur <= 950))
							/* FENETRE A SOUFFLET */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI ((l_famille = "0744") ET (l_largeur_ouvrant <= 1800) ET (c_hauteur <= 1000))
							/* FENETRE A SOUFFLET KLAIR */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
							/*SINON_SI ((l_famille = "0761") ET (l_largeur_ouvrant <= 3200) ET (c_hauteur <= 2250))*/ /*Modification AAL 15/02/22, DDS2560*/
						SINON_SI ((l_famille = "0761") ET (l_largeur_ouvrant <= 4200) ET (c_hauteur <= 2500))
							/* FENETRE ET PORTE-FENETRE FIXE */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*A3"
						SINON_SI (((l_famille = "0712") OU (l_famille = "0753")) ET (l_largeur_ouvrant <= 1100) ET (c_hauteur <= 2350))
							/* PORTE KL-PE ET KL-PM 1 VTL */
							LET l_aev_air "A*4"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*B3"
                        SINON_SI ((l_famille = "0755") ET (l_largeur_ouvrant <= 1100) ET (c_hauteur <= 2350))
    						/* PORTE KL-PL 1 VTL */
							LET l_aev_air "A*3"
							LET l_aev_eau "E*7B"
							LET l_aev_vent "V*C3"    
						SINON_SI (((l_famille = "0713") OU (l_famille = "0754")) ET (l_largeur_ouvrant <= 1600) ET (c_hauteur <= 2350))
							IF IsDefined(vg_op_larg_vantail) = TRUE
								/* PORTE KL-PE ET KL-PM 2 VTX TIERCE */
								LET l_aev_air "A*4"
								LET l_aev_eau "E*7B"
								LET l_aev_vent "V*B3"
							END_IF
						FIN_SI
						SI (IsDefined(s_clair_vit_egaux) = TRUE)
								/*SI ((s_clair_vit_egaux = "O") ET (s_ensemble <> "CADG") ET (s_largeur <= 2400) ET (c_hauteur <= 2250))/*Anciennes normes, DDS 2560 modification AAL 15/02/22*/
							SI ((s_clair_vit_egaux = "O") ET (s_ensemble <> "CADG") ET (s_largeur <= 4200) ET (c_hauteur <= 2500))
								/* FENETRE ET PORTE-FENETRE FRANCAISE OU OSCILLO-BATTANT 3 VTX */
								LET l_aev_air "A*4"
								LET l_aev_eau "E*7B"
								LET l_aev_vent "V*A3"
							FIN_SI
						FIN_SI
						SI (IsDefined(s_marquage_nf) = TRUE)
							SI (s_marquage_nf = "O")
								LET l_aev_air "A*4"
								LET l_aev_eau "E*7B"
								LET l_aev_vent "V*A3"
							FIN_SI
						FIN_SI
					FIN_SI					
				END_IF
			END_IF
			/*
			IF IsDefined(vs_type_CAD) = TRUE
				IF ((vs_type_CAD = "FA1") OU (vs_type_CAD = "OB1"))
					LET l_aev_air ""
					LET l_aev_eau ""
					LET l_aev_vent ""
				END_IF
			END_IF
			IF IsDefined(vs_type_CAG) = TRUE
				IF ((vs_type_CAG = "FA1") OU (vs_type_CAG = "OB1"))
					LET l_aev_air ""
					LET l_aev_eau ""
					LET l_aev_vent ""
				END_IF
			END_IF
			*/	
			/* DETERMINATION DE L'ETIQUETTE ACOTHERM DU CHASSIS */
			/*--------------------------------------------------*/
			IF (((IsDefined(vg_acotherm) = TRUE) OU (l_performance_bloc_baie <> "")) ET (IsDefined(vg_aev) = TRUE))
				IF l_performance_bloc_baie = ""
					LET l_performance_bloc_baie "sans"
				END_IF
				IF IsDefined(vg_acotherm) = FALSE
					LET l_acotherm "sans"
				ELSE_IF vg_acotherm = "VU"
					LET l_acotherm "sans"
				ELSE
					LET l_acotherm vg_acotherm
				END_IF
				IF vg_societe = "CAIB"
					LET l_serie "PERALU"	
				ELSE_IF l_vg_serie = "KLAIR"
					LET l_serie "KLAIR2"
				ELSE_IF l_vg_serie = "KLT"
					LET l_serie "KLT"
				ELSE
					LET l_serie "KL-FP"
				END_IF
				LET l_recherche_etiquette "SELECT ETIQUETTE FROM " + confML.getBdtTableName("TD_ETIQUETTE")
							 + " WHERE SERIE='" + l_serie + "' AND BLOC='" + l_fermeture + "' AND CLASSEMENT='" + l_acotherm + "' AND PERFORMENCE='"+ l_performance_bloc_baie +"' AND AEV='" + vg_aev + "'"
				SQL_QUERY l_recherche_etiquette IN "tab_etiquette"
				IF tab_etiquette["NR"] = 1
					LET l_commentaire_acotherm tab_etiquette[1,0]
				END_IF
			END_IF
			IF ((IsDefined(s_type_nn) = TRUE) ET (IsDefined(s_marquage_nf) = TRUE))
				IF s_marquage_nf = "O"
					IF IsDefined(s_type_fermeture) = TRUE
						IF s_type_fermeture = "DL"
							IF vs_manoeuvre <> "TR"
								LET l_commentaire_acotherm "A140"
							END_IF
						ELSE_IF s_type_fermeture = "RO"
							IF vs_manoeuvre = "TR"
								LET l_commentaire_acotherm "A160" 
							ELSE
								LET l_commentaire_acotherm "A168" 
							END_IF
						ELSE_IF s_type_fermeture = "RB"
							IF vs_manoeuvre = "TR"
								LET l_commentaire_acotherm "A169" 
							ELSE
								LET l_commentaire_acotherm "A170" 
							END_IF
						ELSE_IF ((s_type_fermeture = "PT") OU (s_type_fermeture = "GT"))
							LET l_commentaire_acotherm "A94" 
                        ELSE_IF (s_type_fermeture = "OP") OU (s_type_fermeture = "OP40") OU (s_type_fermeture = "OP60")
    						LET l_commentaire_acotherm "A80"
						END_IF
    				ELSE_IF s_type_nn = "NN021" /* KL-T */
						LET l_commentaire_acotherm "A300"
					ELSE
						LET l_commentaire_acotherm "A206"
					END_IF
				ELSE_IF s_marquage_nf <> "N"
					IF s_type_nn = "NN010"
						IF IsDefined(s_type_fermeture) = TRUE
							IF s_type_fermeture = "RB"
								LET l_commentaire_acotherm "A96" 
							ELSE_IF s_type_fermeture = "DL"
								LET l_commentaire_acotherm "A97" 
							ELSE_IF ((s_type_fermeture = "PT") OU (s_type_fermeture = "GT"))
								LET l_commentaire_acotherm "A95" 
                            ELSE_IF (s_type_fermeture = "OP") OU (s_type_fermeture = "OP40") OU (s_type_fermeture = "OP60")
        					    LET l_commentaire_acotherm "A81"    
							END_IF
						ELSE						
							LET l_commentaire_acotherm s_marquage_nf
						END_IF
					ELSE_IF s_type_nn = "NN012"		
						IF IsDefined(s_type_fermeture) = TRUE
							IF s_type_fermeture = "RB"
								LET l_commentaire_acotherm "A96" 
							ELSE_IF s_type_fermeture = "DL"
								LET l_commentaire_acotherm "A97" 
							ELSE_IF ((s_type_fermeture = "PT") OU (s_type_fermeture = "GT"))
								LET l_commentaire_acotherm "A95"
                            ELSE_IF (s_type_fermeture = "OP") OU (s_type_fermeture = "OP40") OU (s_type_fermeture = "OP60")
            				    LET l_commentaire_acotherm "A81"    
							END_IF
						ELSE						
							LET l_commentaire_acotherm s_marquage_nf
						END_IF
					END_IF
				END_IF
			END_IF  
            
            /* 28/09/22 AAL ajout KLNFP battue amincie non certifié*/
    		SI vg_evol_klnfp_P3 = 1
    			SI (IsDefined(s_ensemble) = FALSE)
					SI (c_chassis = "FA2_50") OU (c_chassis = "OB2_50")	OU (c_chassis = "FA2I_50") OU (c_chassis = "OB2I_50")	
						SOIT l_commentaire_acotherm "A402"
					FIN_SI	
				SINON 	
					SOIT l_compteur 1
					TANT_QUE l_compteur <= c_nb_zone
						SI (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2_50") 
						  OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2_50") 
						  OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2I_50") 
						  OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2I_50") 
							SOIT l_commentaire_acotherm "A402"
						FIN_SI
						SOIT l_compteur l_compteur + 1
					FIN_TANT_QUE
				FIN_SI	
			FIN_SI
				
            
            /* BT : Info de Tony HAUBOIS le 16-03-2020 */
			SI ((l_vg_serie <> "KLGT") ET (l_vg_serie <> "KLPS") ET (l_collection = ""))		
				SI l_commentaire_acotherm = ""
					SI ((l_vg_serie = "KLBC") OU (l_vg_serie = "KLBC3") OU (l_vg_serie = "KLBG"))
						SI l_fermeture = "sans"
							SOIT l_commentaire_acotherm "A400"
						SINON
							SOIT l_commentaire_acotherm "A401"
						FIN_SI
					SINON
						SI l_fermeture = "sans"
							SOIT l_commentaire_acotherm "A402"
						SINON
							SOIT l_commentaire_acotherm "A403"
						FIN_SI
					FIN_SI
				FIN_SI
			FIN_SI
			/* BT : Info de Tony HAUBOIS le 16-03-2020 */            
		END_IF
        
		IF ((l_vg_serie = "KLP") OU (l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL")) /* TB le 14/05/18 : ajout KLPL */
			IF l_collection <> "G7" OU l_modele_porte = "G7-M3" /* AJO - 27/10/2021 - ajout du modèle trio en klpe */
				IF l_chassis = "P2E" /* AME103 */
					LET l_semi_fixe "SFID"
				END_IF
				IF l_chassis = "P2I"
					LET l_klpe_tierce_deco "O"
				END_IF
				IF ((l_modele_porte = "G6-M8") OU (l_modele_porte = "G6-M10") OU (l_modele_porte = "G7-M3")) /* Modèle Cadence V115 ou Rime (2 traverses) */ /* AJO - 27/10/2021 - ajout du modèle trio en klpe */
					IF l_chassis = "P2E"
						IF l_semi_fixe = "SFID"
							LET l_cadence "O"
						END_IF
					ELSE_IF l_chassis <> "P2I"
						LET l_cadence "O"
					END_IF
					IF l_cadence = "O"
						LET l_nbre_traverse 2
						LET l_posit_traverse (c_hauteur / 3)
						LET l_type_traverse "P6814"
						LET l_hauteur_traverse 25
					END_IF
				END_IF
			ELSE
				IF l_chassis = "P2I"
					LET l_klpe_tierce_deco "O"
				END_IF
			END_IF
		END_IF
		
		IF c_cas_ensemble = "1"
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"OBI") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OPTIONS_OUVR.FP/s_options_ouvr_siege"),"FFOBI") = TRUE)) /* Les chassis avec OB invisible ne passent pas chez PRIMA 1 */
				LET l_HorsGabarit "O"
			END_IF
			IF IsDefined(c_type_vitrage) = TRUE
				LET l_epaisseur 0
				LET l_vitrage c_type_vitrage
				LET l_req "SELECT EPAISSEUR FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '"+ l_vitrage +"'" + " AND OFFRE_COMM='" + vg_societe + "'"
				SQL_QUERY l_req IN "Tab_vitrage"
				IF Tab_vitrage["NR"] > 0
					LET l_epaisseur NUMBER (Tab_vitrage[1,0])
				END_IF
			END_IF
		ELSE
			LET l_compteur 1
			WHILE l_compteur <= c_nb_zone
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"OBI") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_options_ouvr_siege"),"FFOBI") = TRUE)) /* Les chassis avec OB invisible ne passent pas chez PRIMA 1 */
					LET l_HorsGabarit "O"
				END_IF
				IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE) ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) = TRUE))
					LET l_epaisseur 0
					LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
					LET l_req "SELECT EPAISSEUR FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '"+ l_vitrage + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
					SQL_QUERY l_req IN "Tab_vitrage"
					IF Tab_vitrage["NR"] > 0
						LET l_epaisseur NUMBER (Tab_vitrage[1,0])
					END_IF
				END_IF		
				IF (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")) = TRUE)
					IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name") = "MA")
						LET l_val_croisillon_filant 0
					END_IF
				END_IF
				IF (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")) = TRUE)
					IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name") = "MA")
						LET l_val_croisillon_filant 0
					END_IF
				END_IF
				IF (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE)
					IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name") = "MA")
						LET l_val_croisillon_filant 0
					END_IF
				END_IF		
				LET l_compteur l_compteur + 1
			END_WHILE
		END_IF
	
		IF ((IsDefined(c_hauteur) = TRUE) ET (IsDefined(s_largeur) = TRUE))
			IF ((c_hauteur > 2800) OU (s_largeur > 3200))
				LET l_HorsGabarit "O"
			ELSE_IF c_hauteur > 2400
				IF s_largeur > 1400
					LET l_HorsGabarit "O"
				ELSE
					LET l_DormantComplexe "O"
				END_IF
			END_IF
		END_IF
	
		IF l_nbre_vitrage > 8
			LET l_HorsGabarit "O"
		END_IF
	
		IF c_cas_ensemble = "1"
			IF ((c_poids_remplissage/l_nbre_vt) > 150)
				LET l_HorsGabarit "O"
			END_IF
		ELSE
			LET l_compteur 1
			WHILE l_compteur <= c_nb_zone
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_poids_remplissage.value")) = TRUE
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_poids_remplissage.value"))/l_nbre_vt) > 150
						LET l_HorsGabarit "O"
					END_IF
				END_IF
				LET l_compteur l_compteur + 1
			END_WHILE
		END_IF
	
		IF ((c_cas_ensemble <> "1") ET (IsDefined(s_type_nn) = FALSE))
			LET l_DormantComplexe "O"
		END_IF

		/* VALORISATION DES VARIABLES NECESSAIRES AUX INTERFACES PRIMA */
		/*-------------------------------------------------------------*/
		IF vg_type_devis = "S"
			LET l_trav_dorm 0
			LET l_mont_dorm 0
			LET l_code_trav2 ""
			LET l_code_trav1 ""
			LET l_code_mont2 ""
			LET l_code_mont1 ""
			LET l_L2 0
			LET l_L1 0
			LET l_H2 0
			LET l_H1 0
			IF c_cas_ensemble = "2" /* ALLEGE */
				LET l_trav_dorm 1
				LET l_H1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
					LET l_code_trav1 "P6787"
					LET l_code_trav_1 "P6787"
					LET l_ptr_code_trav_1 "99614764"
				ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
					LET l_code_trav1 "P6787"
					LET l_code_trav_1 "P6787"
					LET l_ptr_code_trav_1 "99614764"
				ELSE
					LET l_code_trav1 "P6786"
					LET l_code_trav_1 "P6786ouv_haut/droite"
					LET l_ptr_code_trav_1 "97518417"
				END_IF 
				LET l_position_x_t1 (s_largeur / 2)
				LET l_position_y_t1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				LET l_numero_ouvrant "2"
				LET l_numero_zone 1
				IF s_ensemble = "ALM"
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
						LET l_code_mont_3 "P6787"
						LET l_ptr_code_mont_3 "99614764"
					ELSE
						LET l_code_mont_3 "P6786ouv_bas/gauche"
						LET l_ptr_code_mont_3 "97518418"
					END_IF 
					LET l_position_x_m3 (s_largeur / 2)
					LET l_position_y_m3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value") / 2)
				END_IF
			ELSE_IF c_cas_ensemble = "3" /* IMPOSTE */
				LET l_trav_dorm 1
				LET l_H2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL") /* TB le 14/05/18 : ajout KLPL */ OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE")) 
					LET l_code_trav2 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_2 "99614764"
				ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
					LET l_code_trav2 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_2 "99614764"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
					LET l_code_trav2 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_2 "99614764"
				ELSE
					LET l_code_trav2 "P6786"
					LET l_code_trav_2 "P6786ouv_bas/gauche"
					LET l_ptr_code_trav_2 "97518418"					
				END_IF
				LET l_position_x_t2 (s_largeur / 2)
				LET l_position_y_t2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				LET l_numero_ouvrant "1"
				LET l_numero_zone 1
				IF s_ensemble = "IMM"
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
						LET l_code_mont_4 "P6787"
						LET l_ptr_code_mont_4 "99614764"
					ELSE_IF /*CT790*/(s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
						LET l_code_mont_4 "P6787"
						LET l_ptr_code_mont_4 "99614764"
					ELSE_IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) "_50" > 0 /* montant vertical de 50 quand battue amaincie */
						LET l_code_mont_4 "P6814"
						LET l_ptr_code_mont_4 "99614766"
					ELSE
						LET l_code_mont_4 "P6786ouv_bas/gauche"
						LET l_ptr_code_mont_4 "97518418"
					END_IF 
					LET l_position_x_m4 (s_largeur / 2)
					LET l_position_y_m4 ((c_hauteur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) / 2)
				END_IF
			ELSE_IF c_cas_ensemble = "4" /* FIXE DROIT */
				LET l_mont_dorm 1
				LET l_L1 l_largeur_ouvrant
				IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL") /* TB le 14/05/18 : ajout KLPL */ OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") <> "FIXE") ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE")))
					LET l_code_mont1 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
    			ELSE_IF (((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FS1")
					   OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P1"))
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_detecteur.value.name") = "DVI")
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD")
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE")
					  ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV50") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR50") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRMT50") = TRUE)))
					LET l_code_mont1 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FIXE"
					LET l_code_mont1 "P6786"
					LET l_code_mont_2 "P6786ouv_haut/droite"
					LET l_ptr_code_mont_2 "97518417"
				ELSE_IF /*CT741*/ ((s_gamme = "KLP") AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_chassis_o.value.name") = "P1") AND (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE)
					  AND (FIND_STR(LOWER(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.descr"))) "débrayable" > 0)
					  AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") <> "TG") AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT741.value") = 1))
					LET l_code_mont1 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
				ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
					LET l_code_mont1 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
				ELSE
					LET l_code_mont1 "P6786"
					LET l_code_mont_2 "P6786ouv_bas/gauche"
					LET l_ptr_code_mont_2 "97518418"
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE
					LET l_position_x_m2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")
				ELSE
					LET l_position_x_m2 (2 * s_largeur / 3)
				END_IF
				LET l_position_y_m2 (c_hauteur / 2)
				LET l_numero_ouvrant "1"
				LET l_numero_zone 1
				
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE))
						LET l_code_trav_4 "P6814"
						LET l_ptr_code_trav_4 "99614766"
						LET l_position_x_t4 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
						LET l_position_y_t4 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_5 "P6814"
							LET l_ptr_code_trav_5 "99614766"
							LET l_position_x_t5 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
							LET l_position_y_t5 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_6 "P6814"
								LET l_ptr_code_trav_6 "99614766"
								LET l_position_x_t6 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
								LET l_position_y_t6 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						LET l_code_trav_4 "P6786ouv_bas/gauche"
						LET l_ptr_code_trav_4 "97518418"
						LET l_position_x_t4 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
						LET l_position_y_t4 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_5 "P6786ouv_bas/gauche"
							LET l_ptr_code_trav_5 "97518418"
							LET l_position_x_t5 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
							LET l_position_y_t5 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_6 "P6786ouv_bas/gauche"
								LET l_ptr_code_trav_6 "97518418"
								LET l_position_x_t6 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
								LET l_position_y_t6 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF c_cas_ensemble = "5" /* FIXE GAUCHE */
				LET l_mont_dorm 1
				LET l_L1 l_largeur_ouvrant
				IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL") /* TB le 14/05/18 : ajout KLPL */ OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") <> "FIXE") ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE")))
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
    			ELSE_IF (((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FS1")
					   OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P1"))
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_detecteur.value.name") = "DVI")
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG")
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE")
					  ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV50") = TRUE)
					   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR50") = TRUE)
        			   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRMT50") = TRUE)))
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FIXE"
					LET l_code_mont1 "P6786"
					LET l_code_mont_1 "P6786ouv_bas/gauche"
					LET l_ptr_code_mont_1 "97518418"
				ELSE_IF /*CT741*/ ((s_gamme = "KLP") AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_chassis_o.value.name") = "P1") AND (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE)
					  AND (FIND_STR(LOWER(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.descr"))) "débrayable" > 0)
					  AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") <> "TD") AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT741.value") = 1))
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
				ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
				ELSE
					LET l_code_mont1 "P6786"
					LET l_code_mont_1 "P6786ouv_haut/droite"
					LET l_ptr_code_mont_1 "97518417"
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE
					LET l_position_x_m1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")
				ELSE
					LET l_position_x_m1 (s_largeur / 3)
				END_IF
				LET l_position_y_m1 (c_hauteur / 2)
				IF ((l_cas_trav_fixe_cadg = 1) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"))
					LET l_numero_ouvrant STR (l_nbre_traverse + 2)
					LET l_numero_zone (l_nbre_traverse + 2)
				ELSE
					LET l_numero_ouvrant "2"
					LET l_numero_zone 1
				END_IF
				
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
						LET l_code_trav_1 "P6814"
						LET l_ptr_code_trav_1 "99614766"
						LET l_position_x_t1 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
						LET l_position_y_t1 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_2 "P6814"
							LET l_ptr_code_trav_2 "99614766"
							LET l_position_x_t2 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
							LET l_position_y_t2 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_3 "P6814"
								LET l_ptr_code_trav_3 "99614766"
								LET l_position_x_t3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
								LET l_position_y_t3 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						LET l_code_trav_1 "P6786ouv_bas/gauche"
						LET l_ptr_code_trav_1 "97518418"
						LET l_position_x_t1 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
						LET l_position_y_t1 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_2 "P6786ouv_bas/gauche"
							LET l_ptr_code_trav_2 "97518418"
							LET l_position_x_t2 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
							LET l_position_y_t2 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_3 "P6786ouv_bas/gauche"
								LET l_ptr_code_trav_3 "97518418"
								LET l_position_x_t3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
								LET l_position_y_t3 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF c_cas_ensemble = "6" /* ALLEGE et IMPOSTE */
				LET l_trav_dorm 1
				LET l_H1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				LET l_H2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_i.value")
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "FIXE"
					LET l_code_trav1 "P6787"
					LET l_code_trav2 "P6787"
					LET l_code_trav_1 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_1 "99614764"
					LET l_ptr_code_trav_2 "99614764"
				ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
					LET l_code_trav1 "P6787"
					LET l_code_trav2 "P6787"
					LET l_code_trav_1 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_1 "99614764"
					LET l_ptr_code_trav_2 "99614764"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 OR confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
					LET l_code_trav1 "P6787"
					LET l_code_trav2 "P6787"
					LET l_code_trav_1 "P6787"
					LET l_code_trav_2 "P6787"
					LET l_ptr_code_trav_1 "99614764"
					LET l_ptr_code_trav_2 "99614764"
				ELSE
					LET l_code_trav1 "P6786"
					LET l_code_trav2 "P6786"
					LET l_code_trav_1 "P6786ouv_haut/droite"
					LET l_code_trav_2 "P6786ouv_bas/gauche"
					LET l_ptr_code_trav_1 "97518417"
					LET l_ptr_code_trav_2 "97518418"
				END_IF
				LET l_position_x_t1 (s_largeur / 2)
				LET l_position_x_t2 (s_largeur / 2)
				LET l_position_y_t1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")
				LET l_position_y_t2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_i.value")
				LET l_numero_ouvrant "2"
				IF s_ensemble = "ALM-IMM"
					LET l_code_mont_3 "P6786ouv_bas/gauche"
					LET l_code_mont_4 "P6786ouv_bas/gauche"
					LET l_ptr_code_mont_3 "97518418"
					LET l_ptr_code_mont_4 "97518418"
					LET l_position_x_m3 (s_largeur / 2)
					LET l_position_x_m4 (s_largeur / 2)
					LET l_position_y_m3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value") / 2)
					LET l_position_y_m4 ((c_hauteur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_i.value")) / 2)
				END_IF
			ELSE_IF c_cas_ensemble = "11" /* 2 FIXES */
				LET l_mont_dorm 1
				IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL") /* TB le 14/05/18 : ajout KLPL */ OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") <> "FIXE") ET ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "FIXE"))))
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
					LET l_code_mont2 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
    			ELSE_IF (((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FS1")
					   OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P1"))
					  ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_detecteur.value.name") = "DVI")
					  ET (((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TG")
						ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"))
					   OU ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD")
						ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "FIXE")))
					  ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV50") = TRUE)
					   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR50") = TRUE)
        			   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAV86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRAR86") = TRUE)
    				   OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"), "TRMT50") = TRUE)))
					LET l_code_mont1 "P6787"
					LET l_code_mont_1 "P6787"
					LET l_ptr_code_mont_1 "99614764"
					LET l_code_mont2 "P6787"
					LET l_code_mont_2 "P6787"
					LET l_ptr_code_mont_2 "99614764"
				ELSE
					/* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 OR confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42
						LET l_code_mont1 "P6787"
						LET l_code_mont2 "P6787"
					ELSE
						LET l_code_mont1 "P6786"
						LET l_code_mont2 "P6786"
					END_IF 
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "FIXE"
						/* <NPE 20220601 DDS2556 remplacement montant/traverse intermédiaire si fixe avec vitrage 42/48> */
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42
							LET l_code_mont_1 "P6787"
							LET l_ptr_code_mont_1 "99614764"
							LET l_code_mont_2 "P6787"
							LET l_ptr_code_mont_2 "99614764"
						ELSE
							LET l_code_mont_1 "P6786ouv_bas/gauche"
							LET l_ptr_code_mont_1 "97518418"
							LET l_code_mont_2 "P6786ouv_haut/droite"
							LET l_ptr_code_mont_2 "97518417"
						END_IF 
					ELSE_IF /*CT741*/ ((s_gamme = "KLP") AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_chassis_o.value.name") = "P1") AND (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE)
						   AND (FIND_STR(LOWER(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.descr"))) "débrayable" > 0)
						   AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT741.value") = 1))
						LET l_code_mont_1 "P6787"
						LET l_ptr_code_mont_1 "99614764"
						LET l_code_mont_2 "P6787"
						LET l_ptr_code_mont_2 "99614764"
					ELSE_IF /*CT790*/ (s_gamme = "KLP") AND ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) AND (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7")) AND (confML.getExistingObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT790.value") = 1)
						LET l_code_mont_1 "P6787"
						LET l_ptr_code_mont_1 "99614764"
						LET l_code_mont_2 "P6787"
						LET l_ptr_code_mont_2 "99614764"
					ELSE
						LET l_code_mont_1 "P6786ouv_haut/droite"
						LET l_ptr_code_mont_1 "97518417"
						LET l_code_mont_2 "P6786ouv_bas/gauche"
						LET l_ptr_code_mont_2 "97518418"
					END_IF
				END_IF
				LET l_L1 l_largeur_ouvrant
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE
					LET l_L2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")
					LET l_position_x_m1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")		
					LET l_position_x_m2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")
				ELSE
					LET l_L2 (s_largeur / 3)	
					LET l_position_x_m1 (s_largeur / 4)	
					LET l_position_x_m2 (3 * s_largeur / 4)
				END_IF
				LET l_position_y_m1 (c_hauteur / 2)
				LET l_position_y_m2 (c_hauteur / 2)
				IF ((l_cas_trav_fixe_cadg = 1) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"))
					LET l_numero_ouvrant STR (l_nbre_traverse + 2)
					LET l_numero_zone (l_nbre_traverse + 2)
				ELSE
					LET l_numero_ouvrant "2"
					LET l_numero_zone 1
				END_IF
				
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FIXE"
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
						LET l_code_trav_1 "P6814"
						LET l_ptr_code_trav_1 "99614766"
						LET l_position_x_t1 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
						LET l_position_y_t1 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_2 "P6814"
							LET l_ptr_code_trav_2 "99614766"
							LET l_position_x_t2 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
							LET l_position_y_t2 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_3 "P6814"
								LET l_ptr_code_trav_3 "99614766"
								LET l_position_x_t3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
								LET l_position_y_t3 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						LET l_code_trav_1 "P6786ouv_bas/gauche"
						LET l_ptr_code_trav_1 "97518418"
						LET l_position_x_t1 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
						LET l_position_y_t1 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_2 "P6786ouv_bas/gauche"
							LET l_ptr_code_trav_2 "97518418"
							LET l_position_x_t2 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
							LET l_position_y_t2 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_3 "P6786ouv_bas/gauche"
								LET l_ptr_code_trav_3 "97518418"
								LET l_position_x_t3 (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
								LET l_position_y_t3 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					END_IF
				END_IF
				
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "FIXE"
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
						LET l_code_trav_4 "P6814"
						LET l_ptr_code_trav_4 "99614766"
						LET l_position_x_t4 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
						LET l_position_y_t4 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_5 "P6814"
							LET l_ptr_code_trav_5 "99614766"
							LET l_position_x_t5 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
							LET l_position_y_t5 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_6 "P6814"
								LET l_ptr_code_trav_6 "99614766"
								LET l_position_x_t6 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
								LET l_position_y_t6 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						LET l_code_trav_4 "P6786ouv_bas/gauche"
						LET l_ptr_code_trav_4 "97518418"
						LET l_position_x_t4 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
						LET l_position_y_t4 l_posit_traverse
						
						IF l_nbre_traverse > 1
							LET l_code_trav_5 "P6786ouv_bas/gauche"
							LET l_ptr_code_trav_5 "97518418"
							LET l_position_x_t5 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
							LET l_position_y_t5 (2 * c_hauteur / (l_nbre_traverse + 1))
						
							IF l_nbre_traverse > 2
								LET l_code_trav_6 "P6786ouv_bas/gauche"
								LET l_ptr_code_trav_6 "97518418"
								LET l_position_x_t6 ((s_largeur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) / 2)
								LET l_position_y_t6 (3 * c_hauteur / (l_nbre_traverse + 1))
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF c_cas_ensemble = "1"
				SI l_chassis = "FIXE"
					SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE) /* Ajout DDS 2641 */
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE))/* Ajout DDS 2641 */
						SOIT l_trav_dorm 1
						
						SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
								OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE))
							SOIT l_code_trav1 "P6814"
							SOIT l_code_trav_1 "P6814"
							SOIT l_ptr_code_trav_1 "99614766"
						SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV98") = TRUE) /* Ajout DDS 2641 */
								OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE)) /* Ajout DDS 2641 */
							SOIT l_code_trav1 "P6787"
							SOIT l_code_trav_1 "P6787"
							SOIT l_ptr_code_trav_1 "99614764"
						SINON
							IF confML.getExistingObjectByCPE("CPE.rootCP.FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* </NPE 20220601 DDS2556> */
								SOIT l_code_trav1 "P6787"
								SOIT l_code_trav_1 "P6787"
								SOIT l_ptr_code_trav_1 "99614764"
							ELSE
								SOIT l_code_trav1 "P6786"
								SOIT l_code_trav_1 "P6786ouv_bas/gauche" /* Précédemment "P6786", modifié pour corriger référence profilé chacal */
								SOIT l_ptr_code_trav_1 "97518418" /* Précédemment "99614763", modifié pour corriger référence profilé chacal */
							END_IF
						FIN_SI
						
						SOIT l_H2 l_posit_traverse
						SOIT l_position_x_t1 (s_largeur / 2)
						SOIT l_position_y_t1 l_posit_traverse
						
						SI l_nbre_traverse > 1
							SOIT l_code_trav_2 l_code_trav_1
							SOIT l_ptr_code_trav_2 l_ptr_code_trav_1
							SOIT l_position_x_t2 (s_largeur / 2)
							SOIT l_position_y_t2 ((2 * c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
							
							SI l_nbre_traverse > 2
								SOIT l_code_trav_3 l_code_trav_1
								SOIT l_ptr_code_trav_3 l_ptr_code_trav_1
								SOIT l_position_x_t3 (s_largeur / 2)
								SOIT l_position_y_t3 ((3 * c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
							
								SI l_nbre_traverse > 3
									SOIT l_code_trav_3 l_code_trav_1
									SOIT l_ptr_code_trav_3 l_ptr_code_trav_1
									SOIT l_position_x_t3 (s_largeur / 2)
									SOIT l_position_y_t3 ((4 * c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
								
									SI l_nbre_traverse > 4
										SOIT l_code_trav_3 l_code_trav_1
										SOIT l_ptr_code_trav_3 l_ptr_code_trav_1
										SOIT l_position_x_t3 (s_largeur / 2)
										SOIT l_position_y_t3 ((5 * c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
									
										SI l_nbre_traverse > 5
											SOIT l_code_trav_3 l_code_trav_1
											SOIT l_ptr_code_trav_3 l_ptr_code_trav_1
											SOIT l_position_x_t3 (s_largeur / 2)
											SOIT l_position_y_t3 ((6 * c_hauteur / (l_nbre_traverse + 1)) + l_hauteur_traverse)
										FIN_SI
									FIN_SI
								FIN_SI
							FIN_SI
						FIN_SI
						
						SOIT l_numero_ouvrant "2"
						LET l_numero_zone 2
					SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
						SOIT l_mont_dorm 1
						
						SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE))
							SOIT l_code_mont1 "P6814"
							SOIT l_code_mont_1 "P6814"
							SOIT l_ptr_code_mont_1 "99614766"
						SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE))
							IF confML.getExistingObjectByCPE("CPE.rootCP.FO/SC_F_VITRAGE.FP/c_ep_vitrage.value") >= 42 /* </NPE 20220601 DDS2556> */
								SOIT l_code_mont1 "P6787"
								SOIT l_code_mont_1 "P6787"
								SOIT l_ptr_code_mont_1 "99614764"
							ELSE
								SOIT l_code_mont1 "P6786"
								SOIT l_code_mont_1 "P6786ouv_bas/gauche" /* Précédemment "P6786", modifié pour corriger référence profilé chacal */
								SOIT l_ptr_code_mont_1 "97518418" /* Précédemment "99614763", modifié pour corriger référence profilé chacal */
							END_IF
						SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
							SOIT l_code_mont1 "P6787"
							SOIT l_code_mont_1 "P6787"
							SOIT l_ptr_code_mont_1 "99614764"
						FIN_SI
						
						SOIT l_L1 l_posit_montant
						SOIT l_position_x_m1 l_posit_montant
        				SOIT l_position_y_m1 (c_hauteur / 2)
						
						SI l_nbre_montant > 1
							SOIT l_code_mont_2 l_code_mont_1
							SOIT l_ptr_code_mont_2 l_ptr_code_mont_1
							SOIT l_position_x_m2 (2 * s_largeur / (l_nbre_montant + 1))
							SOIT l_position_y_m2 (c_hauteur / 2)
							
							SI l_nbre_montant > 2
								SOIT l_code_mont_3 l_code_mont_1
								SOIT l_ptr_code_mont_3 l_ptr_code_mont_1
								SOIT l_position_x_m3 (3 * s_largeur / (l_nbre_montant + 1))
								SOIT l_position_y_m3 (c_hauteur / 2)
								
								SI l_nbre_montant > 3
									SOIT l_code_mont_4 l_code_mont_1
									SOIT l_ptr_code_mont_4 l_ptr_code_mont_1
									SOIT l_position_x_m4 (4 * s_largeur / (l_nbre_montant + 1))
									SOIT l_position_y_m4 (c_hauteur / 2)
									
									SI l_nbre_montant > 4
										SOIT l_code_mont_5 l_code_mont_1
										SOIT l_ptr_code_mont_5 l_ptr_code_mont_1
										SOIT l_position_x_m5 (5 * s_largeur / (l_nbre_montant + 1))
										SOIT l_position_y_m5 (c_hauteur / 2)
										
										SI l_nbre_montant > 5
											SOIT l_code_mont_6 l_code_mont_1
											SOIT l_ptr_code_mont_6 l_ptr_code_mont_1
											SOIT l_position_x_m6 (6 * s_largeur / (l_nbre_montant + 1))
											SOIT l_position_y_m6 (c_hauteur / 2)
										FIN_SI
									FIN_SI
								FIN_SI
							FIN_SI
						FIN_SI
						
						SOIT l_numero_ouvrant "2"
						LET l_numero_zone 2
						SI ((((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE)
										OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE)
										OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE))
									ET (IsDefined(s_posit_montant) = FALSE))
								OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE)
								OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE)
								OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE))
							SOIT l_vitrages_egaux_horiz "1"
						FIN_SI
					FIN_SI
				FIN_SI
			END_IF
		END_IF

		IF IsDefined(s_sens) = TRUE
			LET l_sens_ens s_sens
		ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
			LET l_sens_ens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")
		END_IF

		IF ((IsDefined(s_design) = TRUE) ET (s_design <> "SD"))
			LET l_design s_design
		ELSE
			LET l_compteur 1
			WHILE l_compteur <= c_nb_zone
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_design.value.name")) = TRUE
					LET l_design confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_design.value.name")
				END_IF
				LET l_compteur l_compteur + 1
			END_WHILE
		END_IF

		IF aSIG = "TECHNIQUE"
			/* TRAITEMENT DES INFORMATIONS POUR CHACAL */
			/*-----------------------------------------*/
			IF l_vg_serie <> "KLPR"
				LET l_ptr_ouvr_klf_val "1"  /* 24 mm */
				IF (((l_collection = "") OU (l_collection = "G7")) ET (IsDefined(s_type_nn) = FALSE))
					IF c_cas_ensemble = "1"
						IF IsDefined(c_type_vitrage) = TRUE
							LET l_vitrage c_type_vitrage
						ELSE_IF IsDefined(c_type_vitrage_h) = TRUE
							LET l_vitrage c_type_vitrage_h
						END_IF
					ELSE
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
							LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
						ELSE
							LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")
						END_IF
					END_IF
					IF l_vitrage <> ""
						IF SUBSTR l_vitrage 1 2 = "NN"
							LET l_epaisseur NUMBER (SUBSTR l_vitrage 3 3)
						ELSE
							LET l_req "SELECT EPAISSEUR FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_vitrage + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
							SQL_QUERY l_req IN "Tab_vitrage"
							IF Tab_vitrage["NR"] > 0
								LET l_epaisseur NUMBER (Tab_vitrage[1,0])
							END_IF
						END_IF
                        IF (((IsDefined(c_chassis) = TRUE) ET (c_chassis <> "FIXE"))
                            OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") <> "FIXE")))
    						IF l_epaisseur > 41
    							LET l_ptr_ouvr_klf_val "7"  /* 48 mm */
    						ELSE_IF l_epaisseur >= 28
    							LET l_ptr_ouvr_klf_val "6"  /* 30 mm */
    						END_IF
						ELSE
							LET l_compteur 2
							WHILE l_compteur <= c_nb_zone
								LET l_epaisseur confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_VITRAGE.FP/c_ep_vitrage.value")
								IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")) = TRUE)
										ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") <> "FIXE"))
									IF l_epaisseur > 41
										LET l_ptr_ouvr_klf_val "7"  /* 48 mm */
									ELSE_IF l_epaisseur >= 28
										LET l_ptr_ouvr_klf_val "6"  /* 30 mm */
									END_IF
								END_IF
								LET l_compteur l_compteur + 1
							END_WHILE
                        END_IF
					END_IF
				ELSE_IF ((l_collection = "G1") OU (l_collection = "G2") OU (l_collection = "G3") OU (l_collection = "G4") OU (l_collection = "G8") OU (l_collection = "G10"))
					LET l_ptr_ouvr_klf_val "1"  /* 24 mm */
				ELSE_IF l_collection = "G5"
					LET l_ptr_ouvr_klf_val "6"  /* 30 mm */
				ELSE_IF l_collection = "G6"		/* porte décorative collection G6 */
					IF ((l_modele_porte = "G6-M9") OU (l_modele_porte = "G6-M10")) /* Centaure et Rime */
						LET l_ptr_ouvr_klf_val "6"  /* 30 mm */
					ELSE
						LET l_ptr_ouvr_klf_val "7"  /* 48 mm */
					END_IF
				ELSE_IF ((IsDefined(s_type_nn) = TRUE) ET (s_type_nn = "NN016"))
					LET l_ptr_ouvr_klf_val "7"
				END_IF
			END_IF

			IF l_chassis = "FIXE"
				LET l_ouverture "FixCadre"
			ELSE_IF l_chassis = "FA1"
				LET l_ouverture "OF1"
				IF IsDefined(s_affaires_moyennes) = TRUE
					IF s_affaires_moyennes = "015" /* ITE affaire Massy */
						LET l_ouverture "OB1"
					END_IF
				END_IF
			ELSE_IF l_chassis = "FS1"
				LET l_ouverture "Util"
				IF vg_societe = "CAIB"
					IF l_design = ""
						IF l_sens_ens = "TD"
							LET l_ouvrant_perso "zPS1 TD CAIB vitrage de 24 ancienne"
							LET l_ouvrant_perso "97517594"
						ELSE_IF l_sens_ens = "TG"
							LET l_ouvrant_perso "zPS1 TG CAIB vitrage de 24 ancienne"
							LET l_ouvrant_perso "99614739"
						END_IF
					ELSE
						IF l_ptr_ouvr_klf_val = "6"
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS1 TD CAIB vitrage de 30 carré"
									LET l_ouvrant_perso "97517665"
								ELSE
									LET l_ouvrant_perso "PS1 TD CAIB vitrage de 30 galbé"
									LET l_ouvrant_perso "97517666"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS1 TG CAIB vitrage de 30 carré"
									LET l_ouvrant_perso "97517667"
								ELSE
									LET l_ouvrant_perso "PS1 TG CAIB vitrage de 30 galbé"
									LET l_ouvrant_perso "97517668"
								END_IF
							END_IF
						ELSE
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS1 TD CAIB vitrage de 24 carré"
									LET l_ouvrant_perso "97517657"
								ELSE
									LET l_ouvrant_perso "PS1 TD CAIB vitrage de 24 galbé"
									LET l_ouvrant_perso "97517661"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS1 TG CAIB vitrage de 24 carré"
									LET l_ouvrant_perso "97517658"
								ELSE
									LET l_ouvrant_perso "PS1 TG CAIB vitrage de 24 galbé"
									LET l_ouvrant_perso "97517662"
								END_IF
							END_IF
						END_IF
					END_IF
				ELSE
					IF l_ptr_ouvr_klf_val = "6"
						IF l_sens_ens = "TD"
							IF l_design = "DC"
								LET l_ouvrant_perso "Porte Serrure 1 vantail TD vitrage de 30 Carré"
								LET l_ouvrant_perso "97517592"
							ELSE
								LET l_ouvrant_perso "Porte Serrure 1 vantail TD vitrage de 30 Galbé"
								LET l_ouvrant_perso "97517593"
							END_IF
						ELSE_IF l_sens_ens = "TG"
							IF l_design = "DC"
								LET l_ouvrant_perso "Porte Serrure 1 vantail TG vitrage de 30 Carré"
								LET l_ouvrant_perso "99614738"
							ELSE
								LET l_ouvrant_perso "Porte Serrure 1 vantail TG vitrage de 30 Galbé"
								LET l_ouvrant_perso "99614736"
							END_IF
						END_IF
					ELSE
						IF l_sens_ens = "TD"
							IF l_design = "DC"
								LET l_ouvrant_perso "Porte Serrure 1 vantail TD vitrage de 24 Carré"
								LET l_ouvrant_perso "97517590"
							ELSE
								LET l_ouvrant_perso "Porte Serrure 1 vantail TD vitrage de 24 Galbé"
								LET l_ouvrant_perso "97517591"
							END_IF
						ELSE_IF l_sens_ens = "TG"
							IF l_design = "DC"
								LET l_ouvrant_perso "Porte Serrure 1 vantail TG vitrage de 24 Carré"
								LET l_ouvrant_perso "99614737"
							ELSE
								LET l_ouvrant_perso "Porte Serrure 1 vantail TG vitrage de 24 Galbé"
								LET l_ouvrant_perso "99614735"
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF ((l_chassis = "FA2") OU (l_chassis = "FA2I") OU (l_chassis = "FA2_50") OU (l_chassis = "FA2I_50"))
				LET l_ouverture "OF2"
				IF IsDefined(s_affaires_moyennes) = TRUE
					IF s_affaires_moyennes = "015" /* ITE affaire Massy */
						LET l_ouverture "OB2"
					END_IF
				END_IF
				/* SUPPRESSION A VALIDER
				IF vg_societe <> "CAIB"
					IF l_ptr_ouvr_klf_val = "2" 
						LET l_reference_ouvrant "P5584_CR"
						LET l_reference_battement "P5584_98 CR"
					ELSE_IF l_ptr_ouvr_klf_val = "1"  
						LET l_reference_ouvrant "P5600_CR"
						LET l_reference_battement "P5600_98 CR"
					ELSE_IF l_ptr_ouvr_klf_val = "4"  
						LET l_reference_ouvrant "P6419"
						LET l_reference_battement "P6419_98"
					ELSE_IF l_ptr_ouvr_klf_val = "5"  
						LET l_reference_ouvrant "P6422"
						LET l_reference_battement "P6422_98"
					END_IF
				END_IF
				SUPPRESSION A VALIDER */
			ELSE_IF ((l_chassis = "FS2") OU (l_chassis = "FS2I"))
				LET l_ouverture "Util"
				IF vg_societe = "CAIB"
					IF l_design = ""
						IF l_sens_ens = "TD"
							LET l_ouvrant_perso "zPS2 TD CAIB vitrage de 24 ancienne"
							LET l_ouvrant_perso "97517606"
						ELSE_IF l_sens_ens = "TG"
							LET l_ouvrant_perso "zPS2 TG CAIB vitrage de 24 ancienne"
							LET l_ouvrant_perso "97517605"
						END_IF
					ELSE
						IF l_ptr_ouvr_klf_val = "6"
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS2 TD CAIB vitrage de 30 carré"
									LET l_ouvrant_perso "97517669"
								ELSE
									LET l_ouvrant_perso "PS2 TD CAIB vitrage de 30 galbé"
									LET l_ouvrant_perso "97517670"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS2 TG CAIB vitrage de 30 carré"
									LET l_ouvrant_perso "97517671"
								ELSE
									LET l_ouvrant_perso "PS2 TG CAIB vitrage de 30 galbé"
									LET l_ouvrant_perso "97517672"
								END_IF
							END_IF
						ELSE
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS2 TD CAIB vitrage de 24 carré"
									LET l_ouvrant_perso "97517659"
								ELSE
									LET l_ouvrant_perso "PS2 TD CAIB vitrage de 24 galbé"
									LET l_ouvrant_perso "97517663"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "PS2 TG CAIB vitrage de 24 carré"
									LET l_ouvrant_perso "97517660"
								ELSE
									LET l_ouvrant_perso "PS2 TG CAIB vitrage de 24 galbé"
									LET l_ouvrant_perso "97517664"
								END_IF
							END_IF
						END_IF
					END_IF
				ELSE
					IF (((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") <> "FIXE"))
					 OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") <> "FIXE")))
						IF l_ptr_ouvr_klf_val = "6"
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 30 Carré battue 98"
									LET l_ouvrant_perso "97517609"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 30 Galbé battue 98"
									LET l_ouvrant_perso "97517610"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 30 Carré battue 98"
									LET l_ouvrant_perso "97517613"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 30 Galbé battue 98"
									LET l_ouvrant_perso "97517614"
								END_IF
							END_IF
						ELSE
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 24 Carré battue 98"
									LET l_ouvrant_perso "97517608"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 24 Galbé battue 98"
									LET l_ouvrant_perso "97517607"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 24 Carré battue 98"
									LET l_ouvrant_perso "97517611"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 24 Galbé battue 98"
									LET l_ouvrant_perso "97517612"
								END_IF
							END_IF
						END_IF
					ELSE
						IF l_ptr_ouvr_klf_val = "6"
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 30 Carré"
									LET l_ouvrant_perso "99614741"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 30 Galbé"
									LET l_ouvrant_perso "97517595"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 30 Carré"
									LET l_ouvrant_perso "97517598"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 30 Galbé"
									LET l_ouvrant_perso "97517599"
								END_IF
							END_IF
						ELSE
							IF l_sens_ens = "TD"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 24 Carré"
									LET l_ouvrant_perso "99614740"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TD vitrage de 24 Galbé"
									LET l_ouvrant_perso "99614742"
								END_IF
							ELSE_IF l_sens_ens = "TG"
								IF l_design = "DC"
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 24 Carré"
									LET l_ouvrant_perso "97517596"
								ELSE
									LET l_ouvrant_perso "Porte Serrure 2 vantaux TG vitrage de 24 Galbé"
									LET l_ouvrant_perso "97517597"
								END_IF
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF ((l_chassis = "OB1") ET (s_gamme <> "KLFP_FPI"))
				LET l_ouverture "OB1"
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE)) /* Pivot oscillo battant sur française */
					LET l_ouverture "OF1"
				END_IF
            ELSE_IF ((l_chassis = "OB1") ET (s_gamme = "KLFP_FPI")) /* Ajout FPI TBR le 17/06/2020 */ 
                LET l_ouverture "Util"
                IF l_sens_ens = "TG"
                    LET l_ouvrant_perso "OB1_FPi Tirant Gauche"
				    LET l_ouvrant_perso "97517704"
                ELSE_IF l_sens_ens = "TD"
                    LET l_ouvrant_perso "OB1_FPi Tirant Droit"
    			    LET l_ouvrant_perso "97517705"
                END_IF
			ELSE_IF ((l_chassis = "OB2") OU (l_chassis = "OB2I") OU (l_chassis = "OB2_50") OU (l_chassis = "OB2I_50"))
				LET l_ouverture "OB2"
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE)) /* Pivot oscillo battant sur française */
					LET l_ouverture "OF2"
				END_IF
				/* SUPPRESSION A VALIDER
				IF vg_societe <> "CAIB"
					IF l_ptr_ouvr_klf_val = "2"  
						LET l_reference_ouvrant "P5584_CR"
						LET l_reference_battement "P5584_98 CR"
					ELSE_IF l_ptr_ouvr_klf_val = "1"  
						LET l_reference_ouvrant "P5600_CR"
						LET l_reference_battement "P5600_98 CR"
					ELSE_IF l_ptr_ouvr_klf_val = "4"  
						LET l_reference_ouvrant "P6419"
						LET l_reference_battement "P6419_98"
					ELSE_IF l_ptr_ouvr_klf_val = "5"  
						LET l_reference_ouvrant "P6422"
						LET l_reference_battement "P6422_98"
					END_IF
				END_IF
				SUPPRESSION A VALIDER */
			ELSE_IF l_chassis = "CS"
				LET l_ouverture "Souf"
			ELSE_IF l_vg_serie = "KLP"
				IF l_chassis = "P1"
					LET l_ouverture "Porte1"
				ELSE
					IF l_chassis = "P2I" 
						LET l_ouverture "Util"
						IF l_semi_fixe <> ""
							IF ((l_ptr_ouvr_klf_val = "7") OU (((l_semi_fixe = "MV1") OU (l_semi_fixe = "MV2") OU (l_semi_fixe = "MV3") OU (l_semi_fixe = "MV4") OU (l_semi_fixe = "MV5") OU (l_semi_fixe = "MV6") OU (l_semi_fixe = "MV7") OU (l_semi_fixe = "MV8") OU (l_semi_fixe = "MV9") OU (l_semi_fixe = "MV10")) ET (l_collection = "G6")))
							/* Profil P6799 pour vitrages semi-fixe en 48mmm */
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte d'entrée tiercée TD 2 vantaux (SF de 48mm)"
									LET l_ouvrant_perso "97517588"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte d'entrée tiercée TG 2 vantaux (SF de 48mm)"
									LET l_ouvrant_perso "97517589"
								END_IF
							ELSE
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte d'entrée tiercée TD 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517586"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte d'entrée tiercée TG 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517587"
								END_IF
							END_IF
						ELSE /* Cas des portes vitré (collection = G7) */
							IF l_ptr_ouvr_klf_val = "7"  /* 48 mm */
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte d'entrée tiercée TD 2 vantaux (SF de 48mm)"
									LET l_ouvrant_perso "97517588"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte d'entrée tiercée TG 2 vantaux (SF de 48mm)"
									LET l_ouvrant_perso "97517589"
								END_IF
							ELSE
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte d'entrée tiercée TD 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517586"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte d'entrée tiercée TG 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517587"
								END_IF
							END_IF
						END_IF
						IF IsDefined(l_modele_porte) = TRUE
							IF ((l_modele_porte = "G6-M9") OU (l_modele_porte = "G6-M10"))
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte d'entrée tiercée TD 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517586"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte d'entrée tiercée TG 2 vantaux (SF de 30mm)"
									LET l_ouvrant_perso "97517587"
								END_IF
							END_IF
						END_IF
					ELSE
						LET l_ouverture "Porte2"
					END_IF
				END_IF
			ELSE_IF l_vg_serie = "KLPM"
				IF l_chassis = "P1"
					LET l_ouverture "Porte1"
				ELSE
					IF l_chassis = "P2I"
						LET l_ouverture "Util"
						IF (l_collection = "G10")
							IF ((l_semi_fixe = "MP1") OU (l_semi_fixe = "MP2") OU (l_semi_fixe = "MPV1") OU (l_semi_fixe = "MPV2") OU (l_semi_fixe = "MPV3") OU (l_semi_fixe = "MPV4") OU (l_semi_fixe = "MPV5") OU (l_semi_fixe = "MPV6") OU (l_semi_fixe = "MPV7") OU (l_semi_fixe = "MPV8"))
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte Monobloc TD tiercée tôlée 2vtx Créative"
									/* LET l_ouvrant_perso "97517636"  /* FTRE - 0405222 => DDS 2675 / CT770 - Arrêt P7720*/
                                    LET l_ouvrant_perso "97517615"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte Monobloc TG tiercée tôlée 2vtx Créative "
									/* LET l_ouvrant_perso "97517638"    /* FTRE - 0405222 => DDS 2675 / CT770 - Arrêt P7720*/
                                    LET l_ouvrant_perso "97517617"
								END_IF
							ELSE
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte Monobloc TD tiercée vitrée 2vtx Créative "
									/* LET l_ouvrant_perso "97517637"    /* FTRE - 0405222 => DDS 2675 / CT770 - Arrêt P7720*/
                                    LET l_ouvrant_perso "97517616"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte Monobloc TG tiercée vitrée 2vtx Créative "
									/* LET l_ouvrant_perso "97517639"    /* FTRE - 0405222 => DDS 2675 / CT770 - Arrêt P7720*/
                                    LET l_ouvrant_perso "97517618"
								END_IF
							END_IF
						ELSE
							IF ((l_semi_fixe = "MP1") OU (l_semi_fixe = "MP2") OU (l_semi_fixe = "MP3") OU (l_semi_fixe = "MPV1") OU (l_semi_fixe = "MPV2") OU (l_semi_fixe = "MPV3") OU (l_semi_fixe = "MPV4") OU (l_semi_fixe = "MPV5") OU (l_semi_fixe = "MPV6") OU (l_semi_fixe = "MPV7") OU (l_semi_fixe = "MPV8"))
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte Monobloc TD tiercée tôlée 2vtx "
									LET l_ouvrant_perso "97517615"  
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte Monobloc TG tiercée tôlée 2vtx "
									LET l_ouvrant_perso "97517617"
								END_IF
							ELSE
								IF l_sens_ens = "TD"
									LET l_ouvrant_perso "Porte Monobloc TD tiercée vitrée 2vtx "
									LET l_ouvrant_perso "97517616"
								ELSE_IF l_sens_ens = "TG"
									LET l_ouvrant_perso "Porte Monobloc TG tiercée vitrée 2vtx "
									LET l_ouvrant_perso "97517618"
								END_IF
							END_IF
						END_IF
					ELSE
						LET l_ouverture "Porte2"
					END_IF
				END_IF
			ELSE_IF l_vg_serie = "KLPL" /* TB le 14/05/18 : ajout KLPL */
				IF l_chassis = "P1"
					LET l_ouverture "Porte1"
				ELSE
					IF l_chassis = "P2I"
						LET l_ouverture "Util"
						IF l_sens_ens = "TD"
							LET l_ouvrant_perso "Porte d'entrée tiercée TD KL-PL"
							LET l_ouvrant_perso "97517701"
						ELSE_IF l_sens_ens = "TG"
							LET l_ouvrant_perso "Porte d'entrée tiercée TG KL-PL"
							LET l_ouvrant_perso "97517702"
						END_IF
					ELSE
						LET l_ouverture "Porte2"
					END_IF
				END_IF
			ELSE_IF l_vg_serie = "KLPV"
				LET l_ouverture "Util"

				IF l_chassis = "P1"
					IF l_sens_ens = "TD"
						LET l_ouvrant_perso "Porte Vitrée 1 vtl TD"
						LET l_ouvrant_perso "97517621"
					ELSE_IF l_sens_ens = "TG"
						LET l_ouvrant_perso "Porte Vitrée 1 vtl TG"
						LET l_ouvrant_perso "97517619"
					END_IF
				ELSE
					IF l_sens_ens = "TD"
						LET l_ouvrant_perso "Porte Vitrée 2 vtx TD"
						LET l_ouvrant_perso "97517622"
					ELSE_IF l_sens_ens = "TG"
						LET l_ouvrant_perso "Porte Vitrée 2 vtx TG"
						LET l_ouvrant_perso "97517620"
					END_IF
				END_IF
			ELSE_IF l_chassis = "PRF1"
				LET l_ouverture "Porte1"
			ELSE_IF l_chassis = "PRF2E"
				LET l_ouverture "Porte2"
			ELSE_IF l_chassis = "PRF2I"
				LET l_ouverture "Util"
				SI l_sens_ens = "TD"
					LET l_ouvrant_perso "Porte tiercée TD 2 vantaux"
					LET l_ouvrant_perso "95420432"
				ELSE_IF l_sens_ens = "TG"
					LET l_ouvrant_perso "Porte tiercée TG 2 vantaux"
					LET l_ouvrant_perso "95420445"
				FIN_SI
			ELSE_IF l_chassis = "PRA1"
				LET l_ouverture "Porte1Ex"
			ELSE_IF ((l_chassis = "PRA2E") OU (l_chassis = "PRA2I"))
				LET l_ouverture "Porte2Ex"
			ELSE_IF l_chassis = "PS1"
				LET l_ouverture "Porte1"
			ELSE_IF ((l_chassis = "OB1_AIR") ET (s_gamme <> "KLAIR_FPI"))
				LET l_ouverture "OB1"
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE)) /* Pivot oscillo battant sur française */
					LET l_ouverture "OF1"
				END_IF
			ELSE_IF ((l_chassis = "OB1_AIR") ET (s_gamme = "KLAIR_FPI"))
                LET l_ouverture "Util"
                IF l_sens_ens = "TG"
                    LET l_ouvrant_perso "OB1_KLAIR_FPi Tirant Gauche"
    			    LET l_ouvrant_perso "97517709"
                ELSE_IF l_sens_ens = "TD"
                    LET l_ouvrant_perso "OB1_KLAIR_FPi Tirant Droit"
    			    LET l_ouvrant_perso "97517708"
                END_IF
            ELSE_IF l_chassis = "OB2_AIR"
				LET l_ouverture "OB2"
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE)) /* Pivot oscillo battant sur française */
					LET l_ouverture "OF2"
				END_IF
				/*SOIT l_reference_ouvrant "P5573_CR"
				SOIT l_reference_battement "P5573_98 CR"*/
			ELSE_IF l_chassis = "FIXE_AIR"
				LET l_ouverture "Util"
				/*LET l_ouvrant_perso "Cadre Fixe KL.Air_Poig.Fic. D. Int(Standart)"
				LET l_ouvrant_perso "95420450"*/
			ELSE_IF l_chassis = "FA1_AIR"
				LET l_ouverture "OF1"
			ELSE_IF l_chassis = "FA2_AIR"
				LET l_ouverture "OF2"
				/*SOIT l_reference_ouvrant "P5573_CR"
				SOIT l_reference_battement "P5573_98 CR"*/
			ELSE_IF l_chassis = "CS_AIR"
				LET l_ouverture "Util"
				LET l_ouvrant_perso "KLAIR2 : Soufflet Poignée fictive à Droite Int."
				LET l_ouvrant_perso "97517640"
			END_IF
		END_IF
	END_IF
	
	IF ((aSIG = "GESTION") OU (aSIG = "THERMO"))
		LET l_code_famille SUBSTR l_famille 1 2
		LET l_code_sous_famille SUBSTR l_famille 3 2
		
		IF IsDefined(s_type_nn) = TRUE
			SI ((s_type_nn = "CCNN") OU (s_type_nn = "NNC2R") OU (s_type_nn = "NNC3R"))
				SI s_zone = 1
					SI s_type_nn = "NNC3R"
						SOIT vg_serie_chassis "KL-C3R"
					SINON
						SOIT vg_serie_chassis "KL-C2R"
					FIN_SI
				SINON
					SOIT vg_serie_chassis "KL-ENS"
				FIN_SI
				/*SOIT vg_centre "D14"*/
			SINON_SI ((s_type_nn = "CRTNN") OU (s_type_nn = "NNC2N") OU (s_type_nn = "NNC3N"))
				SI s_zone = 1
					SI s_type_nn = "NNC3N"
						SOIT vg_serie_chassis "KL-C3R"
					SINON
						SOIT vg_serie_chassis "KL-C2R"
					FIN_SI
				SINON
					SOIT vg_serie_chassis "KL-ENS"
				FIN_SI
				/*SOIT vg_centre "D14"*/
			SINON_SI ((s_type_nn = "GRTNN") OU (s_type_nn = "NNGEN") OU (s_type_nn = "NNGIN"))
				SI s_type_nn = "NNGIN"
					SOIT vg_serie_chassis "KL-GI"
				SINON
					SOIT vg_serie_chassis "KL-GE"
				FIN_SI
				/*SOIT vg_centre "D14"*/
			SINON_SI ((s_type_nn = "NN017") OU (s_type_nn = "NN019"))
				SOIT vg_serie_chassis "KL-BG"
				/*SOIT vg_centre "D4"*/
			SINON_SI s_type_nn = "NN"
				SI s_zone = 1
					SOIT vg_serie_chassis "KL-ENS"
				SINON
					SOIT vg_serie_chassis "KL-ENS"
				FIN_SI
			SINON_SI s_type_nn = "NNPRF"
				SI s_zone = 1
					SOIT vg_serie_chassis "KL-PR"
				SINON
					SOIT vg_serie_chassis "KL-ENS"
				FIN_SI
			SINON_SI s_type_nn = "NN001"
				SOIT vg_serie_chassis "KL-F"
			SINON_SI s_type_nn = "TNN"
				/*SOIT vg_centre "A6"*/
				SOIT vg_serie_chassis "KL-SPE"
			SINON_SI s_type_nn = "NN004"
				SOIT vg_serie_chassis "KL-PE"
				SI IsDefined(s_collection) = TRUE
					SI s_collection = "G9"
						SOIT vg_serie_chassis "KL-PV"
					FIN_SI
				FIN_SI
			SINON_SI s_type_nn = "NN013"
				/*SOIT vg_centre "1"*/
				SOIT vg_serie_chassis "KL-PE"
			SINON_SI s_type_nn = "NN009" /* PORTE MONOBLOC KLPM */
				/*SOIT vg_centre "D1"*/
				SOIT vg_serie_chassis "KL-PM"
            SINON_SI s_type_nn ="NN023" /* PORTE MONOBLOC KLPL */
                SOIT vg_serie_chassis "KL-PL"
			SINON_SI ((s_type_nn = "NN007") OU (s_type_nn = "NN018"))
				SOIT vg_serie_chassis "KL-AIR"
			SINON_SI ((s_type_nn = "NN005") OU (s_type_nn = "NN015")) /* TRAPEZE K.LINE */
				/*SOIT vg_centre "A6"*/
				SOIT vg_serie_chassis "KL-SPE"
			SINON_SI ((s_type_nn = "NN006") OU (s_type_nn = "NN014")) /* CINTRE K.LINE */
				/*SOIT vg_centre "A6"*/
				SOIT vg_serie_chassis "KL-SPE"
			SINON_SI s_type_nn = "NN008"
				SOIT vg_serie_chassis "KL-OC"
			SINON_SI s_type_nn = "NN010" /* KLBC 2 rails */
				/*SOIT vg_centre "D4"*/
				SOIT vg_serie_chassis "KL-BC2R"
			SINON_SI s_type_nn = "NN011" /* KL-FP */
				SOIT vg_serie_chassis "KL-FP"
			SINON_SI s_type_nn = "NN012" /* KLBC 3 rails */
				/*SOIT vg_centre "D4"*/
				SOIT vg_serie_chassis "KL-BC3R"
			SINON_SI s_type_nn = "NN016" /* KL-FP OUVRANT 42-48*/
				SOIT vg_serie_chassis "KL-FP"
            SINON_SI s_type_nn = "NN020"
                SOIT vg_serie_chassis "KL-GT"
            SINON_SI s_type_nn = "NN021"
                SOIT vg_serie_chassis "KL-T"
            SINON_SI s_type_nn = "NN022"
                SOIT vg_serie_chassis "KL-PS"
			SINON
				/*SOIT vg_centre "1"*/
				SOIT vg_serie_chassis "KL-F"
			FIN_SI
		ELSE_IF l_code_famille = "07"
			IF l_vg_serie = "KLFP"
				LET vg_serie_chassis "KL-FP"
			ELSE_IF l_vg_serie = "KLP"
				LET vg_serie_chassis "KL-PE"
			ELSE_IF l_vg_serie = "KLPM"
				LET vg_serie_chassis "KL-PM"
            ELSE_IF l_vg_serie = "KLPL" /* TB le 17/05/18 : ajout KLPL */
    			LET vg_serie_chassis "KL-PL"
			ELSE_IF l_vg_serie = "KLPV"
				LET vg_serie_chassis "KL-PV"
			ELSE_IF l_vg_serie = "KLAIR"
				LET vg_serie_chassis "KL-AIR"
			END_IF
		ELSE_IF ((((l_code_famille = "03") ET (SUBSTR l_code_sous_famille 2 1 = "4")) OU (s_gamme = "KLPR")) ET (c_cas_ensemble <> "99"))
			LET vg_serie_chassis "KL-PR"
		ELSE_IF (((l_code_famille = "03") ET (SUBSTR l_code_sous_famille 2 1 = "5")) OU (s_gamme = "KLGT"))
            SOIT vg_serie_chassis "KL-GT"
			/*SI l_chassis = "GTA1"
				SOIT vg_serie_chassis "KLGTA_1V"
			SINON_SI ((l_chassis = "GTA2E") OU (l_chassis = "GTA2I"))
				SOIT vg_serie_chassis "KLGTA_2V"
			SINON_SI l_chassis = "GTF1"
				SOIT vg_serie_chassis "KLGTF_1V"
			SINON_SI ((l_chassis = "GTF2E") OU (l_chassis = "GTF2I"))
				SOIT vg_serie_chassis "KLGTF_2V"
            SINON_SI l_chassis = "NN020"
                SOIT vg_serie_chassis "KLGT"
			FIN_SI*/
        ELSE_IF ((l_code_famille = "03") ET (l_code_sous_famille = "06"))
            SOIT vg_serie_chassis "KL-PS"
		ELSE_IF ((l_code_famille = "01") ET (s_gamme = "KLPR"))
			LET vg_serie_chassis "KL-PR"
        ELSE_IF ((l_code_famille = "01") OU (l_code_famille = "02") OU (s_gamme = "KLT"))
			LET vg_serie_chassis "KL-T"
		ELSE
			LET vg_serie_chassis "KL-ENS"
		END_IF
		
		IF ((c_code_chassis = "TNN") OU (c_code_chassis = "NN005") OU (c_code_chassis = "NN006"))
			LET vg_serie_chassis "KL-SPE"
		END_IF
	END_IF

	IF l_cas_panneau_deco = "O"
		IF ((l_collection = "") OU (l_collection = "G5"))
			LET l_sens_monobloc "S"
		ELSE_IF ((l_chassis = "P2I") OU (l_chassis = "P2E"))
			IF l_sens = "G"
				LET l_sens_monobloc "D"
			ELSE
				LET l_sens_monobloc "G"
			END_IF
		ELSE
			LET l_sens_monobloc l_sens
		END_IF
		LET l_taille "STD"
		IF l_collection = "G10"
			IF l_plinthe = "O"
				LET l_taille "PLT"
			END_IF
		END_IF
		IF l_modele_porte = "G1-M56-CAIB" /* BARDANE */
			IF l_hauteur_monobloc < 2081
				LET l_taille "BAS"
			ELSE
				LET l_taille "HAUT"
			END_IF
		ELSE_IF ((l_modele_porte = "G3-M6") OU (l_modele_porte = "G3-M13"))
			IF l_hauteur_monobloc < 1976
				LET l_taille "BAS"
			ELSE
				LET l_taille "HAUT"
			END_IF
		ELSE_IF l_modele_porte = "G1-M47"
			IF l_hauteur_monobloc < 2131 
				LET l_taille "BAS"
			ELSE
				LET l_taille "HAUT"
			END_IF
		ELSE_IF l_modele_porte = "G1-M13"
			IF l_largeur_monobloc < 887 
				LET l_taille "MINCE"
			ELSE
				LET l_taille "LARGE"
			END_IF
		ELSE_IF l_modele_porte = "G3-M14"
			IF l_hauteur_monobloc < 1981 
				LET l_taille "BAS"
			ELSE_IF l_hauteur_monobloc < 2071
				LET l_taille "MOYEN1"
			ELSE_IF l_hauteur_monobloc < 2161
				LET l_taille "MOYEN2"
			ELSE_IF l_hauteur_monobloc < 2256
				LET l_taille "MOYEN3"
			ELSE
				LET l_taille "HAUT"
			END_IF
		ELSE_IF l_modele_porte = "G1-M1"
			IF l_hauteur_monobloc < 2032 
				LET l_taille "BAS"
			ELSE_IF l_hauteur_monobloc < 2131
				LET l_taille "MOYEN1"
			ELSE_IF l_hauteur_monobloc < 2231
				LET l_taille "MOYEN2"
			ELSE_IF l_hauteur_monobloc < 2331
				LET l_taille "MOYEN3"
			ELSE
				LET l_taille "HAUT"
			END_IF
			IF l_largeur_monobloc < 887
				LET l_taille (l_taille + "-M")
			END_IF
		ELSE_IF l_modele_porte = "G1-M64"
			IF l_largeur_monobloc < 887
				LET l_taille "MINCE"
				IF IsDefined(vs_poignee_ext) = TRUE
					IF ((vs_poignee_ext = "BT4") OU (vs_poignee_ext = "BT5") OU (vs_poignee_ext = "BT6") OU (vs_poignee_ext = "BT7") OU (vs_poignee_ext = "BT8") OU (vs_poignee_ext = "BT9") OU (vs_poignee_ext = "BT10") OU (vs_poignee_ext = "BT11"))
						LET l_taille "MINCE2"
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT4") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT7") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT8") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT9") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT11"))
						LET l_taille "MINCE2"
					END_IF
				END_IF
			ELSE
				LET l_taille "LARGE"
			END_IF
		ELSE_IF l_modele_porte = "G2-M65"
			IF l_largeur_monobloc < 887
				LET l_taille "MINCE"
				IF IsDefined(vs_poignee_ext) = TRUE
					IF ((vs_poignee_ext = "BT4") OU (vs_poignee_ext = "BT5") OU (vs_poignee_ext = "BT6") OU (vs_poignee_ext = "BT7") OU (vs_poignee_ext = "BT8") OU (vs_poignee_ext = "BT9") OU (vs_poignee_ext = "BT10") OU (vs_poignee_ext = "BT11"))
						LET l_taille "MINCE2"
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
					IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT4") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT7") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT8") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT9") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT11"))
						LET l_taille "MINCE2"
					END_IF
				END_IF
			ELSE
				LET l_taille "LARGE"
			END_IF
		ELSE_IF l_modele_porte = "G1-M20"
			IF l_hauteur_monobloc < 2073 
				LET l_taille "BH"
			ELSE_IF l_hauteur_monobloc < 2254
				LET l_taille "STD"
			ELSE
				LET l_taille "BH"
			END_IF
		ELSE_IF l_modele_porte = "G3-M17"
			IF IsDefined(vs_poignee_ext) = TRUE
				IF ((vs_poignee_ext = "BT4") OU (vs_poignee_ext = "BT5") OU (vs_poignee_ext = "BT6"))
					LET l_taille "BT1"
				ELSE_IF ((vs_poignee_ext = "BT7") OU (vs_poignee_ext = "BT8") OU (vs_poignee_ext = "BT9") OU (vs_poignee_ext = "BT10") OU (vs_poignee_ext = "BT11"))
					LET l_taille "BT2"
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
				IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT4") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT6"))
					LET l_taille "BT1"
				ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT7") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT8") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT9") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT11"))
					LET l_taille "BT2"
				END_IF
			END_IF
		ELSE_IF l_modele_porte = "G8-M12"
			IF IsDefined(vs_poignee_ext) = TRUE
				IF ((vs_poignee_ext = "BT4") OU (vs_poignee_ext = "BT5") OU (vs_poignee_ext = "BT6") OU (vs_poignee_ext = "BT7") OU (vs_poignee_ext = "BT8") OU (vs_poignee_ext = "BT9") OU (vs_poignee_ext = "BT10") OU (vs_poignee_ext = "BT11"))
					LET l_taille "SFB"
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
				IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT4") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT7") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT8") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT9") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT10") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "BT11"))
					LET l_taille "SFB"
				END_IF
			END_IF
		ELSE_IF l_modele_porte = "G8-M10"
			IF l_hauteur_monobloc < 2082
				LET l_taille "BAS"
			END_IF
		ELSE_IF l_modele_porte = "G8-M14"
			IF ((l_largeur_monobloc < 888) OU (l_hauteur_monobloc < 2082))
				LET l_taille "MINCE"
			END_IF
		ELSE_IF l_modele_porte = "G8-M15"
			IF l_largeur_monobloc < 877 
				LET l_taille "MINCE"
			END_IF
		ELSE_IF ((l_modele_porte = "G1-M73-CAIB") OU (l_modele_porte = "G1-M74-CAIB") OU (l_modele_porte = "G1-M75-CAIB") OU (l_modele_porte = "G1-M76-CAIB") OU (l_modele_porte = "G1-M77-CAIB") OU (l_modele_porte = "G1-M78-CAIB") OU (l_modele_porte = "G1-M80-CAIB") OU (l_modele_porte = "G1-M86-CAIB") OU (l_modele_porte = "G1-M87-CAIB") OU (l_modele_porte = "G1-M88-CAIB"))
			IF (l_plinthe = "O")
				LET l_taille "PLT"
			END_IF
		ELSE_IF (l_modele_porte = "G1-M79-CAIB")
			IF (l_plinthe = "O")
				IF (l_hauteur_monobloc < 2076)
					LET l_taille "PLTB" 
				ELSE   
					LET l_taille "PLTH"    
				END_IF
			ELSE
				IF (l_hauteur_monobloc < 2076)
					LET l_taille "BAS"
				ELSE
					LET l_taille "HAUT"
				END_IF
			END_IF
        ELSE_IF ((l_modele_porte = "G11-M8-CAIB") OU (l_modele_porte = "G11-M10-CAIB"))
            /* Voir sur TEAMS , infos de manon CHAUVIERE du 27-07-2020 11h40 
			IF l_hauteur_monobloc < (2098 + 6.5)
				LET l_taille "BAS"
			ELSE_IF l_hauteur_monobloc > (2206 + 6.5)
				LET l_taille "HAUT"
			ELSE
				LET l_taille "MOYEN"
			END_IF
            Voir sur TEAMS , infos de manon CHAUVIERE du 27-07-2020 11h40 */
            LET l_taille "BAS"
		END_IF
		IF ((l_modele_porte = "G6-M6") OU (l_modele_porte = "G6-M7") OU (l_modele_porte = "G6-M8") OU (l_modele_porte = "G6-M9") OU (l_modele_porte = "G6-M10") OU (l_modele_porte = "G9-M1") OU (l_modele_porte = "G9-M2") OU (l_modele_porte = "G9-M4") OU (l_modele_porte = "G9-M5") OU (l_modele_porte = "G9-M8") OU (l_modele_porte = "G9-M9")) 
            /* AJO - 11/01/2022 - nouvelles portes KLPV */
            /*OU (l_modele_porte = "G9-M18") OU (l_modele_porte = "G9-M22") OU (l_modele_porte = "G9-M23") OU (l_modele_porte = "G9-M27") OU (l_modele_porte = "G9-M29") OU (l_modele_porte = "G9-M30") OU (l_modele_porte = "G9-M35"))*/
			
            LET l_sens_monobloc "S"
		END_IF
		IF l_collection = "G6" /* FP : Nouveaux dormant KL-FP */
			LET l_taille "STD-FP"
		END_IF
		IF l_collection = "G11"
			IF IsDefined(s_ceramique) = TRUE
				IF s_ceramique = "ONDE"
					LET l_taille "ONDE"
				END_IF
			ELSE
				LET l_compteur 1
				WHILE l_compteur <= c_nb_zone
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = TRUE
						IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = "ONDE"
							LET l_taille "ONDE"
						END_IF
					END_IF
				LET l_compteur l_compteur + 1
				END_WHILE
			END_IF
			IF ((l_modele_porte = "G11-M5") OU (l_modele_porte = "G11-M6"))
				IF IsDefined(vs_poignee_ext) = TRUE
					IF vs_poignee_ext = "PI1600"
						LET l_taille "PI1600"
					ELSE_IF vs_poignee_ext = "PI1100"
						LET l_taille "PI1100"
					ELSE_IF vs_poignee_ext = "PI500"
						LET l_taille "PI500"
					END_IF
				ELSE
					LET l_compteur 1
					WHILE l_compteur <= c_nb_zone
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
							IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "PI1600")
								LET l_taille "PI1600"
							ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "PI1100")
								LET l_taille "PI1100"
							ELSE_IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name") = "PI500")
								LET l_taille "PI500"
							END_IF
						END_IF
					LET l_compteur l_compteur + 1
					END_WHILE
				END_IF
			END_IF
			IF l_modele_porte = "G11-M4"
				IF l_largeur_monobloc < (837 - 5.5)
					LET l_taille "PT_LARG"
				END_IF
			END_IF
			IF l_modele_porte = "G11-M21"
				IF l_hauteur_monobloc < (2089 + 6.5)
					LET l_taille "PT_HAUT"
				END_IF
			END_IF  
		END_IF
		IF vg_societe = "LIT"
			IF ((l_modele_porte = "G6-M1") OU (l_modele_porte = "G6-M3") OU (l_modele_porte = "G6-M6") OU (l_modele_porte = "G9-M2") OU (l_modele_porte = "G9-M4") OU (l_modele_porte = "G9-M5") OU (l_modele_porte = "G9-M8") OU (l_modele_porte = "G9-M9"))
				LET l_modele_porte (l_modele_porte + "-LIT")
			END_IF
		END_IF
		IF vg_type_devis = "S"
			LET l_req "SELECT CODE FROM " + confML.getBdtTableName("TD_MONOBLOC")
					+  " WHERE MODELE = '" + l_modele_porte + "'"
					+  "   AND SENS = '" + l_sens_monobloc + "'"
					+  "   AND TAILLE = '" + l_taille + "'"
		ELSE
			LET l_req "SELECT CODE FROM " + confML.getBdtTableName("TD_MONOBLOC")
					+  " WHERE MODELE = '" + l_modele_porte + "'"
					+  "   AND TAILLE = '" + l_taille + "'"
		END_IF
		SQL_QUERY l_req IN "Tab_monobloc"
		IF Tab_monobloc["NR"] = 0
			ERREUR 2 "Le code du monobloc n'est pas créé"
		ELSE
			LET l_vitrage_ouvrant Tab_monobloc[1,0]
		END_IF
		IF ((l_chassis = "P2I") OU (l_chassis = "P2E"))
			IF ((l_sens_monobloc <> "S") ET (l_semi_fixe <> "MPV1") ET (l_semi_fixe <> "MPV2") ET (l_semi_fixe <> "MPV3") ET (l_semi_fixe <> "MPV4") ET (l_semi_fixe <> "MPV5") ET (l_semi_fixe <> "MPV6") ET (l_semi_fixe <> "MPV7") ET (l_semi_fixe <> "MPV8"))
				IF l_sens_monobloc = "G"
					LET l_sens_monobloc "D"
				ELSE_IF l_sens_monobloc = "D"
					LET l_sens_monobloc "G"
				END_IF
			END_IF
			IF s_dormant = "KLRENO"
				IF ((SOUS_CHAINE s_type_pose 1 1 = "7") OU (SOUS_CHAINE s_type_pose 1 1 = "8") OU (SOUS_CHAINE s_type_pose 1 2 = "13"))
					LET l_largeur_sf (l_largeur_sf - 129)
				ELSE_IF SOUS_CHAINE s_type_pose 1 2 = "12"
					LET l_largeur_sf (l_largeur_sf - 142)
				ELSE
					IF IsDefined(s_type_fermeture) = TRUE
					/* Cas bloc-baie avec profil idem multi-support */
						LET l_largeur_sf (l_largeur_sf - 124)
					ELSE
						LET l_largeur_sf (l_largeur_sf - 121)
					END_IF
				END_IF
			ELSE_IF s_dormant = "KLMS"
				IF SOUS_CHAINE s_type_pose 1 1 = "5"
					LET l_largeur_sf (l_largeur_sf - 159)
				ELSE
					LET l_largeur_sf (l_largeur_sf - 124)
				END_IF
			ELSE /*dormants neufs*/
				LET l_largeur_sf (l_largeur_sf - 110)
			END_IF
			IF l_semi_fixe = "SFID"
				LET l_modele_porte_sf l_modele_porte
				IF ((l_modele_porte = "G1-M64") OU (l_modele_porte = "G2-M65"))
					LET l_modele_porte_sf (l_modele_porte_sf + "-SFID")
					LET l_taille "STD"
				END_IF
				IF l_modele_porte = "G1-M12-CAIB"
					LET l_modele_porte_sf (l_modele_porte_sf + "-SFID")
					LET l_taille "STD"
				END_IF
				IF l_modele_porte = "G8-M12"
					LET l_taille "SFB"
				END_IF
				IF l_modele_porte = "G1-M63-CAIB"
					LET l_modele_porte_sf "G1-M64-CAIB"
				END_IF
				IF vg_societe = "LIT"
					IF ((l_modele_porte = "G6-M1") OU (l_modele_porte = "G6-M3") OU (l_modele_porte = "G6-M6") OU (l_modele_porte = "G9-M2") OU (l_modele_porte = "G9-M4") OU (l_modele_porte = "G9-M5") OU (l_modele_porte = "G9-M8") OU (l_modele_porte = "G9-M9"))
						LET l_modele_porte_sf (l_modele_porte_sf + "-LIT")
					END_IF
				END_IF
				IF vg_type_devis = "S"
					LET l_req "SELECT CODE FROM " + confML.getBdtTableName("TD_MONOBLOC")
							+  " WHERE MODELE = '" + l_modele_porte_sf + "'"
							+  "   AND SENS = '" + l_sens_monobloc + "'"
							+  "   AND TAILLE = '" + l_taille + "'"
				ELSE
					LET l_req "SELECT CODE FROM " + confML.getBdtTableName("TD_MONOBLOC")
							+  " WHERE MODELE = '" + l_modele_porte_sf + "'"
							+  "   AND TAILLE = '" + l_taille + "'"
				END_IF
				SQL_QUERY l_req IN "Tab_monobloc"
				IF Tab_monobloc["NR"] = 0
					ERREUR 2 "Le code du monobloc n'est pas créé"
				ELSE
					LET l_vitrage_sf Tab_monobloc[1,0]
				END_IF
			ELSE_IF l_semi_fixe = "MV1"
				IF vg_societe = "CAIB"
					IF l_collection = "G11"
						LET l_vitrage_sf "101153" /* Vitrage clair */
					ELSE			
						IF l_sens_monobloc = "D"
							LET l_vitrage_sf "03636" /* Vitrage jonc TG */
						ELSE
							LET l_vitrage_sf "03635" /* Vitrage jonc TD */
						END_IF	
					END_IF
				ELSE
					IF ((l_collection = "G5") OU (l_collection = "G6"))
						LET l_vitrage_sf "03660"
					ELSE
						LET l_vitrage_sf "03615"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV2"
				IF vg_societe = "CAIB"
					IF l_collection = "G11"
						LET l_vitrage_sf "101157" /* Vitrage depoli */
					ELSE
						LET l_vitrage_sf "03629" /* Vitrage depoli */
					END_IF
				ELSE_IF vg_societe = "LIT" 
					IF l_collection = "G6"
						LET l_vitrage_sf "103136"
					ELSE
						LET l_vitrage_sf "103142"
					END_IF
				ELSE
					IF ((l_collection = "G5") OU (l_collection = "G6"))
						LET l_vitrage_sf "03661"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101151"
					ELSE
						LET l_vitrage_sf "03602"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV3"
				IF vg_societe = "CAIB"
					IF l_collection = "G11"
						LET l_vitrage_sf "101152" /* Vitrage antelio */
					ELSE
						LET l_vitrage_sf "03630" /* Vitrage antelio */
					END_IF				
				ELSE
					IF ((l_collection = "G5") OU (l_collection = "G6"))
						LET l_vitrage_sf "03662"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101152"
					ELSE
						LET l_vitrage_sf "03603"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV4"
				IF vg_societe = "CAIB"
					IF l_collection = "G11"
						LET l_vitrage_sf "101153" /* Vitrage clair */
					ELSE
						LET l_vitrage_sf "03631" /* Vitrage clair */
					END_IF				
				ELSE_IF vg_societe = "LIT" 
					IF l_collection = "G6"
						LET l_vitrage_sf "103137"
					ELSE
						LET l_vitrage_sf "103143"
					END_IF
				ELSE
					IF ((l_collection = "G5") OU (l_collection = "G6"))
						LET l_vitrage_sf "03663"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101153"
					ELSE
						LET l_vitrage_sf "03604"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV5"
				IF ((l_collection = "G5") OU (l_collection = "G6"))
					LET l_vitrage_sf "03664"
				ELSE_IF l_collection = "G11"
					LET l_vitrage_sf "101154"
				ELSE
					LET l_vitrage_sf "03605"
				END_IF
			ELSE_IF l_semi_fixe = "MV6"
				IF ((l_collection = "G5") OU (l_collection = "G6"))
					LET l_vitrage_sf "03665"
				ELSE
					LET l_vitrage_sf "03607"
				END_IF
			ELSE_IF l_semi_fixe = "MV7"
				IF ((l_collection = "G5") OU (l_collection = "G6"))
					LET l_vitrage_sf "03666"
				ELSE_IF l_collection = "G11"
					LET l_vitrage_sf "101155"
				ELSE
					LET l_vitrage_sf "03608"
				END_IF
			ELSE_IF l_semi_fixe = "MV8"
				IF ((l_collection = "G5") OU (l_collection = "G6"))
					LET l_vitrage_sf "03667"
				ELSE_IF l_collection = "G11"
					LET l_vitrage_sf "101156"
				ELSE
					LET l_vitrage_sf "03617"
				END_IF
			ELSE_IF l_semi_fixe = "MV9"
				IF vg_societe = "LIT"
					IF l_collection = "G6"
						LET l_vitrage_sf "103139"
					ELSE
						LET l_vitrage_sf "103119"
					END_IF
				ELSE
					IF l_collection = "G6" 
						IF ((l_modele_porte = "G6-M9") OU (l_modele_porte = "G6-M10"))
							LET l_vitrage_sf "53901"
						ELSE
							LET l_vitrage_sf "03668"
						END_IF
					ELSE_IF l_collection = "G5"  
						LET l_vitrage_sf "53901"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101157"
					ELSE
						LET l_vitrage_sf "03618"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV10"
				IF vg_societe = "LIT"
					IF l_collection = "G6"
						LET l_vitrage_sf "103140"
					ELSE
						LET l_vitrage_sf "103144"
					END_IF
				ELSE
					IF l_collection = "G6" 
						IF ((l_modele_porte = "G6-M9") OU (l_modele_porte = "G6-M10"))
							/* Ce cas n'est pas utilisé */
							LET l_vitrage_sf "53039"
						ELSE
							LET l_vitrage_sf "03669"
						END_IF
					ELSE_IF l_collection = "G5" 
						/* Ce cas n'est pas utilisé */
						LET l_vitrage_sf "53039"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101158"
					ELSE
						LET l_vitrage_sf "03619"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV11"
				IF vg_societe = "LIT"
					IF l_collection = "G6"
						LET l_vitrage_sf "103141"
					ELSE
						LET l_vitrage_sf "103145"
					END_IF
				ELSE
					IF l_collection = "G6" 
						LET l_vitrage_sf "03670"
					ELSE_IF l_collection = "G5"		
						LET l_vitrage_sf "53967"	 
					ELSE
						LET l_vitrage_sf "03624"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV12"
				IF vg_societe = "LIT"
					LET l_vitrage_sf "103125"
				ELSE
					IF l_collection = "G6"
						LET l_vitrage_sf "03687"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101159"
					ELSE
						LET l_vitrage_sf "03696"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV13"
				IF l_collection = "G6"
					LET l_vitrage_sf "03688"
				ELSE_IF l_collection = "G11"
					LET l_vitrage_sf "101160"
				ELSE
					LET l_vitrage_sf "03697"
				END_IF
			ELSE_IF l_semi_fixe = "MV14"
				IF l_collection = "G6" 
					LET l_vitrage_sf "03689"
					IF l_largeur_sf > 590
						IF l_sens = "G"
							LET l_vitrage_sf "54488"
						ELSE
							LET l_vitrage_sf "54487"
						END_IF	
					END_IF
				ELSE_IF l_collection = "G11"
					LET l_vitrage_sf "101161"
					IF l_largeur_sf > 590
						IF l_sens = "G"
							LET l_vitrage_sf "101162"
						ELSE
							LET l_vitrage_sf "101163"
						END_IF	
					END_IF
				ELSE
					LET l_vitrage_sf "03698"
					IF l_largeur_sf > 590
						IF l_sens = "G"
							LET l_vitrage_sf "54490"
						ELSE
							LET l_vitrage_sf "54489"
						END_IF	
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV15"
				IF vg_societe = "LIT"
					LET l_vitrage_sf "103152"
				ELSE
					IF l_collection = "G6"
						LET l_vitrage_sf "03690"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101164"
					ELSE
						LET l_vitrage_sf "03699"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV16"
				IF l_collection = "G6"
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "03691"
					ELSE
						LET l_vitrage_sf "03692"
					END_IF
				ELSE_IF l_collection = "G11"
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "101165"
					ELSE
						LET l_vitrage_sf "101166"
					END_IF
				ELSE
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "54402"
					ELSE
						LET l_vitrage_sf "54403"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV17"
				IF l_collection = "G6" 
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "03693"
					ELSE
						LET l_vitrage_sf "03694"
					END_IF
				ELSE_IF l_collection = "G11"
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "101167"
					ELSE
						LET l_vitrage_sf "101168"
					END_IF
				ELSE
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "54404"
					ELSE
						LET l_vitrage_sf "54405"
					END_IF	
				END_IF
			ELSE_IF l_semi_fixe = "MV18"
				IF vg_societe = "LIT"
					LET l_vitrage_sf "103153"
				ELSE
					IF l_collection = "G6" 
						LET l_vitrage_sf "03695"
					ELSE_IF l_collection = "G11"
						LET l_vitrage_sf "101169"
					ELSE
						LET l_vitrage_sf "54406"
					END_IF
				END_IF
			ELSE_IF l_semi_fixe = "MV19"
				IF vg_societe = "LIT"
					LET l_vitrage_sf "103155"
				ELSE
					IF l_collection = "G11"
						LET l_vitrage_sf "101170"
					ELSE
						LET l_vitrage_sf "54846"
					END_IF
				END_IF
            /* AJO - 19/10/2021 - ajout des MV20à MV29 */    
            ELSE_IF l_semi_fixe = "MV20"
				IF l_collection = "G11"    	
                    LET l_vitrage_sf "103937"                
    			SINON		
                    LET l_vitrage_sf "103877"
                FIN_SI
            ELSE_IF l_semi_fixe = "MV21"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103938"                
    			SINON
        		LET l_vitrage_sf "103878"  
                FIN_SI  
            ELSE_IF l_semi_fixe = "MV22"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103882"                
    			SINON
        		LET l_vitrage_sf "103875"   
                FIN_SI 
            ELSE_IF l_semi_fixe = "MV23"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103883"                
    			SINON
            	    LET l_vitrage_sf "103876"  
                FIN_SI  
            ELSE_IF l_semi_fixe = "MV24"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103886"                
    			SINON
            	    LET l_vitrage_sf "103869" 
                FIN_SI   
            ELSE_IF l_semi_fixe = "MV25"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103888"                
    			SINON
            	    LET l_vitrage_sf "103871" 
                FIN_SI   
            ELSE_IF l_semi_fixe = "MV26"
    			IF l_collection = "G11"    	
                    LET l_vitrage_sf "103890"                
    			SINON
            	    LET l_vitrage_sf "103873"   
                FIN_SI 
            ELSE_IF l_semi_fixe = "MV27"
        		LET l_vitrage_sf "103867"    
            ELSE_IF l_semi_fixe = "MV28"
        		LET l_vitrage_sf "103868"    
            ELSE_IF l_semi_fixe = "MV29"
        		LET l_vitrage_sf "103981"
			ELSE_IF l_semi_fixe = "MP1"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03932"
				ELSE
					LET l_vitrage_sf "03933"
				END_IF
			ELSE_IF l_semi_fixe = "MP2"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03934"
				ELSE
					LET l_vitrage_sf "03935"
				END_IF
			ELSE_IF l_semi_fixe = "MP3"
				LET l_vitrage_sf "04511" 
            ELSE_IF l_semi_fixe = "MPV1"
				IF vg_societe = "CAIB"
					IF l_sens_monobloc = "D"
						LET l_vitrage_sf "03818"
					ELSE
						LET l_vitrage_sf "03819"
					END_IF
				ELSE
					LET l_vitrage_sf "03675"
				END_IF
			ELSE_IF l_semi_fixe = "MPV2"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03938"
				ELSE
					LET l_vitrage_sf "03939"
				END_IF
			ELSE_IF l_semi_fixe = "MPV3"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03942"
				ELSE
					LET l_vitrage_sf "03943"
				END_IF
			ELSE_IF l_semi_fixe = "MPV4"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03936"
				ELSE
					LET l_vitrage_sf "03937"
				END_IF
			ELSE_IF l_semi_fixe = "MPV5"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03824"
				ELSE
					LET l_vitrage_sf "03825"
				END_IF
			ELSE_IF l_semi_fixe = "MPV6"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03858"
				ELSE
					LET l_vitrage_sf "03859"
				END_IF
			ELSE_IF l_semi_fixe = "MPV7"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03842"
				ELSE
					LET l_vitrage_sf "03843"
				END_IF
			ELSE_IF l_semi_fixe = "MPV8"
				IF l_sens_monobloc = "D"
					LET l_vitrage_sf "03960"
				ELSE
					LET l_vitrage_sf "03961"
				END_IF
			END_IF
		END_IF
	END_IF

	IF ((aSIG = "GESTION") OU (aSIG = "TECHNIQUE"))
		brcChacalChassis(aSIG,l_chassis,l_vg_serie,l_ptr_ouvr_klf_val,l_petite_porte,l_hauteur_poignee_180,l_collection)
		IF aSIG = "GESTION"
			brcAxapta(l_critere_lancement,l_collection,l_motif_ext,l_motif_int,l_modele_porte,l_vitrage_sf,l_decor_ext)
		END_IF
	END_IF
END_IF

IF ((aSIG = "TECHNIQUE") ET (c_nn = "0"))
	brcSIGLigne(1,"ScriptChacalXXI","")
	brcSIGLigne(2,"Nom","")
	brcSIGLigne(3,"FR","Visual selling")
	IF IsDefined(s_spe_forme) = TRUE
		SI ((s_spe_forme = "B") OU (s_spe_forme = "C"))
			LET l_forme "TR" + s_spe_forme_cote_surbaisse
		SINON_SI s_spe_forme = "D"
			LET l_forme "TRAP" + s_spe_forme_cote_surbaisse
		FIN_SI
	ELSE
		LET l_forme "RECT"
	END_IF
	brcSIGLigne(2,"Forme",l_forme)
	SI ((IsDefined(s_spe_forme) = TRUE) ET (s_spe_forme = "D"))
		brcSIGLigne(2,"Cotes","")
		brcSIGLigne(3,"Cote3",STR (c_hauteur - s_spe_forme_hauteur))
	FIN_SI
	
	LET l_compteur 0
	/* HauteurPoignee (PTRIDMODELE dans TBL_ELEVATION_ELEMENT) A VERIFIER */
	LET l_ptrmodele "1048577"

	IF ((l_code_trav_1 <> "") OU (l_code_trav_2 <> "") OU (l_code_mont_1 <> "") OU (l_code_mont_2 <> ""))
		brcSIGLigne(2,"Traverses","")
		
		IF l_code_mont_1 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m1))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m1))
			IF l_code_mont_1 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_1)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_1)
			END_IF
		END_IF
		IF l_code_mont_2 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m2))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m2))
			IF l_code_mont_2 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_2)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_2)
			END_IF
		END_IF
		IF l_code_trav_1 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t1))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t1))
			brcSIGLigne(4,"Reference",l_code_trav_1)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_1)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
		IF l_code_trav_2 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t2))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t2))
			brcSIGLigne(4,"Reference",l_code_trav_2)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_2)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
		IF l_code_mont_3 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m3))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m3))
			IF l_code_mont_3 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_3)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_3)
			END_IF
		END_IF
		IF l_code_mont_4 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m4))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m4))
			IF l_code_mont_4 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_4)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_4)
			END_IF
		END_IF
		IF l_code_trav_3 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t3))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t3))
			brcSIGLigne(4,"Reference",l_code_trav_3)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_3)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
		IF l_code_trav_4 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t4))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t4))
			brcSIGLigne(4,"Reference",l_code_trav_4)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_4)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
		IF l_code_mont_5 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m5))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m5))
			IF l_code_mont_5 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_5)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_5)
			END_IF
		END_IF
		IF l_code_mont_6 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","VER")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_m6))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_m6))
			IF l_code_mont_6 <> "P6321"
				brcSIGLigne(4,"Reference",l_code_mont_6)
				brcSIGLigne(4,"PtrReference",l_ptr_code_mont_6)
			END_IF
		END_IF
		IF l_code_trav_5 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t5))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t5))
			brcSIGLigne(4,"Reference",l_code_trav_5)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_5)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
		IF l_code_trav_6 <> ""
			LET l_compteur (l_compteur + 1)
			brcSIGLigne(3,"Traverse","")
			brcSIGLigne(4,"Numero",(STR l_compteur))
			brcSIGLigne(4,"Orientation","HOR")
			brcSIGLigne(4,"PositionX",("XmiSA+" + STR l_position_x_t6))
			brcSIGLigne(4,"PositionY",("YmiSA+" + STR l_position_y_t6))
			brcSIGLigne(4,"Reference",l_code_trav_6)
			brcSIGLigne(4,"PtrReference",l_ptr_code_trav_6)
			brcSIGLigne(4,"Point","EXTH")
		END_IF
	END_IF

	IF l_chassis = "FIXE"
		LET l_type "Fixe"
	ELSE
		LET l_type "Frappe"
	END_IF
	
	LET l_nbre_zones_adj l_compteur
	
	brcSIGLigne(2,"Ouvrants","")
	brcSIGLigne(3,"Ouvrant","")
	brcChacalOuvrant(l_numero_zone)
	brcSIGLigne(4,"Numero",l_numero_ouvrant)
	brcSIGLigne(4,"Type",l_type)
	IF IsDefined(l_ouverture) = TRUE
		IF l_ouverture = "Util" 
			brcSIGLigne(4,"Ouverture",l_ouverture)
			brcSIGLigne(4,"PtrReference",l_ouvrant_perso)
		ELSE
			brcSIGLigne(4,"Sens",l_sens)
			brcSIGLigne(4,"Ouverture",l_ouverture)
		END_IF
	END_IF
	IF IsDefined(s_hauteur_poignee) = TRUE
		IF (SUBSTR s_hauteur_poignee 1 1) = "T"
			LET l_hauteur_poignee (SUBSTR s_hauteur_poignee 2 ((LENGTH s_hauteur_poignee) - 1))
		ELSE
			LET l_hauteur_poignee s_hauteur_poignee
		END_IF
		
		IF l_hauteur_poignee <> "standard"
			brcSIGLigne(4,"COTEP",(STR((NUMBER l_hauteur_poignee) - 18)))
		END_IF
	END_IF
    IF IsDefined(vs_hauteur_poignee) = TRUE
    	IF (SUBSTR vs_hauteur_poignee 1 1) = "T"
			LET l_hauteur_poignee (SUBSTR vs_hauteur_poignee 2 ((LENGTH vs_hauteur_poignee) - 1))
		ELSE
			LET l_hauteur_poignee vs_hauteur_poignee
		END_IF
		
		IF l_hauteur_poignee <> "standard"
			brcSIGLigne(4,"COTEP",(STR((NUMBER l_hauteur_poignee) - 18)))
		END_IF
	END_IF

	IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) = TRUE
		IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 1 1) = "T"
			LET l_hauteur_poignee (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name"))) - 1))
		ELSE
			LET l_hauteur_poignee (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name"))
		END_IF

		IF l_hauteur_poignee <> "standard"
			brcSIGLigne(4,"COTEP",(STR ((NUMBER l_hauteur_poignee) - 18)))
		END_IF
	END_IF
    IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) = TRUE
    	IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 1 1) = "T"
			LET l_hauteur_poignee (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name"))) - 1))
		ELSE
			LET l_hauteur_poignee (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name"))
		END_IF

		IF l_hauteur_poignee <> "standard"
			brcSIGLigne(4,"COTEP",(STR ((NUMBER l_hauteur_poignee) - 18)))
		END_IF
	END_IF

	IF l_klpe_tierce_deco = "O"
		LET l_methode_chacal_vitrage "TROU"
		IF l_cas_panneau_deco = "N"
			LET l_methode_chacal_vitrage "OUVRANT"
		END_IF
	END_IF

	IF ((l_collection <> "") ET (l_collection <> "G7") ET (l_cadence <> "O")) /* Porte 2009 (KLPM) */
		LET l_methode_chacal_vitrage "TROU"
	END_IF

	IF l_methode_chacal_vitrage = "OUVRANT"
		brcSIGLigne(4,"Remplissage",l_vitrage_ouvrant)
		SI l_couleur_ext_panneau <> ""
			brcSIGLigne(4,"DecorExtPanneau",l_couleur_ext_panneau)
		FIN_SI
        SI l_couleur_int_panneau <> ""
    		brcSIGLigne(4,"DecorIntPanneau",l_couleur_int_panneau)
		FIN_SI
	END_IF

	IF ((l_klpe_tierce_deco = "O") OU ((l_collection = "G9") ET (l_chassis = "P2E")) OU (l_chassis = "FA2I") OU (l_chassis = "FA2I_50") OU (l_chassis = "OB2I") OU (l_chassis = "OB2I_50") OU (l_chassis = "FS2I"))
		IF ((l_collection = "G9") ET (l_chassis = "P2E"))
			IF IsDefined(s_largeur_o) = TRUE
				LET l_larg_vant (s_largeur_o / 2)
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) = TRUE
				LET l_larg_vant ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) / 2)
			ELSE
				ERREUR 2 "Probleme de largeur de vantail de service"
			END_IF
			LET l_larg_vant (l_larg_vant + 35.7)
			IF IsDefined(s_ensemble) = TRUE
				IF s_dormant = "KLRENO"
					IF ((SUBSTR s_type_pose 1 1 = "7") OU (SUBSTR s_type_pose 1 1 = "8") OU (SUBSTR s_type_pose 1 2 = "13"))
						LET l_deduction_klpv 7
					ELSE_IF SUBSTR s_type_pose 1 2 = "12"
						LET l_deduction_klpv 13.5
					ELSE
						IF IsDefined(s_type_fermeture) = TRUE
						/* Cas bloc-baie avec profil idem multi-support */
							LET l_deduction_klpv 4.5
						ELSE
							LET l_deduction_klpv 3
						END_IF
					END_IF

				ELSE_IF s_dormant = "KLMS"
					IF SUBSTR s_type_pose 1 1 = "5"
						LET l_deduction_klpv 22
					ELSE
						LET l_deduction_klpv 4.5
					END_IF
				ELSE /*dormants neufs*/
					LET l_deduction_klpv - 2.5
				END_IF
				IF l_sens_ens = "TD"
					IF s_ensemble = "CAG"
						LET l_larg_vant (l_larg_vant  - l_deduction_klpv)
					ELSE_IF s_ensemble = "CAD"
						LET l_larg_vant (l_larg_vant  + l_deduction_klpv)
					END_IF
				ELSE
					IF s_ensemble = "CAG"
						LET l_larg_vant (l_larg_vant  + l_deduction_klpv)
					ELSE_IF s_ensemble = "CAD"
						LET l_larg_vant (l_larg_vant  - l_deduction_klpv)
					END_IF
				END_IF
			END_IF
		ELSE
			IF IsDefined(s_larg_vant) = TRUE
				LET l_larg_vant s_larg_vant
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE
				LET l_larg_vant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value"))
			ELSE
				ERREUR 2 "Probleme de largeur de vantail de service"
			END_IF
		END_IF

		IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPL")) /* TB le 17/05/18 : ajout KLPL */
			IF s_dormant = "KLRENO"
				IF (((SUBSTR s_type_pose 1 1) = "7") OU ((SUBSTR s_type_pose 1 1) = "8") OU ((SUBSTR s_type_pose 1 2) = "13"))
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 59.20)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 2.80)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  14)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  14)
							END_IF
						END_IF
					END_IF
				ELSE_IF (SUBSTR s_type_pose 1 2) = "12"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 72.20)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 15.80)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  27)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  27)
							END_IF
						END_IF
					END_IF
				ELSE
					IF IsDefined(s_type_fermeture) = TRUE
					/* Cas bloc-baie avec profil idem multi-support */
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 54.20)
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (+ 2.20)
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  9)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  9)
								END_IF
							END_IF
						END_IF
					ELSE
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 51.20)
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (+ 5.20)
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  6)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  6)
								END_IF
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF s_dormant = "KLMS"
				IF (SUBSTR s_type_pose 1 1) = "5"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 89.20)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 32.80)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  44)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  44)
							END_IF
						END_IF
					END_IF
				ELSE
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 54.20)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (+ 2.20)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  9)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  9)
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE /*dormants neufs*/
				IF l_sens_ens = "TD"
					LET l_deduction_battement (- 40.20)
				ELSE_IF l_sens_ens = "TG"
					LET l_deduction_battement (+ 16.20)
				END_IF
				IF IsDefined(s_ensemble) = TRUE
					IF l_sens_ens = "TD"
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  -  5)
						END_IF
					ELSE
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  +  5)
						END_IF
					END_IF
				END_IF
			END_IF
		ELSE_IF l_vg_serie = "KLPV"
			IF s_dormant = "KLRENO"
				IF ((SUBSTR s_type_pose 1 1 = "7") OU (SUBSTR s_type_pose 1 1 = "8") OU (SUBSTR s_type_pose 1 2 = "13"))
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 31)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 31)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  14)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  14)
							END_IF
						END_IF
					END_IF
				ELSE_IF SUBSTR s_type_pose 1 2 = "12"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 44)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 44)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  27)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  27)
							END_IF
						END_IF
					END_IF
				ELSE
					IF IsDefined(s_type_fermeture) = TRUE
					/* Cas bloc-baie avec profil idem multi-support */
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 26)
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (- 26)
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  9)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  9)
								END_IF
							END_IF
						END_IF
					ELSE
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 23)
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (- 23)
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  6)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  6)
								END_IF
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF s_dormant = "KLMS"
				IF SUBSTR s_type_pose 1 1 = "5"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 61)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 61)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  44)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  44)
							END_IF
						END_IF
					END_IF
				ELSE
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 26)
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 26)
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  9)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  9)
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE /*dormants neufs*/
				IF l_sens_ens = "TD"
					LET l_deduction_battement (- 12)
				ELSE_IF l_sens_ens = "TG"
					LET l_deduction_battement (- 12)
				END_IF
				IF IsDefined(s_ensemble) = TRUE
					IF l_sens_ens = "TD"
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  -  5)
						END_IF
					ELSE
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  +  5)
						END_IF
					END_IF
				END_IF
			END_IF
		ELSE_IF l_vg_serie = "KLP" /* KL-PE */
			IF s_dormant = "KLRENO"
				IF (((SUBSTR s_type_pose 1 1) = "7") OU ((SUBSTR s_type_pose 1 1) = "8") OU ((SUBSTR s_type_pose 1 2) = "13"))
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 50.40) /* ok pour klfp */
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 11.60) /* ok pour klfp */
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  19.5)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  19.5)
							END_IF
						END_IF
					END_IF
				ELSE_IF (SUBSTR s_type_pose 1 2) = "12"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 63.40) /* ok pour klfp */
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 24.60) /* ok pour klfp */
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  32.5)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  32.5)
							END_IF
						END_IF
					END_IF
				ELSE
					IF IsDefined(s_type_fermeture) = TRUE
					/* Cas bloc-baie avec profil idem multi-support */
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 45.40) /* ok pour klfp */
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (- 6.60) /* ok pour klfp */
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  14.5)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  14.5)
								END_IF
							END_IF
						END_IF
					ELSE
						IF l_sens_ens = "TD"
							LET l_deduction_battement (- 42.40) /* ok pour klfp */
						ELSE_IF l_sens_ens = "TG"
							LET l_deduction_battement (- 3.60) /* ok pour klfp */
						END_IF
						IF IsDefined(s_ensemble) = TRUE
							IF l_sens_ens = "TD"
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  +  11.5)
								END_IF
							ELSE
								IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									LET l_larg_vant (l_larg_vant  -  11.5)
								END_IF
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE_IF s_dormant = "KLMS"
				IF (SUBSTR s_type_pose 1 1) = "5"
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 80.40) /* ok pour klfp */
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 41.60) /* ok pour klfp */
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  49.5)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  49.5)
							END_IF
						END_IF
					END_IF
				ELSE
					IF l_sens_ens = "TD"
						LET l_deduction_battement (- 45.40) /* ok pour klfp */
					ELSE_IF l_sens_ens = "TG"
						LET l_deduction_battement (- 6.60) /* ok pour klfp */
					END_IF
					IF IsDefined(s_ensemble) = TRUE
						IF l_sens_ens = "TD"
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  +  14.5)
							END_IF
						ELSE
							IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
								LET l_larg_vant (l_larg_vant  -  14.5)
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE /*dormants neufs*/
				IF l_sens_ens = "TD"
					LET l_deduction_battement (- 31.4) /* ok pour klfp */
				ELSE_IF l_sens_ens = "TG"
					LET l_deduction_battement (+ 7.40) /* ok pour klfp */
				END_IF
				IF IsDefined(s_ensemble) = TRUE
					IF l_sens_ens = "TD"
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  + 5)
						END_IF
					ELSE
						IF ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
							LET l_larg_vant (l_larg_vant  - 5)
						END_IF
					END_IF
				END_IF
			END_IF
		ELSE_IF l_vg_serie = "KLFP"
			IF IsDefined(s_ensemble) = TRUE
				LET l_deduction_battement (- ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_deduction_g.value")) + 6))
			ELSE
				LET l_deduction_battement (- (c_deduction_g + 6))
			END_IF
		END_IF

		IF l_sens_ens = "TD"
			LET l_position_battement (l_larg_vant + l_deduction_battement)
		ELSE_IF l_sens_ens = "TG"
			IF IsDefined(s_ensemble) = TRUE
				LET l_position_battement ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) - l_larg_vant + l_deduction_battement)
			ELSE
				LET l_position_battement (s_largeur - l_larg_vant + l_deduction_battement)
			END_IF
		END_IF
		brcSIGLigne(4,"PositionBattement",STR l_position_battement)
	END_IF

	/* TRAITEMENT PETITS BOIS DANS L'OUVRANT */
	LET tab_pt_bois["NR"] 0
	IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")) = TRUE) OU (IsDefined(s_type_pb) = TRUE))
		LET l_presence_ptbois 1
		LET l_presence_ptbois_ouvr 1
		LET l_pb_haut_x 0
		LET l_pb_haut_x1 0
		LET l_pb_haut_x2 0
		LET l_pb_haut_x3 0
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")) = TRUE
			IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
				LET l_type_pb confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
			ELSE
				LET l_type_pb (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_pb.value.name"))
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x.value") <> 0
					LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1.value") <> 0
					LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2.value") <> 0
					LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3.value") <> 0
					LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value") <> 0
					LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value") <> 0
					LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value") <> 0
					LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")
				END_IF
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value") <> 0
					LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")
				END_IF
			END_IF
		ELSE
			IF s_type_pb = "PBA"
				LET l_type_pb s_pb_special
			ELSE
				LET l_type_pb s_type_pb
			END_IF
			IF IsDefined(s_pb_haut_x) = TRUE
				LET l_pb_haut_x s_pb_haut_x
			END_IF
			IF IsDefined(s_pb_haut_x1) = TRUE
				LET l_pb_haut_x1 s_pb_haut_x1
			END_IF
			IF IsDefined(s_pb_haut_x2) = TRUE
				LET l_pb_haut_x2 s_pb_haut_x2
			END_IF
			IF IsDefined(s_pb_haut_x3) = TRUE
				LET l_pb_haut_x3 s_pb_haut_x3
			END_IF
			IF IsDefined(s_pb_haut_x_h) = TRUE
				LET l_pb_haut_x s_pb_haut_x_h
			END_IF
			IF IsDefined(s_pb_haut_x1_h) = TRUE
				LET l_pb_haut_x1 s_pb_haut_x1_h
			END_IF
			IF IsDefined(s_pb_haut_x2_h) = TRUE
				LET l_pb_haut_x2 s_pb_haut_x2_h
			END_IF
			IF IsDefined(s_pb_haut_x3_h) = TRUE
				LET l_pb_haut_x3 s_pb_haut_x3_h
			END_IF
		END_IF

		IF (((IsDefined(s_posit_traverse) = TRUE) OU (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE)) ET (l_chassis <> "FIXE"))
			IF ((l_val_3vtx = "1") ET (l_numero_ouvrant = "2") ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)))
				LET l_numero_ptbois (NUMBER l_numero_ouvrant + 2)
			ELSE
				LET l_numero_ptbois (NUMBER l_numero_ouvrant + 1)
			END_IF
		ELSE
			LET l_numero_ptbois NUMBER l_numero_ouvrant
		END_IF

		LET l_compteur 1
		WHILE l_compteur <= l_nbre_vt
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")) = TRUE
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")
			ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_g.value.name")) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_g.value.name")
			ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_d.value.name")) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_d.value.name")
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")) = TRUE
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")
			ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_g.value.name")) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_g.value.name")
			ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_d.value.name")) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
				LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_d.value.name")
			ELSE_IF IsDefined(s_type_mont_pb) = TRUE
				LET l_montage_ptbois s_type_mont_pb
			ELSE_IF ((IsDefined(s_type_mont_pb_g) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
				LET l_montage_ptbois s_type_mont_pb_g
			ELSE_IF ((IsDefined(s_type_mont_pb_d) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
				LET l_montage_ptbois s_type_mont_pb_d
			ELSE_IF IsDefined(s_type_mont_pb_h) = TRUE
				LET l_montage_ptbois s_type_mont_pb_h
			ELSE_IF ((IsDefined(s_type_mont_pb_h_g) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
				LET l_montage_ptbois s_type_mont_pb_h_g
			ELSE_IF ((IsDefined(s_type_mont_pb_h_d) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
				LET l_montage_ptbois s_type_mont_pb_h_d
			END_IF
			brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
			LET l_compteur l_compteur+1
			IF ((IsDefined(s_posit_traverse) = TRUE) OU (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE))
				LET l_numero_ptbois l_numero_ptbois+2
			ELSE
				LET l_numero_ptbois l_numero_ptbois+1
			END_IF
		END_WHILE
	END_IF
	LET l_contexte_vitrage (l_contexte_vitrage + 1)

	IF l_posit_traverse > 0
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE)
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
		  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR98") = TRUE)
		  OU (l_cadence = "O"))
			LET l_vitrage l_vitrage_ouvrant
		ELSE
			LET l_couleur_ext_panneau ""
            LET l_couleur_int_panneau ""
			IF ((c_cas_ensemble = "1") OU (IsDefined(s_type_nn) = TRUE))
				LET l_posit_traverse s_posit_traverse
				LET l_vitrage c_type_vitrage_b
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(s_vitrage_argon_b) = TRUE
					IF s_vitrage_argon_b = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage_b) = TRUE
					IF s_filmage_vitrage_b = "O"
						LET l_vitrage (l_vitrage + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */			
				IF IsDefined(s_couleur_ext_panneau_b) = TRUE
					LET l_couleur_ext_panneau s_couleur_ext_panneau_b
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(s_couleur_int_panneau_b) = TRUE
    				LET l_couleur_int_panneau s_couleur_int_panneau_b
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			ELSE
				LET l_posit_traverse confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")
				IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) = TRUE) ET (c_cas_ensemble <> "3"))
					LET l_posit_traverse (l_posit_traverse + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")))
				END_IF
				LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage_b.value")
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name") = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name") = "O"
						LET l_vitrage (l_vitrage + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_b.value.name")) = TRUE
					LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_b.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_b.value.name")) = TRUE
    				LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_b.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			END_IF
		END_IF
		
		IF l_chassis <> "FIXE"
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE))
				IF vg_societe = "CAIB"
					LET l_type_traverse "B6792"
					LET l_ptr_type_traverse "99614770"
					IF l_vitrage = "53848"
						LET l_vitrage "03501"
					END_IF
				ELSE
					LET l_type_traverse "B6791"
					LET l_ptr_type_traverse "99614769"
				END_IF
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
				IF vg_societe = "CAIB"
					LET l_type_traverse "B6794"
					LET l_ptr_type_traverse "99614772"
					IF l_vitrage = "53848"
						LET l_vitrage "03501"
					END_IF
				ELSE
					LET l_type_traverse "B6793"
					LET l_ptr_type_traverse "99614771"
				END_IF
			ELSE
				LET l_type_traverse "P6429 - FIXE haut"
				LET l_ptr_code_trav_1 "95421921"
			END_IF
			brcSIGLigne(4,"TraversesOuvrant","")
			brcSIGLigne(5,"TraverseOuvrant","")
			brcSIGLigne(6,"Orientation","HOR")
			brcSIGLigne(6,"PanneauBas",l_vitrage)
			IF l_couleur_ext_panneau <> ""
				brcSIGLigne(6,"DecorExtPanneau",l_couleur_ext_panneau)
			END_IF
            IF l_couleur_int_panneau <> ""
    			brcSIGLigne(6,"DecorIntPanneau",l_couleur_int_panneau)
			END_IF
			brcSIGLigne(6,"Position",("YmiSA+" + STR l_posit_traverse))
			IF l_vg_serie <> "KLP"
				brcSIGLigne(6,"Reference",l_type_traverse)
				brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
			END_IF
			brcSIGLigne(6,"Point","EXTH")
			
			IF l_nbre_traverse > 1
				brcSIGLigne(5,"TraverseOuvrant","")
				brcSIGLigne(6,"Orientation","HOR")
				brcSIGLigne(6,"PanneauBas",l_vitrage)
				IF l_couleur_ext_panneau <> ""
					brcSIGLigne(6,"DecorExtPanneau",l_couleur_ext_panneau)
				END_IF
                IF l_couleur_int_panneau <> ""
    				brcSIGLigne(6,"DecorIntPanneau",l_couleur_int_panneau)
				END_IF
				brcSIGLigne(6,"Position",("YmiSA+" + STR (((2 * c_hauteur / 3) + l_hauteur_traverse))))
				IF l_vg_serie <> "KLP"
					brcSIGLigne(6,"Reference",l_type_traverse)
					brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
				END_IF
				brcSIGLigne(6,"Point","EXTH")
				
				IF l_nbre_traverse > 2
					brcSIGLigne(5,"TraverseOuvrant","")
					brcSIGLigne(6,"Orientation","HOR")
					brcSIGLigne(6,"PanneauBas",l_vitrage)
					IF l_couleur_ext_panneau <> ""
						brcSIGLigne(6,"DecorExtPanneau",l_couleur_ext_panneau)
					END_IF
                    IF l_couleur_int_panneau <> ""
    					brcSIGLigne(6,"DecorIntPanneau",l_couleur_int_panneau)
					END_IF
					brcSIGLigne(6,"Position",("YmiSA+" + STR (((3 * c_hauteur / 4) + l_hauteur_traverse))))
					IF l_vg_serie <> "KLP"
						brcSIGLigne(6,"Reference",l_type_traverse)
						brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
					END_IF
					brcSIGLigne(6,"Point","EXTH")
				END_IF
			END_IF
		END_IF
		
		/* TRAITEMENT PETITS BOIS DANS L'OUVRANT AVEC TRAVERSE */
		IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE) OU (IsDefined(s_type_mont_pb_b) = TRUE))
			LET l_presence_ptbois 1
			LET l_pb_haut_x 0
			LET l_pb_haut_x1 0
			LET l_pb_haut_x2 0
			LET l_pb_haut_x3 0
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name") ) = TRUE
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value") <> 0
						LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value") <> 0
						LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value") <> 0
						LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value") <> 0
						LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")
					END_IF
				END_IF
			ELSE

				IF IsDefined(s_pb_haut_x_b) = TRUE
					LET l_pb_haut_x s_pb_haut_x_b
				END_IF
				IF IsDefined(s_pb_haut_x1_b) = TRUE
					LET l_pb_haut_x1 s_pb_haut_x1_b
				END_IF
				IF IsDefined(s_pb_haut_x2_b) = TRUE
					LET l_pb_haut_x2 s_pb_haut_x2_b
				END_IF
				IF IsDefined(s_pb_haut_x3_b) = TRUE
					LET l_pb_haut_x3 s_pb_haut_x3_b
				END_IF
			END_IF
			LET l_numero_ptbois 1
			LET l_compteur 1
			WHILE l_compteur <= l_nbre_vt
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")
				ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b_g.value.name")) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b_g.value.name")
				ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b_d.value.name")) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b_d.value.name")
				ELSE_IF IsDefined(s_type_mont_pb_b) = TRUE
					LET l_montage_ptbois s_type_mont_pb_b
				ELSE_IF ((IsDefined(s_type_mont_pb_b_g) = TRUE) ET (l_compteur <= (l_nbre_vt / 2)))
					LET l_montage_ptbois s_type_mont_pb_b_g
				ELSE_IF ((IsDefined(s_type_mont_pb_b_d) = TRUE) ET (l_compteur > (l_nbre_vt / 2)))
					LET l_montage_ptbois s_type_mont_pb_b_d
				END_IF
				brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
				LET l_compteur l_compteur+1
				LET l_numero_ptbois l_numero_ptbois+2
			END_WHILE
		END_IF
			
	END_IF

	IF l_chassis <> "FIXE"
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE))
				IF vg_societe = "CAIB"
					LET l_type_traverse "B6792"
					LET l_ptr_type_traverse "99614770"
				ELSE
					LET l_type_traverse "B6791"
					LET l_ptr_type_traverse "99614769"
				END_IF
			ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE))
				IF vg_societe = "CAIB"
					LET l_type_traverse "B6794"
					LET l_ptr_type_traverse "99614772"
				ELSE
					LET l_type_traverse "B6793"
					LET l_ptr_type_traverse "99614771"
				END_IF
			END_IF
			LET l_position_mtouvrant s_hauteur
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_i.value")) = TRUE
				LET l_position_mtouvrant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_i.value") + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) / 2
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) = TRUE
				IF ((s_ensemble = "ALL") OU (s_ensemble = "ALM"))
					LET l_position_mtouvrant (c_hauteur + confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) / 2
				ELSE
					LET l_position_mtouvrant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value") / 2
				END_IF
			ELSE
				LET l_position_mtouvrant c_hauteur / 2
			END_IF
			IF l_posit_traverse > 0
				LET l_position_mtouvrant l_position_mtouvrant + (l_posit_traverse / 2)
			END_IF
			
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) = TRUE
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
						LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
					ELSE
						LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value") - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
					END_IF
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2E"
					LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value") - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 4)
				ELSE
					LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value") - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
				END_IF
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE
				IF s_ensemble = "CAG"
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
							LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
						ELSE
							LET l_op_posit_montant s_largeur - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
						END_IF
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2E"
						LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + ((s_largeur - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 4)
					ELSE
						LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + ((s_largeur - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 2)
					END_IF
				ELSE_IF s_ensemble = "CAD"
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
							LET l_op_posit_montant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
						ELSE
							LET l_op_posit_montant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
						END_IF
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2E"
						LET l_op_posit_montant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 4)
					ELSE
						LET l_op_posit_montant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 2)
					END_IF
				END_IF
			ELSE
				IF IsDefined(s_larg_vant) = TRUE
					IF s_sens = "TD"
						LET l_op_posit_montant s_larg_vant / 2
					ELSE
						LET l_op_posit_montant s_largeur - (s_larg_vant / 2)
				    END_IF
                ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
						LET l_op_posit_montant (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
					ELSE
						LET l_op_posit_montant s_largeur - (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/s_larg_vant.value") / 2)
					END_IF
                ELSE_IF (((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2E"))
                        OU ((IsDefined(c_chassis) = TRUE) ET (c_chassis = "P2E")))
					LET l_op_posit_montant s_largeur / 4
				ELSE
					LET l_op_posit_montant (s_largeur / 2)
				END_IF
			END_IF
			
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = FALSE) ET (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = FALSE))
				LET l_vitrages_egaux_horiz "1"
			END_IF
			brcSIGLigne(4,"TraversesOuvrant","")
			brcSIGLigne(5,"TraverseOuvrant","")
			brcSIGLigne(6,"Orientation","VER")
			brcSIGLigne(6,"PositionX",("XmiSA+" + STR l_op_posit_montant))
			brcSIGLigne(6,"PositionY",("YmiSA+" + STR l_position_mtouvrant))
			IF l_vg_serie <> "KLP"
				brcSIGLigne(6,"Reference",l_type_traverse)
				brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
			END_IF
			IF l_chassis = "P2E"
				brcSIGLigne(4,"TraversesOuvrant","")
				brcSIGLigne(5,"TraverseOuvrant","")
				brcSIGLigne(6,"Orientation","VER")
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value")) = TRUE
					brcSIGLigne(6,"PositionX","XmiSA+" + STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + (3 * (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_d.value") - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 4)))
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) = TRUE
					IF s_ensemble = "CAG"
						brcSIGLigne(6,"PositionX","XmiSA+" + STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") + (3 * (s_largeur - confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value")) / 4)))
					ELSE_IF s_ensemble = "CAD"
						brcSIGLigne(6,"PositionX","XmiSA+" + STR (3 * confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_z.value") / 4))
					END_IF
				ELSE
					brcSIGLigne(6,"PositionX","XmiSA+" + STR (3 * s_largeur / 4))
				END_IF
				brcSIGLigne(6,"PositionY",("YmiSA+" + STR l_position_mtouvrant))
			END_IF
		
			/* TRAITEMENT PETITS BOIS DANS L'OUVRANT AVEC MONTANT */
			IF l_presence_ptbois = 1
				LET l_compteur 1
				WHILE l_compteur <= l_nbre_vt
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_d.value.name")) = TRUE
						LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_d.value.name")
					ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_d.value.name")) = TRUE
						LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h_d.value.name")
					ELSE_IF IsDefined(s_type_mont_pb_d) = TRUE
						LET l_montage_ptbois s_type_mont_pb_d
					ELSE_IF IsDefined(s_type_mont_pb_h_d) = TRUE
						LET l_montage_ptbois s_type_mont_pb_h_d
					ELSE_IF IsDefined(s_type_mont_pb) = TRUE
						LET l_montage_ptbois s_type_mont_pb
					ELSE_IF IsDefined(s_type_mont_pb_h) = TRUE
						LET l_montage_ptbois s_type_mont_pb_h
					END_IF
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
						LET l_numero_ptbois l_numero_ptbois-1
					END_IF
					brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
					LET l_compteur l_compteur+1
					LET l_numero_ptbois l_numero_ptbois+2
				END_WHILE
			END_IF
			
		END_IF
	END_IF

	/* TRAITEMENT DES FIXES LATERAUX */
	LET l_compteur 1
	WHILE l_compteur <= l_nbre_zones_adj
		LET l_couleur_ext_panneau ""
        LET l_couleur_int_panneau ""
		IF l_compteur = 1
			IF ((l_code_mont_1 = "") ET (l_code_mont_2 = ""))
				IF l_code_trav_1 <> "" /* Allège */
					LET l_numero_fixe "1"
					LET l_numero_zone 2
				ELSE_IF l_code_trav_2 <> "" /* Imposte */
					LET l_numero_fixe "2"
					LET l_numero_zone 2
				END_IF
			ELSE_IF l_code_mont_1 <> ""
				LET l_numero_fixe "1"
				LET l_numero_zone 2
			ELSE
				LET l_numero_fixe "2"
				LET l_numero_zone 2
			END_IF
		ELSE_IF l_compteur = 2
			IF ((l_code_mont_1 = "") ET (l_code_mont_2 = "")) /* Allège ou imposte */
				LET l_numero_fixe "3"
				LET l_numero_zone 3
				IF ((l_code_trav_1 <> "") ET (l_code_trav_2 <> ""))
					LET l_contexte_vitrage 3
				END_IF
			ELSE_IF ((l_code_mont_1 <> "") ET (l_code_trav_1 <> ""))
				LET l_numero_fixe "2"
				LET l_numero_zone 2
			ELSE
				LET l_numero_fixe "3"
				LET l_numero_zone 3
				IF l_code_mont_1 <> ""
					LET l_contexte_vitrage 3
				END_IF
			END_IF
		ELSE_IF l_compteur = 3
			IF ((l_code_mont_1 = "") ET (l_code_mont_2 = ""))
				LET l_numero_fixe "4"
				LET l_numero_zone 4
				LET l_contexte_vitrage 2
			ELSE_IF ((l_code_mont_1 <> "") ET (l_code_trav_2 <> ""))
				LET l_numero_fixe "3"
				LET l_numero_zone 3
			ELSE
				LET l_numero_fixe "4"
				LET l_numero_zone 4
				IF l_code_mont_1 <> ""
					LET l_contexte_vitrage 3
				END_IF
			END_IF
		ELSE_IF l_compteur = 4
			IF ((l_code_mont_1 = "") ET (l_code_mont_2 = ""))
				LET l_numero_fixe "5"
				LET l_numero_zone 5
				LET l_contexte_vitrage 3
			ELSE_IF ((l_code_mont_1 <> "") ET (l_code_trav_3 <> ""))
				LET l_numero_fixe "4"
				LET l_numero_zone 4
			ELSE
				LET l_numero_fixe "5"
				LET l_numero_zone 5
				IF l_code_mont_1 <> ""
					LET l_contexte_vitrage 3
				END_IF
			END_IF
		ELSE_IF l_compteur = 5
			LET l_numero_fixe "6"
			LET l_numero_zone 6
			LET l_contexte_vitrage 3
		ELSE_IF l_compteur = 6
			LET l_numero_fixe "7"
			LET l_numero_zone 7
		ELSE_IF l_compteur = 7
			LET l_numero_fixe "8"
			LET l_numero_zone 8
		ELSE_IF l_compteur = 8
			LET l_numero_fixe "9"
			LET l_numero_zone 9
		END_IF

		IF ((c_cas_ensemble <> "1") ET (IsDefined(s_type_nn) = FALSE))
			IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/zone.FP/c_chassis.value.name") = "FIXE")
			 ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
              OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
			  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
			  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
			  OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
              OU (l_modele_porte = "G7-M2") OU (l_modele_porte = "G7-M3")))
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
					LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
					SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
					IF (Tab["NR"] > 0)
						LET l_grp_vit Tab[1,0]
					ELSE
						LET l_grp_vit ""
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name") = "O"
							LET l_vitrage (l_vitrage + "A")
						END_IF
					END_IF
					/* ST - CT797 - DDS2953 - Filmage vitrage */
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name") = "O"
							LET l_vitrage (l_vitrage + "F")
						END_IF
					END_IF
					/* ----------- Fin de modification ----------- */
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")) = TRUE
						LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")
					ELSE_IF l_grp_vit = "FPAL"
						LET l_couleur_ext_panneau l_decor_ext
					END_IF
                    IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")) = TRUE
    					LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")
					ELSE_IF l_grp_vit = "FPAL"
						LET l_couleur_int_panneau l_decor_int
					END_IF
				ELSE
					IF ((l_numero_fixe = "5") OU ((l_numero_fixe = "3") ET (s_ensemble = "CAD")) OU ((l_numero_fixe = "2") ET ((s_ensemble = "CAG") OU (s_ensemble = "CADG"))))
						LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")
						SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
						IF (Tab["NR"] > 0)
							LET l_grp_vit Tab[1,0]
						ELSE
							LET l_grp_vit ""
						END_IF
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name") = "O"
								LET l_vitrage (l_vitrage + "A")
							END_IF
						END_IF
						/* ST - CT797 - DDS2953 - Filmage vitrage */
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name") = "O"
								LET l_vitrage (l_vitrage + "F")
							END_IF
						END_IF
						/* ----------- Fin de modification ----------- */
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")) = TRUE
							LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")
						ELSE_IF l_grp_vit = "FPAL"
							LET l_couleur_ext_panneau l_decor_ext
						END_IF
                        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")) = TRUE
    						LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")
						ELSE_IF l_grp_vit = "FPAL"
							LET l_couleur_int_panneau l_decor_int
						END_IF
					ELSE_IF ((l_numero_fixe = "1") OU ((l_numero_fixe = "2") ET (s_ensemble = "CAD")) OU (l_numero_fixe = "4"))
						LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_b.value")
						SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
						IF (Tab["NR"] > 0)
							LET l_grp_vit Tab[1,0]
						ELSE
							LET l_grp_vit ""
						END_IF
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name") = "O"
								LET l_vitrage (l_vitrage + "A")
							END_IF
						END_IF
						/* ST - CT797 - DDS2953 - Filmage vitrage */
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name") = "O"
								LET l_vitrage (l_vitrage + "F")
							END_IF
						END_IF
						/* ----------- Fin de modification ----------- */
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_b.value.name")) = TRUE
							LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_b.value.name")
						ELSE_IF l_grp_vit = "FPAL"
							LET l_couleur_ext_panneau l_decor_ext
						END_IF
                        IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_b.value.name")) = TRUE
    						LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_b.value.name")
						ELSE_IF l_grp_vit = "FPAL"
							LET l_couleur_int_panneau l_decor_int
						END_IF
					END_IF
				END_IF
			ELSE_IF ((l_val_3vtx = "1") ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)))
				LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name") = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_h.value.name") = "O"
						LET l_vitrage (l_vitrage + "F")
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")) = TRUE
					LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau_h.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")) = TRUE
    				LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau_h.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			ELSE
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = FALSE
					/* Cas de montant intermediaire dans allege ou imposte fixe */
					LET l_contexte_vitrage (l_contexte_vitrage - 1)
				END_IF
				LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name")) = TRUE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name") = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				LOCAL l_VG_CT797 confML.getObjectByCPE("CPE.rootCP.FO/ROOT.FP/vg_evol_CT797.value")
				IF IsDefined(l_VG_CT797)
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage.value.name") = "O"
							LET l_vitrage (l_vitrage + "F")
						END_IF
					END_IF
				END_IF
				/* ----------- Fin de modification ----------- */
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")) = TRUE
					LET l_couleur_ext_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_ext_panneau.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")) = TRUE
    				LET l_couleur_int_panneau confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_couleur_int_panneau.value.name")
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			END_IF
		ELSE_IF (((c_cas_ensemble = "1") OU (IsDefined(s_type_nn) = TRUE)) ET (l_chassis = "FIXE"))
			IF IsDefined(c_type_vitrage) = TRUE
				LET l_vitrage c_type_vitrage
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(s_vitrage_argon) = TRUE
					IF s_vitrage_argon = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				IF IsDefined(s_filmage_vitrage) = TRUE
					IF s_filmage_vitrage = "O"
						LET l_vitrage (l_vitrage + "F")
					END_IF
				END_IF				
				/* ----------- Fin de modification ----------- */
				IF IsDefined(s_couleur_ext_panneau) = TRUE
					LET l_couleur_ext_panneau s_couleur_ext_panneau
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(s_couleur_int_panneau) = TRUE
    				LET l_couleur_int_panneau s_couleur_int_panneau
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			ELSE_IF ((IsDefined(c_type_vitrage_b) = TRUE) ET (l_numero_fixe = "1"))
				LET l_vitrage c_type_vitrage_b
				SQL_QUERY ("SELECT GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE='" + l_vitrage + "'") IN "Tab"
				IF (Tab["NR"] > 0)
					LET l_grp_vit Tab[1,0]
				ELSE
					LET l_grp_vit ""
				END_IF
				IF IsDefined(s_vitrage_argon_b) = TRUE
					IF s_vitrage_argon_b = "O"
						LET l_vitrage (l_vitrage + "A")
					END_IF
				END_IF
				/* ST - CT797 - DDS2953 - Filmage vitrage */
				SI ((IsDefined(s_filmage_vitrage_b)= TRUE) ET s_filmage_vitrage_b = "O")
					LET l_vitrage (l_vitrage + "F")
				FIN_SI
				/* ----------- Fin de modification ----------- */					
				IF IsDefined(s_couleur_ext_panneau_b) = TRUE
					LET l_couleur_ext_panneau s_couleur_ext_panneau_b
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_ext_panneau l_decor_ext
				END_IF
                IF IsDefined(s_couleur_int_panneau_b) = TRUE
    				LET l_couleur_int_panneau s_couleur_int_panneau_b
				ELSE_IF l_grp_vit = "FPAL"
					LET l_couleur_int_panneau l_decor_int
				END_IF
			END_IF
		END_IF

		brcSIGLigne(3,"Ouvrant","")
		brcChacalOuvrant(l_numero_zone)
		brcSIGLigne(4,"Numero",l_numero_fixe)
		
		IF ((l_val_3vtx = "1") /*OU ((s_ensemble = "CADG") ET (l_chassis = "FIXE"))*/)
			brcSIGLigne(4,"Type","Frappe")
			IF l_numero_fixe = "1"
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FA1"
					LET l_ouverture "OF1"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "OB1"
					LET l_ouverture "OB1"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FA2"
					LET l_ouverture "OF2"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "OB2"
					LET l_ouverture "OB2"
				ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "CS"
					LET l_ouverture "Souf"
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
					IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name")) "2" > 0
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
							LET l_sens "G"
						ELSE
							LET l_sens "D"
						END_IF
					ELSE
						LET l_sens SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name")) 2 1
					END_IF
				ELSE
					LET l_sens "D"
				END_IF
			ELSE
				IF s_ensemble = "CADG"
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "FA1"
						LET l_ouverture "OF1"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "OB1"
						LET l_ouverture "OB1"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "FA2"
						LET l_ouverture "OF2"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "OB2"
						LET l_ouverture "OB2"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name") = "CS"
						LET l_ouverture "Souf"
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
						IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name")) "2" > 0
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
								LET l_sens "G"
							ELSE
								LET l_sens "D"
							END_IF
						ELSE
							LET l_sens SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_sens.value.name")) 2 1
						END_IF
					ELSE
						LET l_sens "G"
					END_IF
				ELSE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FA1"
						LET l_ouverture "OF1"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "OB1"
						LET l_ouverture "OB1"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "FA2"
						LET l_ouverture "OF2"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "OB2"
						LET l_ouverture "OB2"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name") = "CS"
						LET l_ouverture "Souf"
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
						IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name")) "2" > 0
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name") = "TD"
								LET l_sens "G"
							ELSE
								LET l_sens "D"
							END_IF
						ELSE
							LET l_sens SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_sens.value.name")) 2 1
						END_IF
					ELSE
						LET l_sens "G"
					END_IF
				END_IF
			END_IF
			
			brcSIGLigne(4,"Ouverture",l_ouverture)
			
			IF l_ouverture <> "Souf"
				brcSIGLigne(4,"Sens",l_sens)
				
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) = TRUE
					IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")
					END_IF
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) = TRUE
					IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")
					END_IF
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) = TRUE
					IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_OUVRANT.FP/s_hauteur_poignee.value.name")
					END_IF
				END_IF
				
				IF l_hauteur_poignee <> "standard"
					brcSIGLigne(4,"COTEP",(STR ((NUMBER l_hauteur_poignee) - 18)))
				END_IF
                
                IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) = TRUE
    				IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")
					END_IF
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) = TRUE
					IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")
					END_IF
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) = TRUE
					IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 1 1) = "T"
						LET l_hauteur_poignee SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name"))) - 1)
					ELSE
						LET l_hauteur_poignee confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/SC_F_PM_ACCESSOIRES.FP/vs_hauteur_poignee.value.name")
					END_IF
				END_IF
				
				IF l_hauteur_poignee <> "standard"
					brcSIGLigne(4,"COTEP",(STR ((NUMBER l_hauteur_poignee) - 18)))
				END_IF
			END_IF

			brcSIGLigne(4,"Remplissage",l_vitrage)
			SI l_couleur_ext_panneau <> ""
				brcSIGLigne(4,"DecorExtPanneau",l_couleur_ext_panneau)
			FIN_SI
            SI l_couleur_int_panneau <> ""
    			brcSIGLigne(4,"DecorIntPanneau",l_couleur_int_panneau)
			FIN_SI
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE))
					LET l_vitrage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_b.value")
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name") = "O"
							LET l_vitrage (l_vitrage + "A")
						END_IF
						/* ST - CT797 - DDS2953 - Filmage vitrage */
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_filmage_vitrage_b.value.name") = "O"
								LET l_vitrage (l_vitrage + "F")
							END_IF
						END_IF
						/* ----------- Fin de modification ----------- */							
					END_IF
				END_IF
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE))
					IF vg_societe = "CAIB"
						LET l_type_traverse "B6792"
						LET l_ptr_type_traverse "99614770"
						IF l_vitrage = "53848"
							LET l_vitrage "03501"
						END_IF
					ELSE
						LET l_type_traverse "B6791"
						LET l_ptr_type_traverse "99614769"
					END_IF
				ELSE_IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
					IF vg_societe = "CAIB"
						LET l_type_traverse "B6794"
						LET l_ptr_type_traverse "99614772"
						IF l_vitrage = "53848"
							LET l_vitrage "03501"
						END_IF
					ELSE
						LET l_type_traverse "B6793"
						LET l_ptr_type_traverse "99614771"
					END_IF
				END_IF
				brcSIGLigne(4,"TraversesOuvrant","")
				brcSIGLigne(5,"TraverseOuvrant","")
				brcSIGLigne(6,"Orientation","HOR")
				brcSIGLigne(6,"PanneauBas",l_vitrage)
				brcSIGLigne(6,"Position",("YmiSA+" + STR l_posit_traverse))
				IF l_vg_serie <> "KLP"
					brcSIGLigne(6,"Reference",l_type_traverse)
					brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
				END_IF
				brcSIGLigne(6,"Point","EXTH")
				IF l_nbre_traverse > 1
					brcSIGLigne(5,"TraverseOuvrant","")
					brcSIGLigne(6,"Orientation","HOR")
					brcSIGLigne(6,"PanneauBas",l_vitrage)
					brcSIGLigne(6,"Position",("YmiSA+" + STR (((2 * c_hauteur / 3) + l_hauteur_traverse))))
					IF l_vg_serie <> "KLP"
						brcSIGLigne(6,"Reference",l_type_traverse)
						brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
					END_IF
					brcSIGLigne(6,"Point","EXTH")
				END_IF
				IF l_nbre_traverse > 2
					brcSIGLigne(5,"TraverseOuvrant","")
					brcSIGLigne(6,"Orientation","HOR")
					brcSIGLigne(6,"PanneauBas",l_vitrage)
					brcSIGLigne(6,"Position",("YmiSA+" + STR (((3 * c_hauteur / 4) + l_hauteur_traverse))))
					IF l_vg_serie <> "KLP"
						brcSIGLigne(6,"Reference",l_type_traverse)
						brcSIGLigne(6,"PtrReference",l_ptr_type_traverse)
					END_IF
					brcSIGLigne(6,"Point","EXTH")
				END_IF
				/* TRAITEMENT PETITS BOIS DANS L'OUVRANT AVEC TRAVERSE */
				IF s_ensemble = "CADG"
					IF l_numero_fixe = "1"
						LET l_numero_ptbois 1
					ELSE
						LET l_numero_ptbois 7
					END_IF
				ELSE_IF s_ensemble = "CAG"
					IF l_numero_fixe = "1"
						LET l_numero_ptbois 1
					END_IF
				ELSE_IF s_ensemble = "CAD" /* Fiche 00280 */
					IF l_numero_fixe = "2"
						LET l_numero_ptbois 5
					END_IF
				END_IF
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE
					LET l_presence_ptbois 1
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") ) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
							LET l_type_pb confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
						ELSE
							LET l_type_pb confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")
						END_IF
					END_IF
					
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")) = TRUE
						LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")) = TRUE
						LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")) = TRUE
						LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")) = TRUE
						LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")
					END_IF
					brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
				END_IF
				LET l_numero_ptbois (l_numero_ptbois + 1)
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")) = TRUE
					LET l_presence_ptbois 1
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") ) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
							LET l_type_pb confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
						ELSE
							LET l_type_pb confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")
						END_IF
					END_IF
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")				
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")) = TRUE
						LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")) = TRUE
						LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")) = TRUE
						LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")) = TRUE
						LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")
					END_IF
					brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
				END_IF
			END_IF
		ELSE
			brcSIGLigne(4,"Type","Fixe")
			brcSIGLigne(4,"Ouverture","FixCadre")
			brcSIGLigne(4,"Remplissage",l_vitrage)
			SI l_couleur_ext_panneau <> ""
				brcSIGLigne(4,"DecorExtPanneau",l_couleur_ext_panneau)
			FIN_SI
            SI l_couleur_int_panneau <> ""
    			brcSIGLigne(4,"DecorIntPanneau",l_couleur_int_panneau)
			FIN_SI
		END_IF

		/* TRAITEMENT PETITS BOIS DES FIXES */
		IF ((l_chassis = "FIXE") ET ((IsDefined(s_type_mont_pb) = TRUE) OU ((IsDefined(s_type_mont_pb_g) = TRUE) ET (l_numero_fixe = "1")))
				ET ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR86") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONR98") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)))
			LET l_presence_ptbois 1
			LET l_presence_ptbois_fixe 1
			IF s_type_pb = "PBA"
				LET l_type_pb_fixe s_pb_special
			ELSE
				LET l_type_pb_fixe s_type_pb
			END_IF
			IF l_type_pb = ""
				LET l_type_pb l_type_pb_fixe
			END_IF
			IF ((IsDefined(s_type_mont_pb_g) = TRUE) ET (l_numero_fixe = "1"))
				LET l_montage_ptbois s_type_mont_pb_g
			ELSE
				LET l_montage_ptbois s_type_mont_pb
			END_IF
			LET l_pb_haut_x 0
			LET l_pb_haut_x1 0
			LET l_pb_haut_x2 0
			LET l_pb_haut_x3 0
			IF IsDefined(s_pb_haut_x) = TRUE
				LET l_pb_haut_x s_pb_haut_x
			END_IF
			IF IsDefined(s_pb_haut_x1) = TRUE
				LET l_pb_haut_x1 s_pb_haut_x1
			END_IF
			IF IsDefined(s_pb_haut_x2) = TRUE
				LET l_pb_haut_x2 s_pb_haut_x2
			END_IF
			IF IsDefined(s_pb_haut_x3) = TRUE
				LET l_pb_haut_x3 s_pb_haut_x3
			END_IF
			IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> ""))
				LET l_numero_ptbois "1"
			ELSE
				LET l_numero_ptbois STR ((NUMBER l_numero_fixe) + (l_nbre_vt - 1))
			END_IF
			brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
		END_IF
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")) = TRUE
			LET l_presence_ptbois 1
			LET l_presence_ptbois_fixe 1
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") ) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
					LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
				ELSE
					LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")
				END_IF
				IF l_type_pb = ""
					LET l_type_pb l_type_pb_fixe
				END_IF
			END_IF
			LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")
			LET l_pb_haut_x 0
			LET l_pb_haut_x1 0
			LET l_pb_haut_x2 0
			LET l_pb_haut_x3 0
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x.value")) = TRUE
				LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x.value")
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1.value")) = TRUE
				LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1.value")
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2.value")) = TRUE
				LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2.value")
			END_IF
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3.value")) = TRUE
				LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3.value")
			END_IF
			IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
				LET l_numero_ptbois "1"
			ELSE_IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET ((s_ensemble = "ALL") OU (s_ensemble = "ALM") OU (s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM"))) /* Cas ALLEGE */
				IF l_numero_fixe = "1"
					LET l_numero_ptbois "1"
				ELSE_IF l_numero_fixe = "2"
					LET l_numero_ptbois "4"
				END_IF
			ELSE
				LET l_numero_ptbois STR((NUMBER l_numero_fixe) + (l_nbre_vt - 1))
			END_IF
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
    				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
    				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
				IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
					LET l_numero_ptbois (NUMBER l_numero_ptbois + 1)
				ELSE_IF l_val_3vtx = "1"
					IF l_numero_fixe = "3"
						LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 2)
					ELSE
						LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 1)
					END_IF
				ELSE
					LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt)
				END_IF
			END_IF
			brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
		END_IF
		IF l_cas_trav_fixe_cadg = 1
			IF ((l_numero_fixe = "5") OU ((l_numero_fixe = "3") ET (s_ensemble = "CAD")) OU ((l_numero_fixe = "2") ET ((s_ensemble = "CAG") OU (s_ensemble = "CADG"))))
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")) = TRUE
					LET l_presence_ptbois 1
					LET l_presence_ptbois_fixe 1
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") ) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
							LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
						ELSE
							LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")
						END_IF
						IF l_type_pb = ""
							LET l_type_pb l_type_pb_fixe
						END_IF
					END_IF

					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")
					LET l_pb_haut_x 0
					LET l_pb_haut_x1 0
					LET l_pb_haut_x2 0
					LET l_pb_haut_x3 0
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value") <> 0
							LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_h.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value") <> 0
							LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_h.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value") <> 0
							LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_h.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value") <> 0
							LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_h.value")
						END_IF
					END_IF
					IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
						LET l_numero_ptbois "1"
					ELSE
						LET l_numero_ptbois STR((NUMBER l_numero_fixe) + (l_nbre_vt - 1))
					END_IF
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
    					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
    					OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
							LET l_numero_ptbois (NUMBER l_numero_ptbois + 1)
						ELSE_IF l_val_3vtx = "1"
							IF l_numero_fixe = "3"
								LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 2)
							ELSE
								LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 1)
							END_IF
						ELSE
							LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt)
							IF IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE
								LET l_numero_ptbois l_numero_ptbois + 1
							END_IF
						END_IF
					END_IF
					brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
				END_IF
			ELSE_IF ((l_numero_fixe = "1") OU ((l_numero_fixe = "2") ET (s_ensemble = "CAD")) OU (l_numero_fixe = "4"))
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE
					LET l_presence_ptbois 1
					LET l_presence_ptbois_fixe 1
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") ) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name") = "PBA"
							LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_special.value.name")
						ELSE
							LET l_type_pb_fixe confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_pb.value.name")
						END_IF
						IF l_type_pb = ""
							LET l_type_pb l_type_pb_fixe
						END_IF
					END_IF
					LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")
					LET l_pb_haut_x 0
					LET l_pb_haut_x1 0
					LET l_pb_haut_x2 0
					LET l_pb_haut_x3 0
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value") <> 0
							LET l_pb_haut_x confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x_b.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value") <> 0
							LET l_pb_haut_x1 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x1_b.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value") <> 0
							LET l_pb_haut_x2 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x2_b.value")
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value") <> 0
							LET l_pb_haut_x3 confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_contexte_vitrage + "].FO/SC_F_VITRAGE.FP/s_pb_haut_x3_b.value")
						END_IF
					END_IF
					IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
						LET l_numero_ptbois "1"
					ELSE
						LET l_numero_ptbois STR((NUMBER l_numero_fixe) + (l_nbre_vt - 1))
					END_IF
					IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
    						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV50") = TRUE)
							OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE)
    						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
    						OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
						IF (((l_numero_fixe = "1") OU (l_numero_fixe = "2")) ET (l_code_mont_1 <> "")) /* Cas CAG */
							LET l_numero_ptbois (NUMBER l_numero_ptbois + 1)
						ELSE_IF l_val_3vtx = "1"
							IF l_numero_fixe = "3"
								LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 2)
							ELSE
								LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt + 1)
							END_IF
						ELSE
							LET l_numero_ptbois (NUMBER l_numero_ptbois + l_nbre_vt)
						END_IF
					END_IF
					brcPetitBoisChacal(l_montage_ptbois,l_numero_ptbois,l_pb_haut_x,l_pb_haut_x1,l_pb_haut_x2,l_pb_haut_x3)
				END_IF
			END_IF
		END_IF
		LET l_compteur l_compteur + 1
	END_WHILE

	IF l_methode_chacal_vitrage = "TROU"
		LET l_numero_trou l_numero_ouvrant
		LET l_numero_trou2 1
		IF IsDefined(s_ensemble) = TRUE
			IF ((s_ensemble = "IMP") OU (s_ensemble = "IMM"))
				LET l_numero_trou "2"
				IF s_ensemble = "IMM"
					LET l_numero_trou2 2
				END_IF
			END_IF
		END_IF
		brcSIGLigne(2,"Remplissages","")
		LET l_nb_vtx 1
		IF l_klpe_tierce_deco = "O"
			LET l_nb_vtx 2
		END_IF
		IF ((l_chassis = "P2I") OU (l_chassis = "P2E"))
			LET l_nb_vtx 2
		END_IF
		IF l_nb_vtx = 2 
			IF l_sens_ens = "TD"
				LET l_numero_vs l_numero_trou
				LET l_numero_sf STR ((NUMBER l_numero_trou) + l_numero_trou2)
			ELSE_IF l_sens_ens = "TG"
				LET l_numero_sf l_numero_trou
				LET l_numero_vs STR ((NUMBER l_numero_trou) + l_numero_trou2)
			END_IF
			brcSIGLigne(3,"Remplissage","")
			brcSIGLigne(4,"Numero",l_numero_vs)
			brcSIGLigne(4,"RefRemplissage",l_vitrage_ouvrant)
			brcSIGLigne(3,"Remplissage","")
			brcSIGLigne(4,"Numero",l_numero_sf)
			brcSIGLigne(4,"RefRemplissage",l_vitrage_sf)
		ELSE
			brcSIGLigne(3,"Remplissage","")
			brcSIGLigne(4,"Numero",l_numero_trou)
			brcSIGLigne(4,"RefRemplissage",l_vitrage_ouvrant)
		END_IF
	END_IF
	IF l_presence_ptbois = 1
		brcSIGLigne(2,"PetitsBois","")
		IF l_type_pb =  "PBL" /* Petit bois laiton tradi */
			brcSIGLigne(3,"PtrModele","1048599")
		ELSE_IF ((l_type_pb = "PBA") OU (l_type_pb = "PB45")) /* Petit bois de 45mm */
			brcSIGLigne(3,"PtrModele","1048598")
		ELSE_IF l_type_pb =  "PBP" /* Petit bois plomb tradi */
			brcSIGLigne(3,"PtrModele","1048893")
		ELSE_IF l_type_pb =  "PBB" /* Petit bois blanc tradi */
			brcSIGLigne(3,"PtrModele","95420615")
		ELSE_IF l_type_pb =  "PB18" /* Petit bois de 18mm */
			brcSIGLigne(3,"PtrModele","95420616")
		ELSE_IF l_type_pb =  "PBFV" /* Petit bois Filet de Versailles 8mm */
			brcSIGLigne(3,"PtrModele","1048894")
        /*ELSE                        /* Petit bois de 26mm */
    	/*	brcSIGLigne(3,"PtrModele","1048595")  */  
		ELSE_IF l_type_pb =  "PB26" /* Petit bois de 26mm */
			brcSIGLigne(3,"PtrModele","1048595")
        ELSE_IF ((l_type_pb =  "PBC30") OU (l_type_pb =  "PBC50")) /* Petit bois collés de 30mm et 50mm sans intercalaire fictif */
    		brcSIGLigne(3,"PtrModele","97517872")
        ELSE_IF ((l_type_pb =  "PBC30_IF") OU (l_type_pb =  "IF24"))/* Petit collés de 30mm avec intercalaire fictif et intercalaire fictif seul de 24mm*/
    		brcSIGLigne(3,"PtrModele","97517838")
        ELSE_IF ((l_type_pb =  "PBC50_IF") OU (l_type_pb =  "IF48"))/* Petit collés de 50mm avec intercalaire fictif et intercalaire fictif seul de 48mm*/
        	brcSIGLigne(3,"PtrModele","97517871")
		END_IF
    
		IF ((c_cas_ensemble = "4") OU (c_cas_ensemble = "5") OU (c_cas_ensemble = "11") OU (c_cas_ensemble = "13")) /* FIXE(s) LATERAUX */
			IF l_val_croisillon_filant = 1				
				brcSIGLigne(3,"FilantCroisillonHori","OUI")
			END_IF
		END_IF
		IF ((c_cas_ensemble = "3") ET ((l_chassis = "FS1") OU (l_chassis = "FS2") OU (l_chassis = "FS2I")) ET (l_presence_ptbois_ouvr = 1) ET (l_presence_ptbois_fixe = 1)) /* Petits bois IN une imposte fixe et chassis avec serrure */
			brcSIGLigne(3,"FilantCroisillonVerti","OUI")
		END_IF
		brcSIGLigne(3,"PTBElements","")
		LET l_compteur 1
		WHILE l_compteur <= tab_pt_bois["NR"]
			brcSIGLigne(tab_pt_bois[l_compteur,0],tab_pt_bois[l_compteur,1],tab_pt_bois[l_compteur,2])
			LET l_compteur l_compteur + 1
		END_WHILE
	END_IF
	IF l_vitrages_egaux_horiz = "1"
		brcSIGLigne(2,"VitragesEgaux","")
		IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE)
				OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRMT50") = TRUE))
			IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "CAG") OU (s_ensemble = "CADG")))
				brcSIGLigne(3,"Horizontal","4")
				brcSIGLigne(3,"Horizontal","5")
			ELSE
				brcSIGLigne(3,"Horizontal","2")
				IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "IMP") OU (s_ensemble = "IMM")))
					brcSIGLigne(3,"Horizontal","4")
				ELSE
					brcSIGLigne(3,"Horizontal","3")
				END_IF
			END_IF
		ELSE
			brcSIGLigne(3,"Horizontal","")
		END_IF
	END_IF
	IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
	 OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
	 OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE)
	 OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)
	 OU (l_cadence = "O"))
		/* Nouvelle méthode de génération des égalités de vitrages */
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "CAG") OU (s_ensemble = "CADG")))
			IF l_cadence <> "O"
				brcSIGLigne(2,"VitragesEgaux","")
				LET l_compteur 1
				WHILE l_compteur <= l_nbre_traverse + 1
					brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
					LET l_compteur l_compteur + 1
					LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
				END_WHILE
			ELSE
				LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
			END_IF
			
			IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name")) "2" > 0
				IF l_cadence <> "O"
					LET l_compteur 1
					WHILE l_compteur <= l_nbre_traverse + 1
						brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
						LET l_compteur l_compteur + 1
						LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
					END_WHILE
				ELSE
					LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
				END_IF
			END_IF
		END_IF
		
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "ALL") OU (s_ensemble = "ALM") OU (s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM")))
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		brcSIGLigne(2,"VitragesEgaux","")
		IF (((l_cadence = "O") ET ((l_chassis = "P1") OU (l_chassis = "P2E") OU ((l_chassis = "P2I") ET (l_sens = "TD")))) OU (l_cadence <> "O"))
			LET l_compteur 1
			WHILE l_compteur <= l_nbre_traverse + 1
				brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
				LET l_compteur l_compteur + 1
				LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
			END_WHILE
		ELSE_IF l_cadence = "O"
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "IMP") OU (s_ensemble = "IMM") OU (s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM")))
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "ALM") OU (s_ensemble = "ALM-IMM")))
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		IF (((l_cadence = "O") ET ((l_chassis = "P2E") OU ((l_chassis = "P2I") ET (l_sens = "TG")))) OU ((l_cadence <> "O") ET (FIND_STR l_chassis "2" > 0)))
			LET l_compteur 1
			WHILE l_compteur <= l_nbre_traverse + 1
				brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
				LET l_compteur l_compteur + 1
				LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
			END_WHILE
		ELSE_IF ((l_cadence = "O") ET (l_chassis = "P2I"))
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "IMM") OU (s_ensemble = "ALM-IMM")))
			LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
		END_IF
		
		IF ((IsDefined(s_ensemble) = TRUE) ET ((s_ensemble = "CAD") OU (s_ensemble = "CADG")))
			IF l_cadence <> "O"
				brcSIGLigne(2,"VitragesEgaux","")
				LET l_compteur 1
				WHILE l_compteur <= l_nbre_traverse + 1
					brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
					LET l_compteur l_compteur + 1
					LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
				END_WHILE
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name")) = TRUE
					IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[3].FO/zone.FP/c_chassis.value.name")) "2" > 0
						LET l_compteur 1
						WHILE l_compteur <= l_nbre_traverse + 1
							brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
							LET l_compteur l_compteur + 1
							LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
						END_WHILE
					END_IF
				ELSE
					IF FIND_STR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[2].FO/zone.FP/c_chassis.value.name")) "2" > 0
						LET l_compteur 1
						WHILE l_compteur <= l_nbre_traverse + 1
							brcSIGLigne(3,"Vertical",STR l_num_vitrage_vertical)
							LET l_compteur l_compteur + 1
							LET l_num_vitrage_vertical l_num_vitrage_vertical + 1
						END_WHILE
					END_IF
				END_IF
			END_IF
		END_IF
		/* Ancienne méthode
		brcSIGLigne(2,"VitragesEgaux","")
		brcSIGLigne(3,"Vertical","1")
		brcSIGLigne(3,"Vertical","3")
		brcSIGLigne(3,"Vertical","5")
		brcSIGLigne(3,"Vertical","7")
		brcSIGLigne(3,"Vertical","9")
		brcSIGLigne(3,"Vertical","11")
		brcSIGLigne(3,"Vertical","13")
		*/
		
	END_IF
	
	IF ((IsDefined(vs_nb_telecommande) = TRUE) AND (vs_nb_telecommande <> 0))
		brcSIGLigne(1,"Negoce","")
		brcSIGLigne(2,"ArticlesSupplementaires","")
		brcSIGLigne(3,"ArticleSupplementaire","")
		brcSIGLigne(4,"Reference","25345")
		brcSIGLigne(4,"Quantite", STR vs_nb_telecommande)
		/*brcSIGLigne(4,"DecorExterieur",)
		brcSIGLigne(4,"DecorInterieur",)
		brcSIGLigne(4,"Dimension",)
		brcSIGLigne(4,"Angle1",)
		brcSIGLigne(4,"Angle2",)*/
	FIN_SI
	
ELSE_IF aSIG = "THERMO"
	brcChacal(vg_serie_chassis)
	LET l_code_pc APArtGen
	brcSIGLigne(2,"Zones","")
	IF ((c_cas_ensemble <> "1") ET (IsDefined(s_type_nn) = FALSE))
		IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
			IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G5") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G6") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G7"))
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2I"
					LET l_code_pc "PC_PE2_TIERCES"
				END_IF
			ELSE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2I"
					LET l_code_pc "PC_PM2_TIERCES"
				END_IF
			END_IF
		END_IF
		LET l_compteur_ens 1
		IF ((s_ensemble = "ALL") OU (s_ensemble = "ALM") OU (s_ensemble = "IMP") OU (s_ensemble = "IMM") OU (s_ensemble = "CAD") OU (s_ensemble = "CAG"))
			LET l_nb_zone 2
		ELSE_IF ((s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM") OU (s_ensemble = "CADG"))
			LET l_nb_zone 3
		ELSE
			LET l_nb_zone s_zone
		END_IF
		WHILE l_compteur_ens <= l_nb_zone
			LET l_montage_ptbois ""
			IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name") <> "G7"
					LET l_boucle_vit 0
				END_IF
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
				LET l_boucle_vit 1
			ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")) = TRUE
				LET l_boucle_vit 2
			END_IF
			IF l_boucle_vit = 0
				LET l_type_zone "OP" /* OUVRANT PANNEAU */
				IF IsDefined(l_vitrage_ouvrant) = TRUE
					LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_vitrage_ouvrant + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
					SQL_QUERY l_req dans "Tab_vitrage"
					IF Tab_vitrage["NR"] > 0
						IF Tab_vitrage[1,0] <> ""
							IF (SUBSTR Tab_vitrage[1,0] 1 1) = "7"
								LET l_type_zone "OT" /* Triple vitrage */
							END_IF
						END_IF
						IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
							LET l_type_zone "EDR" /* EDR */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
							LET l_type_zone "OP" /* OUVRANT PANNEAU */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
							IF Tab_vitrage[1,1] > 28
								LET l_type_zone "OT" /* Triple vitrage */
							ELSE
								LET l_type_zone "OD" /* Double vitrage */
							END_IF
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT"))
							LET l_type_zone "OD" /* Double vitrage */
							IF Tab_vitrage[1,0] <> ""
								IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
									LET l_type_zone "OT" /* Triple vitrage */
								END_IF
							END_IF																			
						END_IF
					END_IF
				END_IF
				IF (LONGUEUR l_type_zone) = 2
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G9"
						/*LET l_type_zone (l_type_zone + "PV")*/
                        LET l_type_zone ("OTPV")
					ELSE
						LET l_type_zone (l_type_zone + "P")
					END_IF
				END_IF
				IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name") = "G10"
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name")) = TRUE
						IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name") = "M02") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name") = "M03") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name") = "M04") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_motif_vitrage.value.name") = "M05"))
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G10-M8"
								SOIT l_montage_ptbois "ARC"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G10-M6"
								SOIT l_montage_ptbois "RECTANGLE"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G10-M2"
								SOIT l_montage_ptbois "DEMILUNE_1V"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G10-M3"
								SOIT l_montage_ptbois "DEMILUNE_3V"
							ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G10-M4"
								SOIT l_montage_ptbois "DEMILUNE_5V"
							END_IF
						END_IF
					END_IF
				END_IF
				LET l_nom_zone "A"
				brcSIGLigne(3,"Zone","")
				brcSIGLigne(4,"Nom",(STR l_nom_zone))
				brcSIGLigne(4,"TypeZone",l_type_zone)
				brcSIGLigne(4,"ComposantVitrage","")
				IF IsDefined(l_vitrage_ouvrant) = TRUE
					brcSIGLigne(5,"Code",l_vitrage_ouvrant)
				ELSE
					brcSIGLigne(5,"Code","?????")
				END_IF

				IF ((SUBSTR l_type_zone 1 2 = "OT") OU (SUBSTR l_type_zone 1 2 = "OD")) /* double et triple vitrage */
					brcSIGLigne(5,"NatureGaz","ARGON")
				ELSE /* Edr et panneau */
					brcSIGLigne(5,"NatureGaz","AIR") 
				END_IF
				
				IF (l_montage_ptbois <> "")
					brcPetitBoisThermo(l_montage_ptbois)
				END_IF

				IF ((IsDefined(l_vitrage_sf) = TRUE) ET ((l_nom_zone = "A") OU (l_nom_zone = "A1")) ET ((l_code_pc = "PC_PM2_TIERCES") OU (l_code_pc = "PC_PE2_TIERCES")))
					IF l_nom_zone = "A"
						LET l_nom_zone "E"
					ELSE_IF l_nom_zone = "A1"
						LET l_nom_zone "E1"
						LET l_vitrage_sf l_code_remplissage
					END_IF
					IF l_boucle_vit = 0
						LET l_type_zone "SFP" /* OUVRANT PANNEAU */
					ELSE
						LET l_type_zone "SFD" /* Double vitrage */
					END_IF
					LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_vitrage_sf + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
					SQL_QUERY l_req dans "Tab_vitrage"
					IF Tab_vitrage["NR"] > 0
						IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT"))
							LET l_type_zone "SFD" /* Double vitrage */
							IF Tab_vitrage[1,0] <> ""
								IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
									LET l_type_zone "SFT" /* Triple vitrage */
									IF l_collection = "G9"
										LET l_type_zone (l_type_zone + "V")
									END_IF
								END_IF
							END_IF
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
							LET l_type_zone "EDR" /* EDR */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
							LET l_type_zone "SFP" /* OUVRANT PANNEAU */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
							IF Tab_vitrage[1,1] > 28
								LET l_type_zone "SFT" /* Triple vitrage */
								IF l_collection = "G9"
									LET l_type_zone (l_type_zone + "V")
								END_IF
							ELSE
								LET l_type_zone "SFD" /* Double vitrage */
							END_IF
						END_IF
					END_IF
					brcSIGLigne(3,"Zone","")
					brcSIGLigne(4,"Nom",l_nom_zone)
					brcSIGLigne(4,"TypeZone",l_type_zone)
					brcSIGLigne(4,"ComposantVitrage","")
					brcSIGLigne(5,"Code",l_vitrage_sf)
					IF ((SUBSTR l_type_zone 1 3 = "SFT") OU (SUBSTR l_type_zone 1 3 = "SFD")) /* double et triple vitrage */
						brcSIGLigne(5,"NatureGaz","ARGON")
					ELSE /* Edr et panneau */
						brcSIGLigne(5,"NatureGaz","AIR")
					END_IF
				END_IF
			END_IF

			LET l_compteur 1
			WHILE l_compteur <= l_boucle_vit
				LET l_montage_ptbois ""
				brcSIGLigne(3,"Zone","")
				LET l_nom_zone ""
				IF l_compteur_ens = 1
					IF ((c_nb_zone > 1) ET (s_ensemble = "TRAME_H"))
						LET l_nom_zone "D"
					ELSE_IF ((c_nb_zone > 1) ET (s_ensemble = "TRAME_V"))
						LET l_nom_zone "C"
					ELSE
						IF l_compteur = 1
							LET l_nom_zone "A"
						ELSE
							LET l_nom_zone "A1"
						END_IF
					END_IF
				ELSE_IF l_compteur_ens = 2
					IF ((s_ensemble = "IMP") OU (s_ensemble = "IMM"))
						LET l_nom_zone "B"
					ELSE_IF ((s_ensemble = "ALL") OU (s_ensemble = "ALM") OU (s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM"))
						LET l_nom_zone "C"
					ELSE_IF ((s_ensemble = "CAG") OU (s_ensemble = "CADG"))
						IF l_compteur = 1
							LET l_nom_zone "D"
						ELSE
							LET l_nom_zone "D1"
						END_IF
					ELSE_IF s_ensemble = "CAD"
						IF l_compteur = 1
							LET l_nom_zone "E"
						ELSE
							LET l_nom_zone "E1"
						END_IF
					ELSE_IF ((s_ensemble = "TRAME_V") OU (s_ensemble = "TRAME_H"))
						LET l_nom_zone "A"
					END_IF
				ELSE_IF l_compteur_ens = 3
					IF ((s_ensemble = "AL-IM") OU (s_ensemble = "ALM-IMM") OU (s_ensemble = "TRAME_V"))
						LET l_nom_zone "B"
					ELSE_IF ((s_ensemble = "CADG") OU (s_ensemble = "TRAME_H"))
						IF l_compteur = 1
							LET l_nom_zone "E"
						ELSE
							LET l_nom_zone "E1"
						END_IF
					END_IF
				END_IF
				IF l_compteur = 1
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
						LET l_code_remplissage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")
						LET l_argon "AIR"
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon.value.name") = "O"
								LET l_argon "ARGON"
							END_IF
						END_IF
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")) = TRUE
							LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb.value.name")
						END_IF
					ELSE
						LET l_code_remplissage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")
						LET l_argon "AIR"
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name")) = TRUE
							IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_h.value.name") = "O"
								LET l_argon "ARGON"
							END_IF
						END_IF
						IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")) = TRUE
							LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_h.value.name")
						END_IF
					END_IF
				ELSE
					LET l_code_remplissage confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/c_type_vitrage_b.value")
					LET l_argon "AIR"
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name")) = TRUE
						IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_argon_b.value.name") = "O"
							LET l_argon "ARGON"
						END_IF
					END_IF
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")) = TRUE
						LET l_montage_ptbois confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_type_mont_pb_b.value.name")
					END_IF
				END_IF

				SI confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/zone.FP/c_gamme_cadre.value") = "KLAIR"
					SOIT l_type_zone "KLR"
				SINON
					SOIT l_type_zone ""
				FIN_SI
				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/zone.FP/c_chassis.value.name")) = FALSE
					LET l_type_zone l_type_zone + "F"
				ELSE
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/zone.FP/c_chassis.value.name") = "FIXE"
						LET l_type_zone l_type_zone + "F"
					ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/zone.FP/c_chassis.value.name") = "FIXE_DEV"
						LET l_type_zone l_type_zone + "FE"
					ELSE
						LET l_type_zone l_type_zone + "O"
					END_IF
				END_IF
				IF s_gamme <> "KLPR"
					IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/zone.FP/c_gamme_cadre.value") = "KLAIR"
						LET l_famille_remplissage "T"
					ELSE
						LET l_famille_remplissage "D" /* Double vitrage */
						LET l_epaisseur 0 
						LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_code_remplissage + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
						SQL_QUERY l_req dans "Tab_vitrage"
						IF Tab_vitrage["NR"] > 0
							LET l_epaisseur Tab_vitrage[1,1]
							IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT") OU (UPPER Tab_vitrage[1,2] = "PAL") OU (UPPER Tab_vitrage[1,2] = "FPAL"))
								IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) OU (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE))
									LET l_famille_remplissage "D" /* Double vitrage */
									IF Tab_vitrage[1,0] <> ""
										IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
											LET l_famille_remplissage "T" /* Triple vitrage */
										END_IF
									END_IF		
								ELSE
									IF ((l_epaisseur < 12) ET (s_gamme = "KLGT"))
										LET l_famille_remplissage "9"
									ELSE_IF l_epaisseur < 27
										LET l_famille_remplissage "24"
									ELSE_IF l_epaisseur < 33
										LET l_famille_remplissage "30"
									ELSE_IF ((l_epaisseur < 39) ET (s_gamme = "KLGT"))
										LET l_famille_remplissage "36"
									ELSE_IF ((l_epaisseur < 45) ET ((s_gamme = "KLT") OU (s_gamme = "KLGT")))
										LET l_famille_remplissage "42"
									ELSE
										IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) ET (s_ensemble <> "AUTRE")))
											LET l_famille_remplissage "D"
										ELSE
											LET l_famille_remplissage "48D"
										END_IF
										IF Tab_vitrage[1,0] <> ""
											IF (SUBSTR Tab_vitrage[1,0] 1 1) = "7"
												IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) OU ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) ET (s_ensemble <> "AUTRE")))
													LET l_famille_remplissage "T" /* Triple vitrage */
												ELSE
													LET l_famille_remplissage "48T" /* Triple vitrage */
												END_IF
											END_IF
										END_IF
									END_IF
								END_IF								
							ELSE_IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
								LET l_famille_remplissage "EDR" /* EDR */
							ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
								LET l_famille_remplissage "P" /* PANNEAU */
							ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
								IF l_epaisseur > 28
									LET l_famille_remplissage "T" /* Triple vitrage */
								ELSE
									LET l_famille_remplissage "D" /* Double vitrage */
								END_IF
							END_IF
						END_IF
					END_IF
				ELSE
					LET l_famille_remplissage "R" /* Double vitrage KLPR */
				END_IF
				
				IF l_code_remplissage = "03589"
					LET l_type_zone "T" /* Véga (Triple vitrage) */
				END_IF

				IF l_famille_remplissage = "EDR"
					LET l_type_zone "EDR" 
				ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE
					IF (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_collection.value.name")) = "G9"
						/*LET l_type_zone (l_type_zone + l_famille_remplissage + "PV")*/
                        LET l_type_zone ("OTPV")
					ELSE
						LET l_type_zone (l_type_zone + l_famille_remplissage + "P")
					END_IF
				ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name")) = TRUE) ET (s_ensemble <> "AUTRE"))
                    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_collection.value.name") = "G9"
                        LET l_type_zone (l_type_zone + l_famille_remplissage + "PV")
					ELSE
                        LET l_type_zone (l_type_zone + l_famille_remplissage + "P")
                    END_IF
				ELSE
					LET l_type_zone (l_type_zone + l_famille_remplissage)
				END_IF
				brcSIGLigne(4,"Nom",(STR l_nom_zone))
				brcSIGLigne(4,"TypeZone",l_type_zone)
				brcSIGLigne(4,"ComposantVitrage","")
				brcSIGLigne(5,"Code",l_code_remplissage)
				brcSIGLigne(5,"NatureGaz",l_argon)
				IF (l_montage_ptbois <> "")
					brcPetitBoisThermo(l_montage_ptbois)
				END_IF

				IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_exterieur.value.name")) = TRUE
					brcSIGLigne(4,"ComposantVitrage2","")
					IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_exterieur_special.value.name")) = TRUE
						brcSIGLigne(5,"Code",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_exterieur_special.value.name"))
					ELSE
						brcSIGLigne(5,"Code",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_F_VITRAGE.FP/s_vitrage_exterieur.value.name"))
					END_IF
				END_IF

				LET l_type_trav "T50"
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
					IF s_gamme = "KLGT"
						LET l_type_trav "T85"
					ELSE
						LET l_type_trav "T86"
					END_IF
				END_IF
				IF (((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)) ET (l_nom_zone = "A"))
					brcSIGLigne(4,"TraversesIntermediaires","")
					brcSIGLigne(5,"NbTraversesIntermediaires",(STR l_nbre_traverse))
					brcSIGLigne(5,"Code",l_type_trav)
				END_IF
                /* AJO - 27/10/2021 - gestion des portes trio en KLPE */
                IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")="G7-M3") ET (l_nom_zone = "A")) 
    				brcSIGLigne(4,"TraversesIntermediaires","")
					brcSIGLigne(5,"NbTraversesIntermediaires",(STR l_nbre_traverse))
					brcSIGLigne(5,"Code",l_type_trav)
				END_IF
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) ET (l_nom_zone = "A"))
					brcSIGLigne(4,"Montants","")
					brcSIGLigne(5,"NbMontants","1")
					brcSIGLigne(5,"Code","MT50")
				END_IF
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) ET (l_nom_zone = "A"))
					brcSIGLigne(4,"Montants","")
					brcSIGLigne(5,"NbMontants","1")
					brcSIGLigne(5,"Code","MT86")
				END_IF
				IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur_ens + "].FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE) ET (l_nom_zone = "A"))
					brcSIGLigne(4,"Montants","")
					brcSIGLigne(5,"NbMontants","1")
					brcSIGLigne(5,"Code","MT98")
				END_IF
				LET l_compteur l_compteur+1
			END_WHILE
			LET l_compteur_ens l_compteur_ens+1
		END_WHILE
	ELSE
		IF IsDefined(s_collection) = TRUE
			IF s_collection <> "G7"
				LET l_boucle_vit 0
			END_IF
			IF ((s_collection = "G5") OU (s_collection = "G6") OU (s_collection = "G7"))
				IF c_chassis = "P2I"
					LET l_code_pc "PC_PE2_TIERCES"
				END_IF
			ELSE
				IF c_chassis = "P2I"
					LET l_code_pc "PC_PM2_TIERCES"
				END_IF
			END_IF
        ELSE_IF l_vg_serie = "KLPS"
            LET l_boucle_vit 0
		END_IF
		IF l_boucle_vit = 0
			LET l_type_zone "OP" /* OUVRANT PANNEAU */
			IF IsDefined(l_vitrage_ouvrant) = TRUE
				LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_vitrage_ouvrant + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
				SQL_QUERY l_req dans "Tab_vitrage"
				IF Tab_vitrage["NR"] > 0
					IF Tab_vitrage[1,0] <> ""
						IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
							LET l_type_zone "OT" /* Triple vitrage */
						END_IF
					END_IF
					IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
						LET l_type_zone "EDR" /* EDR */
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
						LET l_type_zone "OP" /* OUVRANT PANNEAU */
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
						IF Tab_vitrage[1,1] > 28
							LET l_type_zone "OT" /* Triple vitrage */
						ELSE
							LET l_type_zone "OD" /* Double vitrage */
						END_IF
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT"))
						LET l_type_zone "OD" /* Double vitrage */
						IF Tab_vitrage[1,0] <> ""
							IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
								LET l_type_zone "OT" /* Triple vitrage */
							END_IF
						END_IF
					END_IF
				END_IF
			END_IF
			IF LONGUEUR l_type_zone = 2
				IF (l_collection = "G9")
					/*LET l_type_zone (l_type_zone + "PV")*/
                    LET l_type_zone ("OTPV")
				ELSE
					LET l_type_zone (l_type_zone + "P")
				END_IF					
			END_IF
			IF l_collection = "G10"
				IF IsDefined(s_motif_vitrage) = TRUE
					IF ((s_motif_vitrage = "M02") OU (s_motif_vitrage = "M03") OU (s_motif_vitrage = "M04") OU (s_motif_vitrage = "M05"))
						IF l_modele_porte = "G10-M8"
							SOIT l_montage_ptbois "ARC"
						ELSE_IF l_modele_porte = "G10-M6"
							SOIT l_montage_ptbois "RECTANGLE"
						ELSE_IF l_modele_porte = "G10-M2"
							SOIT l_montage_ptbois "DEMILUNE_1V"
						ELSE_IF l_modele_porte = "G10-M3"
							SOIT l_montage_ptbois "DEMILUNE_3V"
						ELSE_IF l_modele_porte = "G10-M4"
							SOIT l_montage_ptbois "DEMILUNE_5V"
						END_IF
					END_IF
				END_IF
			END_IF
			LET l_nom_zone "A"
			brcSIGLigne(3,"Zone","")
			brcSIGLigne(4,"Nom",(STR l_nom_zone))
			brcSIGLigne(4,"TypeZone",l_type_zone)
			brcSIGLigne(4,"ComposantVitrage","")
			IF IsDefined(l_vitrage_ouvrant) = TRUE
				brcSIGLigne(5,"Code",l_vitrage_ouvrant)
			ELSE
				brcSIGLigne(5,"Code","?????")
			END_IF						
			IF ((SUBSTR l_type_zone 1 2 = "OT") OU (SUBSTR l_type_zone 1 2 = "OD")) /* double et triple vitrage */
				brcSIGLigne(5,"NatureGaz","ARGON")
			ELSE /* Edr et panneau */
				brcSIGLigne(5,"NatureGaz","AIR") 
			END_IF
			IF (l_montage_ptbois <> "")
				brcPetitBoisThermo(l_montage_ptbois)
			END_IF
			IF ((IsDefined(l_vitrage_sf) = TRUE) ET ((l_nom_zone = "A") OU (l_nom_zone = "A1")) ET ((l_code_pc = "PC_PM2_TIERCES") OU (l_code_pc = "PC_PE2_TIERCES")))
				IF l_nom_zone = "A"
					LET l_nom_zone "E"
				ELSE_IF l_nom_zone = "A1"
					LET l_nom_zone "E1"
					LET l_vitrage_sf l_code_remplissage
				END_IF
				IF l_boucle_vit = 0
					LET l_type_zone "SFP" /* OUVRANT PANNEAU */
				ELSE
					LET l_type_zone "SFD" /* Double vitrage */
				END_IF
				LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_vitrage_sf + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
				SQL_QUERY l_req dans "Tab_vitrage"
				IF Tab_vitrage["NR"] > 0
					IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT"))
						LET l_type_zone "SFD" /* Double vitrage */
						IF Tab_vitrage[1,0] <> ""
							IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
								LET l_type_zone "SFT" /* Triple vitrage */
								IF l_collection = "G9"
									LET l_type_zone (l_type_zone + "V")
								END_IF
							END_IF
						END_IF
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
						LET l_type_zone "EDR" /* EDR */
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
						LET l_type_zone "SFP" /* OUVRANT PANNEAU */
					ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
						IF Tab_vitrage[1,1] > 28
							LET l_type_zone "SFT" /* Triple vitrage */
							IF l_collection = "G9"
								LET l_type_zone (l_type_zone + "V")
							END_IF
						ELSE
							LET l_type_zone "SFD" /* Double vitrage */
						END_IF
					END_IF
				END_IF
				brcSIGLigne(3,"Zone","")
				brcSIGLigne(4,"Nom",l_nom_zone)
				brcSIGLigne(4,"TypeZone",l_type_zone)
				brcSIGLigne(4,"ComposantVitrage","")
				brcSIGLigne(5,"Code",l_vitrage_sf)
				IF ((SUBSTR l_type_zone 1 3 = "SFT") OU (SUBSTR l_type_zone 1 3 = "SFD")) /* double et triple vitrage */
					brcSIGLigne(5,"NatureGaz","ARGON")
				ELSE /* Edr et panneau */
					brcSIGLigne(5,"NatureGaz","AIR") 
				END_IF						
			END_IF
		END_IF
		IF IsDefined(c_type_vitrage) = TRUE
			LET l_boucle_vit 1
		ELSE_IF IsDefined(c_type_vitrage_h) = TRUE
			LET l_boucle_vit 2
		END_IF
		LET l_compteur 1
		WHILE l_compteur <= l_boucle_vit
			LET l_montage_ptbois ""
			brcSIGLigne(3,"Zone","")
			IF l_compteur = 1
				LET l_nom_zone "A"
				IF IsDefined(c_type_vitrage) = TRUE
					LET l_code_remplissage c_type_vitrage
					LET l_argon "AIR"				
					IF IsDefined(s_vitrage_argon) = TRUE
						IF s_vitrage_argon = "O"
							LET l_argon "ARGON"
						END_IF
					END_IF							
					IF IsDefined(s_type_mont_pb) = TRUE
						LET l_montage_ptbois s_type_mont_pb
					END_IF
				ELSE
					LET l_code_remplissage c_type_vitrage_h
					LET l_argon "AIR"
					IF IsDefined(s_vitrage_argon_h) = TRUE
						IF s_vitrage_argon_h = "O"
							LET l_argon "ARGON"
						END_IF
					END_IF
					IF IsDefined(s_type_mont_pb_h) = TRUE
						LET l_montage_ptbois s_type_mont_pb_h
					END_IF
				END_IF
			ELSE
				LET l_nom_zone "A1"
				LET l_code_remplissage c_type_vitrage_b
				LET l_argon "AIR"
				IF IsDefined(s_vitrage_argon_b) = TRUE
					IF s_vitrage_argon_b = "O"
						LET l_argon "ARGON"
					END_IF
				END_IF				
				IF IsDefined(s_type_mont_pb_b) = TRUE
					LET l_montage_ptbois s_type_mont_pb_b
				END_IF
			END_IF
			brcSIGLigne(4,"Nom",(STR l_nom_zone))

			SI c_gamme_cadre = "KLAIR"
				SOIT l_type_zone "KLR"
			SINON
				SOIT l_type_zone ""
			FIN_SI

			IF l_chassis = "FIXE"
				LET l_type_zone l_type_zone + "F"
			ELSE
				LET l_type_zone l_type_zone + "O"
			END_IF

			IF s_gamme <> "KLPR"
				IF c_gamme_cadre = "KLAIR"
					LET l_famille_remplissage "T"
				ELSE
					LET l_famille_remplissage "D" /* Double vitrage */
					LET l_epaisseur 0

					LET l_req "SELECT FAMILLE,EPAISSEUR,GROUP_ART FROM " + confML.getBdtTableName("TD_REMPLISSAGES") + " WHERE CODE = '" + l_code_remplissage + "'" + " AND OFFRE_COMM='" + vg_societe + "'"
					SQL_QUERY l_req dans "Tab_vitrage"
					IF Tab_vitrage["NR"] > 0
						LET l_epaisseur Tab_vitrage[1,1]
						IF ((UPPER Tab_vitrage[1,2] = "VIT") OU (UPPER Tab_vitrage[1,2] = "FVIT") OU (UPPER Tab_vitrage[1,2] = "PAL") OU (UPPER Tab_vitrage[1,2] = "FPAL"))
							IF IsDefined(s_collection) = TRUE
								LET l_famille_remplissage "D" /* Double vitrage */
								IF Tab_vitrage[1,0] <> ""
									IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
										LET l_famille_remplissage "T" /* Triple vitrage */
									END_IF
								END_IF		
							ELSE
								IF l_epaisseur < 27
									LET l_famille_remplissage "24"
								ELSE_IF l_epaisseur < 33
									LET l_famille_remplissage "30"
								ELSE_IF ((l_epaisseur < 39) ET (s_gamme = "KLGT"))
									LET l_famille_remplissage "36"
								ELSE_IF ((l_epaisseur < 45) ET (s_gamme = "KLGT"))
									LET l_famille_remplissage "42"
								ELSE
									LET l_famille_remplissage "48D"
									IF Tab_vitrage[1,0] <> ""
										IF SUBSTR Tab_vitrage[1,0] 1 1 = "7"
											LET l_famille_remplissage "48T" /* Triple vitrage */
										END_IF
									END_IF
								END_IF
							END_IF								
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PED") OU (UPPER Tab_vitrage[1,2] = "FPED"))
							LET l_famille_remplissage "EDR" /* EDR */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPT") OU (UPPER Tab_vitrage[1,2] = "FPPT"))
							LET l_famille_remplissage "P" /* PANNEAU */
						ELSE_IF ((UPPER Tab_vitrage[1,2] = "PPV") OU (UPPER Tab_vitrage[1,2] = "FPPV"))
							IF l_epaisseur > 28
								LET l_famille_remplissage "T" /* Triple vitrage */
							ELSE
								LET l_famille_remplissage "D" /* Double vitrage */
							END_IF
						END_IF
					END_IF
				END_IF
			ELSE
				LET l_famille_remplissage "R" /* Double vitrage KLPR */
			END_IF
			IF l_code_remplissage = "03589"
				LET l_type_zone "T" /* Véga (Triple vitrage) */
			END_IF

			IF l_famille_remplissage = "EDR"
				LET l_type_zone "EDR" 
			ELSE_IF IsDefined(s_collection) = TRUE
				IF (s_collection = "G9")
					/*LET l_type_zone (l_type_zone + l_famille_remplissage + "PV")*/
                    LET l_type_zone ("OTPV")
				ELSE
					LET l_type_zone (l_type_zone + l_famille_remplissage + "P")
				END_IF
			ELSE
				LET l_type_zone (l_type_zone + l_famille_remplissage)
			END_IF
			brcSIGLigne(4,"TypeZone",l_type_zone)
			brcSIGLigne(4,"ComposantVitrage","")
			brcSIGLigne(5,"Code",l_code_remplissage)
			brcSIGLigne(5,"NatureGaz",l_argon)
			IF (l_montage_ptbois <> "")
				brcPetitBoisThermo(l_montage_ptbois)
			END_IF

			IF IsDefined(s_vitrage_exterieur) = TRUE
				brcSIGLigne(4,"ComposantVitrage2","")
				IF IsDefined(s_vitrage_exterieur_special) = TRUE
					brcSIGLigne(5,"Code",s_vitrage_exterieur_special)
				ELSE
					brcSIGLigne(5,"Code",s_vitrage_exterieur)
				END_IF
			END_IF

			LET l_type_trav "T50"
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAV86") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE))
				IF s_gamme = "KLGT"
					LET l_type_trav "T85"
				ELSE
					LET l_type_trav "T86"
				END_IF
			END_IF
			IF (((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = TRUE)) ET (l_nom_zone = "A"))
				brcSIGLigne(4,"TraversesIntermediaires","")
				brcSIGLigne(5,"NbTraversesIntermediaires",(STR l_nbre_traverse))
				brcSIGLigne(5,"Code",l_type_trav)
			END_IF
            /* AJO - 27/10/2021 - gestion des portes trio en KLPE */
            IF ((IsDefined(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name")) = TRUE) ET (confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_modele_porte.value.name")="G7-M3") ET (l_nom_zone = "A")) 
        		brcSIGLigne(4,"TraversesIntermediaires","")
				brcSIGLigne(5,"NbTraversesIntermediaires",(STR l_nbre_traverse))
				brcSIGLigne(5,"Code",l_type_trav)
			END_IF
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT50") = TRUE) ET (l_nom_zone = "A"))
				brcSIGLigne(4,"Montants","")
				brcSIGLigne(5,"NbMontants","1")
				brcSIGLigne(5,"Code","MT50")
			END_IF
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT86") = TRUE) ET (l_nom_zone = "A"))
				brcSIGLigne(4,"Montants","")
				brcSIGLigne(5,"NbMontants","1")
				brcSIGLigne(5,"Code","MT86")
			END_IF
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"MONT98") = TRUE) ET (l_nom_zone = "A"))
				brcSIGLigne(4,"Montants","")
				brcSIGLigne(5,"NbMontants","1")
				brcSIGLigne(5,"Code","MT98")
			END_IF
			LET l_compteur l_compteur+1
		END_WHILE
	END_IF
ELSE_IF aSIG = "GESTION"
	IF IsDefined(vg_limite_aev) = TRUE
		brcSIGLigne(2,"LimiteAev",vg_limite_aev)
	END_IF
    
	IF ((IsDefined(vg_code_bloc) = TRUE) ET ((c_fermeture = "PT") OU (c_fermeture = "GT") OU (c_fermeture = "OP") OU (c_fermeture = "OP40") OU (c_fermeture = "OP60") OU (c_fermeture = "ST")))
		SOIT l_largeur_bloc s_largeur
		SOIT l_hauteur_bloc c_hauteur

		SOIT l_req "SELECT VALEUR FROM " + confML.getBdtTableName("TD_COEF_TARIF")
				+ " WHERE CODE='DATE_TH'"
		SQL_QUERY l_req DANS "Tab_date"
		SOIT l_date Tab_date[1,0]

		SOIT l_req "SELECT MAX(LARGEUR) FROM " + confML.getBdtTableName("TD_TARIF_SPPF")
				+ " WHERE COMPOSITION_BASE='" + vg_code_bloc + "' AND DATE_DEBUT='" + l_date + "'"
		SQL_QUERY l_req DANS "Tab_form"
		SI l_largeur_bloc > Tab_form[1,0]
			SOIT l_largeur_bloc Tab_form[1,0]
		FIN_SI

		SOIT l_req "SELECT MAX(HAUTEUR) FROM " + confML.getBdtTableName("TD_TARIF_SPPF")
				+ " WHERE COMPOSITION_BASE='" + vg_code_bloc + "' AND DATE_DEBUT='" + l_date + "'"
				+ " AND LARGEUR >= " + CHAINE l_largeur_bloc
		SQL_QUERY l_req DANS "Tab_form"
		SI l_hauteur_bloc > Tab_form[1,0]
			SOIT l_hauteur_bloc Tab_form[1,0]
		FIN_SI

		SOIT l_req "SELECT MIN(LARGEUR),MIN(HAUTEUR) FROM " + confML.getBdtTableName("TD_TARIF_SPPF")
				+ " WHERE COMPOSITION_BASE='" + vg_code_bloc + "' AND DATE_DEBUT='" + l_date + "'"
				+ " AND LARGEUR >= " + CHAINE l_largeur_bloc
				+ " AND HAUTEUR >= " + CHAINE l_hauteur_bloc
		SQL_QUERY l_req DANS "Tab_form"

		SOIT l_req "SELECT ZONE FROM " + confML.getBdtTableName("TD_TARIF_SPPF")
				+ " WHERE COMPOSITION_BASE='" + vg_code_bloc + "' AND DATE_DEBUT='" + l_date + "'"
				+ " AND LARGEUR = " + CHAINE Tab_form[1,0]
				+ " AND HAUTEUR = " + CHAINE Tab_form[1,1]
		SQL_QUERY l_req DANS "Tab_form"

		brcSIGLigne(2,"ZoneBloc",Tab_form[1,0])
	END_IF
    
    IF IsDefined(prixCession) = TRUE
        brcSIGLigne(2,"PurchPrice",CHAINE prixCession)
    END_IF
    
    IF ((IsDefined(l_detecteur) = TRUE) ET (l_detecteur <> ""))
        brcSIGLigne(2,"TypeDetecteur",l_detecteur)
    END_IF
	
	IF APDevis <> "TARIF"
		LET l_pose_trav_ouvrant 0
		IF l_posit_traverse > 0
			IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR50") = FALSE)
					ET (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"TRAR86") = FALSE)
					ET (l_cadence <> "O")
					ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")) = TRUE)
					ET (c_cas_ensemble <> "3"))
				LET l_posit_traverse (l_posit_traverse + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_hauteur_z.value")))
			END_IF
			LET l_deduc_appui 0
			LET l_pose_trav_c (l_posit_traverse - l_deduc_appui)
			IF IsDefined(c_cas_ensemble) = TRUE
				IF s_dormant = "KLRENO"
					IF (((SUBSTR s_type_pose 1 1) = "7") OU ((SUBSTR s_type_pose 1 1) = "8"))
						LET l_deduc_allege_o 63
					ELSE
						LET l_deduc_allege_o 54.5
					END_IF
				ELSE
					LET l_deduc_allege_o 49
				END_IF
				IF l_H1 <> 0 /* Cas ALLEGE */
					LET l_pose_trav_c (l_pose_trav_c - l_H1)
					LET l_pose_trav_c (l_pose_trav_c + l_deduc_allege_o)
				END_IF
			END_IF
			LET l_dist_ouvr 0

			IF ((l_vg_serie = "KLP") OU (l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL")) /* TB le 14/05/18 : ajout KLPL */
				LET l_dist_ouvr 13
            ELSE_IF l_vg_serie = "KLGT"
                LET l_dist_ouvr 14.5
            ELSE_IF l_vg_serie = "KLPR"
                LET l_dist_ouvr 18.5
			ELSE
				IF s_trav_basse = "PMR"
					IF s_dormant = "KLRENO"
						LET l_dist_ouvr 18
					ELSE
						LET l_dist_ouvr 8
					END_IF
				ELSE
					IF s_dormant = "KLRENO"
						IF (((SUBSTR s_type_pose 1 1) = "7") OU ((SUBSTR s_type_pose 1 1) = "8"))
							LET l_dist_ouvr 25
						ELSE
							LET l_dist_ouvr 16.5
						END_IF
					ELSE
						LET l_dist_ouvr 11
					END_IF
				END_IF
			END_IF

			IF (((vg_centre = "1") OU (vg_centre = "A6")) ET ((l_famille = "0761") OU (l_famille = "0741") OU (l_famille = "0791")))
				/* CHASSIS FIXE K.LINE FABRIQUE CHEZ OUEST-ALU */
				LET l_dist_ouvr 0
			END_IF
			LET l_pose_trav_ouvrant (ROUND (l_pose_trav_c - l_dist_ouvr))
		END_IF

		LET l_hauteur_poignee 0
		IF IsDefined(c_hauteur) = TRUE
			IF ((l_vg_serie = "KLP") OU (l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL")) /* TB le 14/05/18 : ajout KLPL */
                IF vg_societe = "LIT"    
                    IF IsDefined(vs_hauteur_poignee) = TRUE    
                        IF (SUBSTR vs_hauteur_poignee 1 1) = "T"
        		            LET l_hauteur_poignee NUMBER (SUBSTR vs_hauteur_poignee 2 ((LENGTH vs_hauteur_poignee) - 1))
                            LET l_hauteur_poignee l_hauteur_poignee - 18
    		            END_IF
                    ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/vs_hauteur_poignee.value.name")) = TRUE
                        IF (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/vs_hauteur_poignee.value.name")) 1 1) = "T"
    		                LET l_hauteur_poignee NUMBER (SUBSTR (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/vs_hauteur_poignee.value.name")) 2 ((LENGTH (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/vs_hauteur_poignee.value.name"))) - 1))
                            LET l_hauteur_poignee l_hauteur_poignee - 18
                        END_IF
                    END_IF
				ELSE
                    LET l_hauteur_poignee 1050
                END_IF
			ELSE_IF (l_vg_serie = "KLPR")
				LET l_hauteur_poignee 1000
				IF s_dormant = "KLRENO"

					IF l_hauteur_poignee > ((c_hauteur - 82) / 2) 
						LET l_hauteur_poignee ((c_hauteur - 82) / 2) 
					END_IF
				ELSE
					IF l_hauteur_poignee > ((c_hauteur - 78) / 2) 
						LET l_hauteur_poignee ((c_hauteur - 78) / 2) 
					END_IF
				END_IF
			ELSE
				LET l_hauteur_poignee 0 /* Suivant le kit crémone calculé dans Chacal */
			END_IF
		END_IF
		LET l_hauteur_poignee INT(l_hauteur_poignee)

		IF vg_societe = "CAIB"
			IF ((l_vg_serie = "KLP") OU (l_vg_serie = "KLPM") OU (l_vg_serie = "KLPV") OU (l_vg_serie = "KLPL")) /* TB le 14/05/18 : ajout KLPL */
				LET vg_serie_chassis "SPHINX"
			ELSE
				LET vg_serie_chassis "ALU-P" /* Peralu feuillure PVC */
			END_IF
		END_IF

		IF ((SUBSTR c_code_chassis 1 2 = "NN") OU (c_code_chassis = "RTNN") OU (c_code_chassis = "CCNN") OU (c_code_chassis = "CRTNN") OU (c_code_chassis = "TNN") OU (c_code_chassis = "GRTNN"))
		   LET l_type_chassis "3" /* Châssis spécifique */
		ELSE
		   LET l_type_chassis "1" /* Standard */
		END_IF

		IF IsDefined(c_sav) = TRUE
			IF ((c_sav = "PRO") OU (c_sav = "VIT"))
				LET vg_serie_chassis "DIVERS"
			END_IF
			IF c_sav <> "CHA"
				LET l_type_chassis "3"  /* Châssis spécifique  */
			END_IF
		END_IF
        SI SUBSTR vg_serie_chassis 1 4 = "KLGT"
            SOIT vg_serie_chassis "KL-GT"
        FIN_SI
    	brcSIGLigne(2,"Serie",vg_serie_chassis)
    	brcSIGLigne(2,"SerieChassis",vg_serie_chassis)
		brcSIGLigne(2,"TypeChassis",l_type_chassis)
		brcSIGLigne(2,"CodeChassis",c_code_chassis)
		brcSIGLigne(2,"Centre",vg_centre)
    	brcSIGLigne(2,"SiteProduction",vg_site_production)

		SI IsDefined(s_ensemble) = TRUE
			brcSIGLigne(2,"Ensemble",s_ensemble)
		SINON
			brcSIGLigne(2,"Ensemble","SIMPLE")
		FIN_SI

		SI IsDefined(s_type_pose) = TRUE
			/* AJO - 20200512 - DDS1619 : Pour KLPS, type de pose 16 = type de pose 12 */
    		SI l_vg_serie = "KLPS" ET s_type_pose = "16"
				brcSIGLigne(2,"Dormant",s_dormant + "-12")
			SINON
				brcSIGLigne(2,"Dormant",s_dormant + "-" + s_type_pose)
			FIN_SI
		SINON_SI IsDefined(s_doublage) = TRUE
			brcSIGLigne(2,"Dormant",s_doublage)
		SINON
			brcSIGLigne(2,"Dormant",s_dormant)
		FIN_SI

		SI IsDefined(c_chassis) = TRUE
			brcSIGLigne(2,"ChassisPrincipal",c_chassis)
		SINON_SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")) = TRUE
			brcSIGLigne(2,"ChassisPrincipal",(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name")))
		FIN_SI

		IF (l_commentaire_acotherm <> "")
			brcSIGLigne(2,"EtiquetteACOTherme",l_commentaire_acotherm)
		END_IF
		IF IsDefined(s_type_nn) = TRUE
			IF IsDefined(s_marquage_nf) = TRUE
				brcSIGLigne(2,"QuestionEtiquette","1")
			ELSE
				brcSIGLigne(2,"QuestionEtiquette","")
			END_IF
		END_IF
		brcSIGLigne(2,"OuvrantTraverseIntermediaire",(STR l_pose_trav_ouvrant))
		IF ((IsDefined(s_sens) = TRUE) ET (s_sens <> "PS"))
			brcSIGLigne(2,"SensOuverture",s_sens)
		ELSE_IF ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name") <> "PS"))
			brcSIGLigne(2,"SensOuverture",(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")))
		ELSE_IF ((l_sens_ouverture <> "") ET (l_sens_ouverture <> "PS"))
			brcSIGLigne(2,"SensOuverture",l_sens_ouverture)
		END_IF
		brcSIGLigne(2,"HauteurPoignee",STR l_hauteur_poignee)
		IF IsDefined(l_trav_dorm) = TRUE
			brcSIGLigne(2,"PresenceTraversesDormant",STR l_trav_dorm)
			IF l_code_trav1 <> ""
				brcSIGLigne(2,"CodeProfile1TraverseDormant",l_code_trav1)
				IF ((IsDefined(vs_type_appui) = TRUE) ET (vs_type_appui = "O"))
					LET l_H1 (l_H1 - 12)
				END_IF
				brcSIGLigne(2,"Position1TraverseDormant",STR l_H1)
			END_IF
			IF l_code_trav2 <> ""
				brcSIGLigne(2,"CodeProfile2TraverseDormant",l_code_trav2)
				IF ((IsDefined(vs_type_appui) = TRUE) ET (vs_type_appui = "O"))
					LET l_H2 (l_H2 - 12)
				END_IF
				brcSIGLigne(2,"Position2TraverseDormant",STR l_H2)
			END_IF
			brcSIGLigne(2,"PresenceMontantsDormant",STR l_mont_dorm)
			IF l_code_mont1 <> ""
				brcSIGLigne(2,"CodeProfile1MontantDormant",l_code_mont1)
				brcSIGLigne(2,"Position1MontantDormant",STR l_L1)
			END_IF
			IF l_code_mont2 <> ""
				brcSIGLigne(2,"CodeProfile2MontantDormant",l_code_mont2)
				brcSIGLigne(2,"Position2MontantDormant",STR l_L2)
			END_IF
		END_IF
		brcSIGLigne(2,"CritereDelai",l_critere_lancement)

		IF l_famille = "0761"
			IF IsDefined(vs_type_CAD) = TRUE
				IF vs_type_CAD <> "fixe"
					LET l_famille "0709"
				END_IF
			END_IF
			IF IsDefined(vs_type_CAG) = TRUE
				IF vs_type_CAG <> "fixe"
					LET l_famille "0709"
				END_IF
			END_IF
			IF IsDefined(vs_imposte_soufflet) = TRUE
				IF vs_imposte_soufflet= "O"
					LET l_famille "0709"
				END_IF
			END_IF
		END_IF
		brcSIGLigne(2,"Famille",l_famille)
		IF IsDefined(s_type_pose) = TRUE 
			/* AJO - 20200512 - DDS1619 : Pour KLPS, type de pose 16 = type de pose 12 */
    		SI l_vg_serie = "KLPS" ET s_type_pose = "16"
				brcSIGLigne(2,"TypePose","12")
			SINON
				brcSIGLigne(2,"TypePose",s_type_pose)
			FIN_SI
		END_IF
		IF s_dormant = "KLMS"
			brcSIGLigne(2,"Reserve5","2")
		ELSE_IF IsDefined(vs_type_appui) = TRUE
			IF vs_type_appui = "O" 
				brcSIGLigne(2,"Reserve5","1")
			END_IF
		END_IF
		
		IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"degondage") = TRUE
			SOIT l_degondage 0
		END_IF
		
		IF ((c_cas_ensemble = "1") OU (IsDefined(s_type_nn) = TRUE))
			SI ((c_chassis = "FA2")
				 OU (c_chassis = "FA2I")
				 OU (c_chassis = "FA2_AIR")
				 OU (c_chassis = "OB2")
				 OU (c_chassis = "OB2I")
				 OU (c_chassis = "OB2_AIR")
				 OU (c_chassis = "FS2")
				 OU (c_chassis = "FS2I")
				 OU (c_chassis = "P2E")
				 OU (c_chassis = "P2I")
				 OU (c_chassis = "PRA2E")
				 OU (c_chassis = "PRA2I")
				 OU (c_chassis = "PRF2E")
				 OU (c_chassis = "PRF2I")
                 OU (c_chassis = "GTF2I")
                 OU (c_chassis = "GTF2E")
                 OU (c_chassis = "GTA2I")
                 OU (c_chassis = "GTA2E")
                 OU (c_chassis = "GTF2I-APD")
                 OU (c_chassis = "GTF2E-APD")
                 OU (c_chassis = "GTA2I-APD")
                 OU (c_chassis = "GTA2E-APD"))
				IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"degondage") = TRUE
					SOIT l_degondage l_degondage + 1
				END_IF
				SOIT l_nb_ouvrants 2
			SINON_SI ((IsDefined(s_nb_vtx_ouvr) = TRUE) ET (IsDefined(s_nb_rempl_dormant) = TRUE))
				SOIT l_nb_ouvrants s_nb_vtx_ouvr
				SOIT l_nb_vitrages_fixes s_nb_rempl_dormant
			SINON_SI c_chassis <> "FIXE"
				IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"degondage") = TRUE
					SOIT l_degondage l_degondage + 0.5
				END_IF
				SOIT l_nb_ouvrants 1
			SINON
				SI IsDefined(s_nbre_traverse) = TRUE
					SOIT l_nb_vitrages_fixes s_nbre_traverse + 1
				SINON_SI IsDefined(s_nbre_montant) = TRUE
					SOIT l_nb_vitrages_fixes s_nbre_montant + 1
				SINON_SI ((IsDefined(s_posit_traverse) = TRUE) OU (IsDefined(s_posit_montant) = TRUE))
					SOIT l_nb_vitrages_fixes 2
				SINON
					SOIT l_nb_vitrages_fixes 1
				FIN_SI
			FIN_SI
			SI (((IsDefined(vs_serrure) = TRUE) ET (vs_serrure = "SMOTO")) OU ((IsDefined(s_pilotage) = TRUE) ET (s_pilotage = "O")))
				SOIT l_pilotage "1"
			FIN_SI
		ELSE
			SOIT l_compteur 1
			WHILE l_compteur <= c_nb_zone
				SI ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2I")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2_AIR")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2I")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2_AIR")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FS2")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FS2I")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2E")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2I")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "PRA2E")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "PRA2I")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "PRF2E")
					 OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "PRF2I")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2I")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2E")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2I")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2E")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2I-APD")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2E-APD")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2I-APD")
                     OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2E-APD"))
					IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"degondage") = TRUE
						SOIT l_degondage l_degondage + 1
					END_IF
					SOIT l_nb_ouvrants l_nb_ouvrants + 2
				SINON_SI ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") <> "FIXE")
						ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") <> "FIXE_DEV"))
					IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"degondage") = TRUE
						SOIT l_degondage l_degondage + 0.5
					END_IF
					SOIT l_nb_ouvrants l_nb_ouvrants + 1
				SINON
					SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value")) = TRUE
						SOIT l_nb_vitrages_fixes l_nb_vitrages_fixes + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value") + 1)
                    SINON_SI (((s_ensemble = "CAD") OU (s_ensemble = "CAG") OU (s_ensemble = "CADG")) ET (l_compteur > 1) ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value")) = TRUE))
    					SOIT l_nb_vitrages_fixes l_nb_vitrages_fixes + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_nbre_traverse.value") + 1)
					SINON_SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_montant.value")) = TRUE
						SOIT l_nb_vitrages_fixes l_nb_vitrages_fixes + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_nbre_montant.value") + 1)
					SINON_SI ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE) OU (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OPTIONS_OUVR.FP/s_posit_montant.value")) = TRUE)
                            OU (((s_ensemble = "ALM") OU (s_ensemble = "IMM")) ET (l_compteur = 2))
                            OU ((s_ensemble = "ALM-IMM") ET (l_compteur > 1))
                            OU (((s_ensemble = "CAD") OU (s_ensemble = "CAG") OU (s_ensemble = "CADG")) ET (l_compteur > 1) ET (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OPTIONS_OUVR.FP/s_posit_traverse.value")) = TRUE)))
						SOIT l_nb_vitrages_fixes l_nb_vitrages_fixes + 2
					SINON
						SOIT l_nb_vitrages_fixes l_nb_vitrages_fixes + 1
					FIN_SI
				FIN_SI
				SI ((IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")) = TRUE) ET (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name") = "SMOTO"))
					SOIT l_pilotage "1"
				FIN_SI
				SOIT l_compteur l_compteur + 1
			END_WHILE
		END_IF
        
        SI ((s_gamme = "KLFP_FPI") OU (s_gamme = "KLAIR_FPI"))
            LET l_pilotage "1"
        SINON_SI s_gamme = "KLT"
            SOIT l_compteur 1
    		WHILE l_compteur <= c_nb_zone
                SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_chassis_o.value.name")) = TRUE   
                    SI (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_chassis_o.value.name") = "OB1_FPI")
                        LET l_pilotage "1"
                    FIN_SI
                FIN_SI
                SOIT l_compteur l_compteur + 1
            END_WHILE           
        FIN_SI
		
		brcSIGLigne(2,"NombreVantauxOuvrants",STR l_nb_ouvrants)
		brcSIGLigne(2,"NombreVitragesFixes",STR l_nb_vitrages_fixes)
        brcSIGLigne(2,"Pilotage",l_pilotage)

		IF l_degondage > 0
			brcSIGLigne(2,"OuvrantsDégondés",STR (2 * l_degondage))
		END_IF
		IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"assemblage") = TRUE
			brcSIGLigne(2,"DormantsNonAssemblés",STR s_op_transport_nbr_cadre)
		FIN_SI
		IF IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_op_transport"),"devitrage") = TRUE
			brcSIGLigne(2,"FixesNonVitrés","Oui")
		END_IF

		IF IsDefined(s_type_fermeture) = TRUE
			IF ((s_type_fermeture = "RB") OU (s_type_fermeture = "RO"))
				LET l_poids_volet_roulant (2.4 + (5 * vg_la_rb /1000) + (3.5 * vg_la_rb * vg_ha_rb / 1000000))
			ELSE_IF ((s_type_fermeture = "DL") OU (s_type_fermeture = "AH") OU (s_type_fermeture = "BD") OU (s_type_fermeture = "BV")) 
				LET l_poids_volet_roulant (3.6 + (2.35 * vg_la_dl /1000) + (3 * vg_la_dl * vg_ha_dl / 1000000))
			END_IF
			LET l_poids_remplissage (l_poids_remplissage + l_poids_volet_roulant)
		END_IF
		brcSIGLigne(2,"PoidsPF",STR (ROUND(l_poids_remplissage)))

		LET l_TypeFrappe "0" /* Vide */
		IF ((vg_serie_chassis = "KL-FP") OU (vg_serie_chassis = "KL-F") OU (vg_serie_chassis = "KL-PE") OU (vg_serie_chassis = "KL-PM") OU (vg_serie_chassis = "KL-PV") OU (vg_serie_chassis = "KL-PL"))
			LET l_TypeFrappe "1" /* Simple */
			IF l_HorsGabarit = "O"
				LET l_TypeFrappe "2" /* Hors gabarit */
			ELSE_IF l_DormantComplexe = "O"
				LET l_TypeFrappe "3" /* Dormant complexe */
			END_IF
		END_IF
        IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_options_spe"),"OUVR_SEUL") = TRUE)
         ET (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_F_CDE_SPE.FP/s_options_spe"),"DORM_SEUL") = FALSE))
            LET l_TypeFrappe "5" /* Ouvrant seul */
        END_IF
        IF ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_DORMANT.FP/s_options_refab"),"OUVR_SEUL") = TRUE)
         ET (IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_DORMANT.FP/s_options_refab"),"DORM_SEUL") = FALSE))
            LET l_TypeFrappe "5" /* AAL 03/02/22 Ouvrant seul pour PC NN*/
        END_IF        
		brcSIGLigne(2,"TypeFrappe",l_TypeFrappe)
		
		IF IsDefined(s_dormant) = TRUE
			IF ((s_dormant = "KLDOUB") OU (s_dormant = "KLDOUBDP"))
				brcSIGLigne(2,"VsTypeDormant",s_doublage)
			ELSE
				brcSIGLigne(2,"VsTypeDormant",s_dormant)
			END_IF
		END_IF
		IF IsDefined(vs_type_appui) = TRUE
			brcSIGLigne(2,"VsTypeAppui",vs_type_appui)
		END_IF
		IF IsDefined(s_type_pose) = TRUE
			/* AJO - 20200512 - DDS1619 : Pour KLPS, type de pose 16 = type de pose 12 */
    		SI l_vg_serie = "KLPS" ET s_type_pose = "16"
				brcSIGLigne(2,"VsTypePose","12")
			SINON
				brcSIGLigne(2,"VsTypePose",s_type_pose)
			FIN_SI
		END_IF
		IF IsDefined(s_type_clip) = TRUE
			brcSIGLigne(2,"VsTypeClip",s_type_clip)
		END_IF
		IF IsDefined(s_support_pose) = TRUE
			brcSIGLigne(2,"VsSupportPose",s_support_pose)
		ELSE_IF IsDefined(c_support_pose) = TRUE
			brcSIGLigne(2,"VsSupportPose",c_support_pose)
		END_IF
		IF IsDefined(s_bavette) = TRUE
			brcSIGLigne(2,"VsBavette",s_bavette)
		END_IF
		IF IsDefined(s_bloc_inclus) = TRUE
			brcSIGLigne(2,"VsBlocInclus",s_bloc_inclus)
		END_IF
		IF IsDefined(s_coul_access) = TRUE
			brcSIGLigne(2,"VsCoulAccess",s_coul_access)
		END_IF
		IF IsDefined(s_trav_haute) = TRUE
			brcSIGLigne(2,"VsTravHaute",s_trav_haute)
		END_IF
		IF l_aev_air <> ""
			brcSIGLigne(2,"ClassementAir",l_aev_air)
		END_IF
		IF l_aev_eau <> ""
			brcSIGLigne(2,"ClassementEau",l_aev_eau)
		END_IF
		IF l_aev_vent <> ""
			brcSIGLigne(2,"ClassementVent",l_aev_vent)
		END_IF

		IF IsDefined(s_type_fermeture) = TRUE	
			LET l_bloc_fenetre "1"
		END_IF
		brcSIGLigne(2,"NombreRemplissages",STR l_nbre_vitrage)
		brcSIGLigne(2,"PresenceVoletRoulant",l_bloc_fenetre)
		IF c_temps_total = 0
			ERREUR 2 "Problème de calcul du temps de fabrication"
		END_IF
		
		IF (((IsDefined(s_detecteur)=TRUE) ET (s_detecteur <> "N")) OU ((IsDefined(vs_manoeuvre)=TRUE) ET (FIND_STR vs_manoeuvre "X3D" > 0)) OU ((IsDefined(vs_serrure)=TRUE) ET (vs_serrure = "SMOTO")))
			SOIT l_klsh 1
		FIN_SI
		SI (l_klsh=1)
			brcSIGLigne(2,"OffreDomotique","KL-SH")
		FIN_SI
		brcSIGLigne(2,"Temps",STR c_temps_total)
		SI IsDefined(s_prix) = TRUE
			SOIT l_prix_promo s_prix
		FIN_SI
		brcSIGLigne(2,"PrixPromo",STR l_prix_promo)
		SI l_collection <> ""
			brcSIGLigne(2,"GammePorte",l_collection)
		FIN_SI
		SI l_modele_porte <> ""
			brcSIGLigne(2,"ModelePorte",l_modele_porte)
		FIN_SI
		IF ((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPL")) /* TB le 14/05/18 : ajout KLPL */
			IF vg_societe = "CAIB"
				LET l_coef_public 1
				LET l_table_coef confML.getBdtTableName("TD_COEF_TARIF_CAIB")
			ELSE
				LET l_coef_public 1.5
				LET l_table_coef confML.getBdtTableName("TD_COEF_TARIF")
			END_IF
			LET l_req "SELECT VALEUR FROM " + l_table_coef
					+ " WHERE CODE='DAT_TAR'"
			SQL_QUERY l_req IN "Tab_date"
			LET l_date Tab_date[1,0]
			/*Coefficient du transport*/
			LET l_req "SELECT COEFFICIENT FROM " + l_table_coef
					+ " WHERE CODE='COEF_TR' AND VALEUR='1'"
			SQL_QUERY l_req IN "Tab_coef_tr"
			/*Coefficient de la couleur*/
			LET l_groupe_couleur c_groupe_couleur
			IF l_groupe_couleur = "05"
				LET l_groupe_couleur "04"
			ELSE_IF l_groupe_couleur = "07"
				LET l_groupe_couleur "06"
			END_IF
			LET l_req "SELECT COEFFICIENT FROM " + l_table_coef
					+ " WHERE CODE='K3' AND VALEUR='" + l_groupe_couleur + "'"
			SQL_QUERY l_req IN "Tab_coef_coul"
			
            IF l_vg_serie = "KLPL"
                IF (IsDefined(s_ceramique) = TRUE) /* ajout cas des modèles KLPL G11-M10, 12, 14 et 16 qui doivent être distingués entre ONDE et CERAMIQUE, le 08/10/2018 */
                    IF s_ceramique = "ONDE"
                        LET l_code_modele ("0" + s_modele_porte + "O-vs")    
                    ELSE_IF ((s_ceramique = "C1") OU (s_ceramique = "C2") OU (s_ceramique = "C3"))
                        LET l_code_modele ("0" + s_modele_porte + "C-vs")
                    END_IF
                ELSE_IF (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = TRUE)
                    IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "ONDE"
                        LET l_code_modele ("0" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) + "O-vs")
                    ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C3"))
                        LET l_code_modele ("0" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) + "C-vs")
                    END_IF
                ELSE_IF ((IsDefined (s_ensemble) = TRUE) AND (s_ensemble = "AUTRE"))
                    LET l_compteur 1
                    LOCAL l_increment 0
                    TANT_QUE l_compteur <= c_nb_zone
                        IF (IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name")) = TRUE) /* ajout cas des modèles KLPL G11-M10, 12, 14 et 16 qui doivent être distingués entre ONDE et CERAMIQUE, le 17/09/2018 */
                            IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name") = "G8-M7" /* CT562 - ajout céramique aux choix pour le modèle CERAMIQUE, le 03/01/19 */
                                LET l_code_modele ("0" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) + "-vs")
                                LET l_increment l_increment +1
                            ELSE
                                IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "ONDE"
                                    LET l_code_modele ("0" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) + "O-vs")
                                    LET l_increment l_increment +1
                                ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_ceramique.value.name") = "C3"))
                                    LET l_code_modele ("0" + (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/SC_OUVRANT.FP/s_modele_porte.value.name")) + "C-vs")
                                    LET l_increment l_increment +1
                                END_IF
                            END_IF
                        END_IF
                        LET l_compteur l_compteur + 1
                    FIN_TANT_QUE
                    IF l_increment = 0
                        LET l_code_modele ("0" + l_modele_porte + "-vs")
                    END_IF
                ELSE
                    LET l_code_modele ("0" + l_modele_porte + "-vs")
                END_IF
            ELSE
                LET l_code_modele ("0" + l_modele_porte + "-vs")
            END_IF  
			
            IF vg_societe = "CAIB"
				LET l_req "SELECT COEF_A,COEF_B,CONST_F FROM " + confML.getBdtTableName("TD_FORMULE")
						+ " WHERE CODE='" + l_code_modele + "' AND DATE_VALID='" + l_date + "'"
				SQL_QUERY l_req IN "Tab_sql"
				IF Tab_sql["NR"] = 0
					ERROR 2 "PROBLEME DE FORMULE"
				END_IF
				LET l_k1 (l_coef_public * Tab_sql[1,0] * Tab_sql[1,1] * Tab_coef_tr[1,0])
				LET l_prix_ouvrant (Tab_sql[1,2] * l_k1)
				LET l_prix_panneau_vs (l_prix_ouvrant * Tab_coef_coul[1,0])
			ELSE		
				LET l_req "SELECT COEF_A,COEF_B,CONST_F FROM " + confML.getBdtTableName("TD_FORMULE")
						+ " WHERE CODE='" + l_code_modele + "' AND DATE_VALID='" + l_date + "'"
				SQL_QUERY l_req IN "Tab_sql"
				IF Tab_sql["NR"] = 0
					ERROR 2 "PROBLEME DE FORMULE"
				END_IF
				IF (((SUBSTR l_modele_porte 1 2) <> "G5") ET ((SUBSTR l_modele_porte 1 2) <> "G6"))
					LET l_prix_panneau_vs (Tab_sql[1,2] * Tab_coef_coul[1,0])
				END_IF
			END_IF
			IF l_semi_fixe <> ""
				IF l_semi_fixe <> "SFID"
					LET l_code_modele ("0" + l_semi_fixe)
				END_IF
				LET l_req "SELECT COEF_A,COEF_B,CONST_F FROM " + confML.getBdtTableName("TD_FORMULE")
						+ " WHERE CODE='" + l_code_modele + "' AND DATE_VALID='" + l_date + "'"
				SQL_QUERY l_req IN "Tab_sql"
				IF Tab_sql["NR"] = 0
					ERROR 2 "PROBLEME DE FORMULE"
				END_IF
				IF ((vg_societe = "CAIB") ET (l_semi_fixe <> "SFID"))
					LET l_prix_ouvrant (Tab_sql[1,2] * l_coef_public * Tab_sql[1,0] * Tab_sql[1,1] * Tab_coef_tr[1,0])
				END_IF
				IF (((SUBSTR l_modele_porte 1 2) <> "G5") ET ((SUBSTR l_modele_porte 1 2) <> "G6"))
					IF ((l_semi_fixe = "SFID") OU ((SUBSTR l_semi_fixe 1 2) = "MP"))
						IF vg_societe = "CAIB"
							LET l_prix_panneau_sf (l_prix_ouvrant * Tab_coef_coul[1,0])
						ELSE
							LET l_prix_panneau_sf (Tab_sql[1,2] * Tab_coef_coul[1,0])
						END_IF
					END_IF
				END_IF
			END_IF
		END_IF
		IF l_prix_panneau_vs <> 0
			brcSIGLigne(2,"PrixTarifPanneauVS",STR l_prix_panneau_vs)
		END_IF
		IF l_prix_panneau_sf <> 0
			brcSIGLigne(2,"PrixTarifPanneauSF",STR l_prix_panneau_sf)
		END_IF
		
		SI IsDefined(vs_poignee_ext) = TRUE
			brcSIGLigne(2,"PoigneeChassis",vs_poignee_ext)
		SINON_SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")) = TRUE
			brcSIGLigne(2,"PoigneeChassis",(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_ext.value.name")))
		SINON_SI l_collection = "G9"
			brcSIGLigne(2,"PoigneeChassis","BK1")
		SINON_SI ((l_collection = "G7") OU (l_collection = "G6"))
			SI c_groupe_couleur = "02"
				brcSIGLigne(2,"PoigneeChassis","BP1")
			SINON_SI ((c_groupe_couleur = "06") OU (c_groupe_couleur = "07") OU (c_groupe_couleur = "10") OU (c_groupe_couleur = "12") OU (c_groupe_couleur = "14"))
				brcSIGLigne(2,"PoigneeChassis","BP4")
			SINON
				brcSIGLigne(2,"PoigneeChassis","BP2")
			FIN_SI
		SINON_SI l_collection <> ""
			brcSIGLigne(2,"PoigneeChassis","BS1")
		SINON_SI IsDefined(vs_poignee_klpr) = TRUE
			brcSIGLigne(2,"PoigneeChassis",vs_poignee_klpr)
		SINON_SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_klpr.value.name")) = TRUE
			brcSIGLigne(2,"PoigneeChassis",(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_poignee_klpr.value.name")))
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"PLP") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"PLP") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","PLP")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"BLP") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"BLP") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","BLP")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"BEP") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"BEP") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","BEP")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"PC") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"PC") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","PC")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"PA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"PA") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","PA")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"PL") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"PL") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","PL")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"PLSC") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"PLSC") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","PLSC")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"OBI") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"OBI") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","OBI")
		SINON_SI ((IsInArray(confML.getObjectByCPE("CPE.rootCP.FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE) OU (IsInArray(confML.getObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_options_ouvr"),"FERM-FA") = TRUE))
			brcSIGLigne(2,"PoigneeChassis","FERM-FA")
		SINON_SI IsDefined(s_condamnation_soufflet) = TRUE
			brcSIGLigne(2,"PoigneeChassis",s_condamnation_soufflet)
		SINON_SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_condamnation_soufflet.value.name")) = TRUE
			brcSIGLigne(2,"PoigneeChassis",(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_condamnation_soufflet.value.name")))
		FIN_SI
		
		SI l_design <> ""
			brcSIGLigne(2,"DesignOuvrant",l_design)
		FIN_SI
        
        IF IsDefined(vs_tablier) = TRUE
            brcSIGLigne(2,"Tablier",vs_tablier)
        END_IF
        
        IF IsDefined(vs_manoeuvre) = TRUE
            brcSIGLigne(2,"Manoeuvre",vs_manoeuvre)
			IF vs_manoeuvre = "TR" OR FIND_STR(confML.getObjectByCPE("CPE.rootCP.FO/SC_VOLET_ROULANT.FP/vs_manoeuvre.value.descr")) "manoeuvre de secours" > 0
				brcSIGLigne(2,"TreuilVR", "Oui")
			ELSE
				brcSIGLigne(2,"TreuilVR", "Non")
			END_IF
        END_IF
        
        IF IsDefined(s_habillage_ext) = TRUE
            brcSIGLigne(2,"HabillageExt",s_habillage_ext)
        END_IF
        
        IF IsDefined(vs_serrure) = TRUE
            brcSIGLigne(2,"Verrouillage",vs_serrure)
        ELSE_IF IsDefined(s_serrure_gt) = TRUE
            brcSIGLigne(2,"Verrouillage",s_serrure_gt)
        ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name")) = TRUE
            brcSIGLigne(2,"Verrouillage",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_PM_ACCESSOIRES.FP/vs_serrure.value.name"))
        ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_ACCESSOIRES_GT.FP/s_serrure_gt.value.name")) = TRUE
            brcSIGLigne(2,"Verrouillage",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_ACCESSOIRES_GT.FP/s_serrure_gt.value.name"))
        END_IF
        
        IF IsDefined(c_type_vitrage) = TRUE
            brcSIGLigne(2,"Vitrage",c_type_vitrage)
        ELSE_IF IsDefined(c_type_vitrage_h) = TRUE
            brcSIGLigne(2,"Vitrage",c_type_vitrage_h)
        ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value")) = TRUE
            brcSIGLigne(2,"Vitrage",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage.value"))
        ELSE_IF IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value")) = TRUE
            brcSIGLigne(2,"Vitrage",confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_F_VITRAGE.FP/c_type_vitrage_h.value"))
        END_IF
        
        brcSIGLigne(2,"SFPrices","")
        IF (IsDefined(att_prix_anm) = TRUE)
            brcSIGLigne(3,"ANM0",STR ((ROUND (att_prix_anm * 100)) / 100))
        END_IF
        IF (IsDefined(att_prix_pose) = TRUE)
            brcSIGLigne(3,"POSE",STR ((ROUND (att_prix_pose * 100)) / 100))
        END_IF
        
        IF IsDefined(s_ensemble) = FALSE
            IF ((c_chassis = "P1") OU (c_chassis = "P2E") OU (c_chassis = "P2I"))
                LET l_ProductLine "PEP"
            ELSE_IF c_chassis = "PS1"
                LET l_ProductLine "PS"
            ELSE_IF ((c_chassis = "FA1") OU (c_chassis = "FA2") OU (c_chassis = "FA2I") OU (c_chassis = "FA1_ENT")
                    OU (c_chassis = "FA1_AIR") OU (c_chassis = "FA2_AIR") OU (c_chassis = "FA2I_AIR") OU (c_chassis = "FA1_ENT_AIR")
                    OU (c_chassis = "OB1") OU (c_chassis = "OB2") OU (c_chassis = "OB2I") OU (c_chassis = "OB1_FPI")
                    OU (c_chassis = "OB1_AIR") OU (c_chassis = "OB2_AIR") OU (c_chassis = "OB2I_AIR") OU (c_chassis = "OB1_AIR_FPI")
                    OU (c_chassis = "FS1") OU (c_chassis = "FS2") OU (c_chassis = "FS2I")
                    OU (c_chassis = "CS") OU (c_chassis = "CS_AIR")
                    OU (c_chassis = "GTA1") OU (c_chassis = "GTA2E") OU (c_chassis = "GTA2I") OU (c_chassis = "GTA1-APD") OU (c_chassis = "GTA2E-APD") OU (c_chassis = "GTA2I-APD")
                    OU (c_chassis = "GTF1") OU (c_chassis = "GTF2E") OU (c_chassis = "GTF2I") OU (c_chassis = "GTF1-APD") OU (c_chassis = "GTF2E-APD") OU (c_chassis = "GTF2I-APD"))
                LET l_ProductLine "OF"
            ELSE_IF ((c_chassis  = "FIXE") OU (c_chassis = "FIXE_PAR") OU (c_chassis = "FIXE_DEV"))
                LET l_ProductLine "FX"
            END_IF
        ELSE
            LET l_compteur 1
            TANT_QUE l_compteur <= c_nb_zone
                IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "P2I"))
    				IF l_ProductLine <> "PEP"
						LET l_ProductLine "PEP"
					END_IF
                ELSE_IF confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "PS1"
					IF ((l_ProductLine <> "PS") ET (l_ProductLine <> "PEP"))
						LET l_ProductLine "PS"
					END_IF
                ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA1_ENT")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA1_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA2I_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FA1_ENT_AIR")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB1_FPI")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB1_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB2I_AIR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "OB1_AIR_FPI")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FS1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FS2") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FS2I")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "CS") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "CS_AIR")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA1-APD") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2E-APD") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTA2I-APD")
                        OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF1") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2E") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2I") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF1-APD") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2E-APD") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "GTF2I-APD"))
					IF ((l_ProductLine <> "OF") ET (l_ProductLine <> "PS") ET (l_ProductLine <> "PEP"))
						LET l_ProductLine "OF"
					END_IF
                ELSE_IF ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name")  = "FIXE") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FIXE_PAR") OU (confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[" + STR l_compteur + "].FO/zone.FP/c_chassis.value.name") = "FIXE_DEV"))
					IF l_ProductLine = ""
						LET l_ProductLine "FX"
					END_IF
                END_IF
                
                LET l_compteur l_compteur + 1
            FIN_TANT_QUE
        END_IF
        brcSIGLigne(2,"ProductLine",l_ProductLine)
        IF s_dormant = "KLDOUB"
            LET l_FixedType "NEUF"
        ELSE_IF s_dormant = "KLDOUBDP"
            LET l_FixedType "DEPOSE TOTALE"
        ELSE_IF s_dormant = "KLRENO"
            LET l_FixedType "RENO"
        ELSE
            LET l_FixedType "MULTI SUPPORT"
        END_IF
        brcSIGLigne(2,"FixedType",l_FixedType)

		IF (((l_vg_serie = "KLPM") OU (l_vg_serie = "KLPL")) ET (vg_type_devis = "S")) /* TB le 14/05/18 : ajout KLPL */
			brcSIGLigne(1,"CaracteristiquesMonobloc","")
			brcSIGLigne(2,"Modele",l_nom_modele)
			IF l_semi_fixe <> ""
				brcSIGLigne(2,"ModeleSf",l_semi_fixe)
			END_IF
			IF ((l_plinthe <> "") ET (l_vg_serie = "KLPL")) /* ajout TB le 17/05/18 pour KLPL */
                brcSIGLigne(2,"Plinthe",l_plinthe)
            END_IF
            IF l_ceramique <> ""
                brcSIGLigne(2,"Ceramique",l_ceramique)
            END_IF
            IF l_decor_int_klpl <> ""
                brcSIGLigne(2,"DecorInt",l_decor_int_klpl)
            END_IF
            IF l_motif_ext <> ""
				IF l_motif_ext = "TON"
					LET l_critere l_decor_ext
				ELSE
					LET l_critere l_motif_ext
				END_IF
				LET l_req "SELECT CODEIMPRESSION FROM " + confML.getBdtTableName("TD_IMPRESSION_KLPM")
						+ " WHERE CRITERE = '" + l_critere + "'"
				SQL_QUERY l_req IN "tab_impression"
				LET l_aspect_ext tab_impression[1,0]
				brcSIGLigne(2,"AspectExt",l_aspect_ext)
			END_IF
			/*IF l_motif_int <> ""*/
				IF ((l_motif_int <> "SANS_IMP") ET (l_motif_int <> "SANS_USI") ET (l_motif_int <> ""))
					IF l_motif_int = "IMP_TON"
						LET l_critere l_decor_int
					ELSE
						LET l_critere l_motif_int
					END_IF
					LET l_req "SELECT CODEIMPRESSION FROM " + confML.getBdtTableName("TD_IMPRESSION_KLPM")
							+ " WHERE CRITERE = '" + l_critere + "'"
					SQL_QUERY l_req IN "tab_impression"
					LET l_aspect_int tab_impression[1,0]
				ELSE
					LET l_aspect_int ""
				END_IF
				brcSIGLigne(2,"AspectInt",l_aspect_int)
			/*END_IF*/
			/* IF l_poignee_ext <> "" */
				brcSIGLigne(2,"PoigneeExt",l_poignee_ext)
				IF l_poignee_int <> ""
					brcSIGLigne(2,"PoigneeInt",l_poignee_int)
				ELSE
					brcSIGLigne(2,"PoigneeInt",l_poignee_ext)
				END_IF
			/* END_IF */
			brcSIGLigne(2,"CachePaumelle","STANDARD")
			IF l_couleur_cache <> ""
				brcSIGLigne(2,"CacheCouleur",l_couleur_cache)
			END_IF
			IF l_serrure <> ""
				brcSIGLigne(2,"Serrure",l_serrure)
			END_IF
			IF l_cylindre <> ""
				brcSIGLigne(2,"Cylindre",l_cylindre)
			END_IF
            IF l_cache_cylindre <> "" /* ajout TB le 17/05/18 pour KLPM et KLPL */
                brcSIGLigne(2,"CacheBarillet",l_cache_cylindre)
            END_IF
			IF l_poignee_sf = "O"
				brcSIGLigne(2,"ElementDecoratifSf1",l_poignee_ext)
			END_IF
			IF l_vitrage_tradition <> ""
				brcSIGLigne(2,"ElementDecoratif1",l_vitrage_tradition)
			END_IF
            IF l_commande_LED = "CAPTEUR"
                brcSIGLigne(2,"ElementDecoratif2",l_commande_LED)
            END_IF
            IF l_entrebailleur <> ""
                brcSIGLigne(2,"ElementDecoratif3",l_entrebailleur)
            END_IF
		END_IF
		IF IsDefined(c_sav) = TRUE
			IF c_sav = "PRO"
				brcSIGLigne(1,"CaracteristiquesSav","")

				SI vs_sav_type_ligne = "REJET"
					SI IsDefined(s_ensemble) = TRUE
						SOIT l_longueur_profil confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")
					SINON
						SOIT l_longueur_profil s_largeur
					FIN_SI
				SINON_SI vs_sav_type_ligne = "BATT"
					SI IsDefined(s_ensemble) = TRUE
						SOIT l_longueur_profil confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/c_hauteur_o.value")
					SINON
						SOIT l_longueur_profil c_hauteur
					FIN_SI
				SINON_SI vs_sav_type_ligne = "PARC"
					SI IsDefined(s_ensemble) = TRUE
						SI confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/zone.FP/c_chassis.value.name") = "P2I"
							SOIT l_larg_vant confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_larg_vant.value")
				
							SI IsDefined(confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")) = TRUE
								SOIT l_sens_ens confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_sens.value.name")
							FIN_SI
				
							SI s_dormant = "KLRENO"
								SI ((SOUS_CHAINE s_type_pose 1 1 = "7") OU (SOUS_CHAINE s_type_pose 1 1 = "8") OU (SOUS_CHAINE s_type_pose 1 2 = "13"))
									SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
										SI l_sens_ens = "TD"
											SOIT l_larg_vant (l_larg_vant + 14)
										SINON
											SOIT l_larg_vant (l_larg_vant - 14)
										FIN_SI
									FIN_SI
								SINON_SI SOUS_CHAINE s_type_pose 1 2 = "12"
									SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
										SI l_sens_ens = "TD"
											SOIT l_larg_vant (l_larg_vant + 27)
										SINON
											SOIT l_larg_vant (l_larg_vant - 27)
										FIN_SI
									FIN_SI
								SINON
									SI IsDefined(s_type_fermeture) = TRUE
										SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
											SI l_sens_ens = "TD"
												SOIT l_larg_vant (l_larg_vant + 9)
											SINON
												SOIT l_larg_vant (l_larg_vant - 9)
											FIN_SI
										FIN_SI
									SINON
										SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
											SI l_sens_ens = "TD"
												SOIT l_larg_vant (l_larg_vant + 6)
											SINON
												SOIT l_larg_vant (l_larg_vant - 6)
											FIN_SI
										FIN_SI
									FIN_SI
								FIN_SI
							SINON_SI s_dormant = "KLMS"
								SI SOUS_CHAINE s_type_pose 1 1 = "5"
									SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
										SI l_sens_ens = "TD"
											SOIT l_larg_vant (l_larg_vant + 44)
										SINON
											SOIT l_larg_vant (l_larg_vant - 44)
										FIN_SI
									FIN_SI
								SINON
									SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
										SI l_sens_ens = "TD"
											SOIT l_larg_vant (l_larg_vant + 9)
										SINON
											SOIT l_larg_vant (l_larg_vant - 9)
										FIN_SI
									FIN_SI
								FIN_SI
							SINON
								SI ((s_ensemble = "CADG") OU (s_ensemble = "CAG"))
									SI l_sens_ens = "TD"
										SOIT l_larg_vant (l_larg_vant - 5)
									SINON
										SOIT l_larg_vant (l_larg_vant + 5)
									FIN_SI
								FIN_SI
							FIN_SI
						SINON
							SOIT l_larg_vant ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) / 2)
						FIN_SI
						SOIT l_longueur_profil ((confML.getExistingObjectByCPE("CPE.rootCP.CP/PC_F_ZONE[1].FO/SC_OUVRANT.FP/s_largeur_o.value")) - l_larg_vant)
					SINON
						SI c_chassis = "P2I"
							SOIT l_larg_vant s_larg_vant
						FIN_SI
						SOIT l_longueur_profil (s_largeur - l_larg_vant)
					FIN_SI
				FIN_SI

				brcSIGLigne(2,"Commentaire",(c_code_chassis + " , LG = " + STR l_longueur_profil))
			END_IF
		END_IF
	END_IF
END_IF

DISPLAY "resArray"

TRACE_OFF
END_DEFINE
